function bg_not_complete_before_timeout
{
  # the return values are reversed as this function
  # is true if the background job is NOT complete
  # don't let the double negative fool you :-)
  sleep 1
  if ps -p $! | grep $! >> /dev/null; then
    let count="$1"
    while ps -p $! | grep $! >> /dev/null; do
      if (( $count > 0 )); then
        #echo "  Waiting $count more seconds for completion."
        sleep 6
        let count="count - 6"
      else
        #echo "! Failed to complete after $1 seconds."
        return 0
      fi
    done
    return 1
  fi
  return 1
}

function logwrite
{
  # Write a formatted string to the logfile
  DATESTAMP=`date +"%Y%m%d %H:%M"`
  echo "##LOG:${DATESTAMP}: ${1}"
  return 0
}

### MAIN ###
plugin=$1
hostname=$2
x=0
ruser[$x]="root"
TIMEOUT=10
TMP=/infra/opt/jadis_dev/JADIS/tmp
OUTPUT_DEFAULT="false"
ACCESS=ssh
#
. ./${plugin}
echo "With Default flag not set"
output_header
output_value $rhost $ruser
echo
echo "Default flag=${OUTPUT_DEFAULT}"
echo
OUTPUT_DEFAULT="true"
echo "With Default flag set"
output_header
output_value $rhost $ruser
echo
echo "Default flag=${OUTPUT_DEFAULT}"
#EOF
