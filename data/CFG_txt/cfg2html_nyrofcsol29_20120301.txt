-------------------------------------------------
                                                                         #####
 #    #   #   #  #####    ####   ######   ####    ####    ####   #      #     #
 ##   #    # #   #    #  #    #  #       #    #  #       #    #  #            #
 # #  #     #    #    #  #    #  #####   #        ####   #    #  #       #####
 #  # #     #    #####   #    #  #       #            #  #    #  #      #
 #   ##     #    #   #   #    #  #       #    #  #    #  #    #  #      #
 #    #     #    #    #   ####   #        ####    ####    ####   ###### #######

-------------------------------------------------


    System Hardware and Operating System Summary
       - Hardware and OS Information
       - showrev
       - Hardware Configuration (prtdiag)
    Disk Device Listing
       - Disks
    MPxIO Configuration
       - scsi_vhci.conf
    Solaris Volume Manager (SVM)
       - SVM Version
       - Status of SVM Meta Database
       - SVM Metadevice status
       - SVM Configuration (concise format)
       - SVM Configuration (md.tab format)
    Local File Systems and Swap
       - Versions of /etc/vfstab
       - Contents of vfstab
       - Currently Mounted File Systems
       - Disk Utilization (GB)
       - Swap Device Listing
    NFS Configuration
       - Contents of dfstab
       - Remote file systems mounted via NFS
       - Local file systems shared via NFS
       - Local file systems mounted on remote hosts via NFS
    Network Settings
       - ifconfig -a output
       - Open Ports
       - Routing Table
       - nsswitch.conf
       - resolv.conf
       - Hosts file
       - Netmasks
       - NTP daemon configuraition
    EEPROM
       - EEPROM Settings
       - Versions of /etc/system
       - Contents of /etc/system
    Printers
       - Configured printers
       - Default printer
       - Status printers
    Cron
       - crontabs
       - cron.deny
    System Log
       - syslog.conf
    Password and Group files
       - /etc/passwd
       - /etc/group
       - Errors found in group
    Software
       - Packages Installed
       - Patches Installed
    Resource Limits
       - sysdef
       - ulimit -a
       - Projects Listing (projects -l)
       - Contents of /etc/project
    Services
       - inittab
       - Start-Up Script Listing
       - /etc/rc1.d/S01MOUNTFSYS
       - /etc/rc1.d/S10lu
       - /etc/rc2.d/S01MOUNTFSYS
       - /etc/rc2.d/S01tlm
       - /etc/rc2.d/S05RMTMPFILES
       - /etc/rc2.d/S10lu
       - /etc/rc2.d/S20sysetup
       - /etc/rc2.d/S21perf
       - /etc/rc2.d/S30sysid.net
       - /etc/rc2.d/S40llc2
       - /etc/rc2.d/S42ncakmod
       - /etc/rc2.d/S47pppd
       - /etc/rc2.d/S69inet
       - /etc/rc2.d/S70sckm
       - /etc/rc2.d/S70uucp
       - /etc/rc2.d/S71ldap.client
       - /etc/rc2.d/S71rpc
       - /etc/rc2.d/S71sysid.sys
       - /etc/rc2.d/S72autoinstall
       - /etc/rc2.d/S72directory
       - /etc/rc2.d/S72inetsvc
       - /etc/rc2.d/S72slpd
       - /etc/rc2.d/S72vasgpd
       - /etc/rc2.d/S73cachefs.daemon
       - /etc/rc2.d/S73nfs.client
       - /etc/rc2.d/S74autofs
       - /etc/rc2.d/S74syslog
       - /etc/rc2.d/S74xntpd
       - /etc/rc2.d/S75cron
       - /etc/rc2.d/S75flashprom
       - /etc/rc2.d/S75savecore
       - /etc/rc2.d/S75vasd
       - /etc/rc2.d/S76nscd
       - /etc/rc2.d/S77sf880dr
       - /etc/rc2.d/S80lp
       - /etc/rc2.d/S80spc
       - /etc/rc2.d/S81ipp
       - /etc/rc2.d/S85power
       - /etc/rc2.d/S88sendmail
       - /etc/rc2.d/S88utmpd
       - /etc/rc2.d/S89PRESERVE
       - /etc/rc2.d/S89bdconfig
       - /etc/rc2.d/S90wbem
       - /etc/rc2.d/S91afbinit
       - /etc/rc2.d/S91gfbinit
       - /etc/rc2.d/S91ifbinit
       - /etc/rc2.d/S91jfbinit
       - /etc/rc2.d/S91kfbinit
       - /etc/rc2.d/S91zuluinit
       - /etc/rc2.d/S93cacheos.finish
       - /etc/rc2.d/S94ncalogd
       - /etc/rc2.d/S95IIim
       - /etc/rc2.d/S95lwact
       - /etc/rc2.d/S95networker
       - /etc/rc2.d/S95svm.sync
       - /etc/rc2.d/S98efcode
       - /etc/rc2.d/S98fc-cache
       - /etc/rc2.d/S98sshd-quest
       - /etc/rc2.d/S99audit
       - /etc/rc2.d/S99dtlogin
       - /etc/rc2.d/S99rcapd
       - /etc/rc2.d/S99sneep
       - /etc/rc3.d/S13kdc.master
       - /etc/rc3.d/S14kdc
       - /etc/rc3.d/S15nfs.server
       - /etc/rc3.d/S16boot.server
       - /etc/rc3.d/S34dhcp
       - /etc/rc3.d/S50apache
       - /etc/rc3.d/S52imq
       - /etc/rc3.d/S76snmpdx
       - /etc/rc3.d/S77dmi
       - /etc/rc3.d/S80mipagent
       - /etc/rc3.d/S81volmgt
       - /etc/rc3.d/S84appserv
       - /etc/rc3.d/S89psncollector
       - /etc/rc3.d/S89stosreg
       - /etc/rc3.d/S90samba
       - /etc/rc3.d/S90sthwreg
       - /etc/rc3.d/S91rc.patrol
       - /etc/rcS.d/S10cvc
       - /etc/rcS.d/S29wrsmcfg
       - /etc/rcS.d/S30network.sh
       - /etc/rcS.d/S30rootusr.sh
       - /etc/rcS.d/S33keymap.sh
       - /etc/rcS.d/S35cacheos.sh
       - /etc/rcS.d/S35svm.init
       - /etc/rcS.d/S40standardmounts.sh
       - /etc/rcS.d/S41cachefs.root
       - /etc/rcS.d/S42coreadm
       - /etc/rcS.d/S50devfsadm
       - /etc/rcS.d/S70buildmnttab.sh
       - /etc/rcS.d/S95picld
    Custom
       - HTTPD
       - Lun Map
-----



---=[ Hardware and OS Information ]=--------------------------------------

Manufacturer:     Sun
Model:            Sun Fire V240
Operating System: Solaris 9 9/05 HW s9s_u9wos_06b SPARC
CPU(s):           1x 1               @   0 MHz;  0 Cores  0 Threads
CPU(s):           2x 2               @   0 MHz;  0 Cores  0 Threads
Memory:           8192 MB


---=[ showrev ]=----------------------------------------------------------

Hostname: nyrofcsol29
Hostid: 8331a4b1
Release: 5.9
Kernel architecture: sun4u
Application architecture: sparc
Hardware provider: Sun_Microsystems
Domain: 
Kernel version: SunOS 5.9 Generic 118558-38 Nov 2006


---=[ Hardware Configuration (prtdiag) ]=---------------------------------

System Configuration: Sun Microsystems  sun4u Sun Fire V240
System clock frequency: 167 MHZ
Memory size: 8GB        

==================================== CPUs ====================================
               E$          CPU                    CPU     Temperature
CPU  Freq      Size        Implementation         Mask    Die   Amb.  Status      Location
---  --------  ----------  ---------------------  -----   ----  ----  ------      --------
0    1503 MHz  1MB         SUNW,UltraSPARC-IIIi     3.4     -     -    online      MB/P0
1    1503 MHz  1MB         SUNW,UltraSPARC-IIIi     3.4     -     -    online      MB/P1

================================= IO Devices =================================
Bus     Freq  Slot +      Name +
Type    MHz   Status      Path                          Model
------  ----  ----------  ----------------------------  --------------------
pci     66    MB          pci108e,1648 (network)                           
              okay        /pci@1f,700000/network@2

pci     66    MB          pci108e,1648 (network)                           
              okay        /pci@1f,700000/network@2,1

pci     33    MB          isa/su (serial)                                  
              okay        /pci@1e,600000/isa@7/serial@0,3f8

pci     33    MB          isa/su (serial)                                  
              okay        /pci@1e,600000/isa@7/serial@0,2e8

pci     33    MB          pci10b9,5229 (ide)                               
              okay        /pci@1e,600000/ide@d

pci     66    MB          scsi-pci1000,21 (scsi-2)                         
              okay        /pci@1c,600000/scsi@2

pci     66    MB          scsi-pci1000,21 (scsi-2)                         
              okay        /pci@1c,600000/scsi@2,1

pci     66    MB          pci108e,1648 (network)                           
              okay        /pci@1d,700000/network@2

pci     66    MB          pci108e,1648 (network)                           
              okay        /pci@1d,700000/network@2,1

pci     33    7           isa/rmc-comm-rmc_comm (seria+                    
              okay        /pci@1e,600000/isa@7/rmc-comm@0,3e8

pci     33    10          pciclass,0c0310 (usb)                            
              okay        /pci@1e,600000/usb@a


============================ Memory Configuration ============================
Segment Table:
-----------------------------------------------------------------------
Base Address       Size       Interleave Factor  Contains
-----------------------------------------------------------------------
0x0                4GB               16          BankIDs 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
0x1000000000       4GB               16          BankIDs 16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31

Bank Table:
-----------------------------------------------------------
           Physical Location
ID       ControllerID  GroupID   Size       Interleave Way
-----------------------------------------------------------
0        0             0         256MB           0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
1        0             0         256MB           
2        0             1         256MB           
3        0             1         256MB           
4        0             0         256MB           
5        0             0         256MB           
6        0             1         256MB           
7        0             1         256MB           
8        0             1         256MB           
9        0             1         256MB           
10       0             0         256MB           
11       0             0         256MB           
12       0             1         256MB           
13       0             1         256MB           
14       0             0         256MB           
15       0             0         256MB           
16       1             0         256MB           0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
17       1             0         256MB           
18       1             1         256MB           
19       1             1         256MB           
20       1             0         256MB           
21       1             0         256MB           
22       1             1         256MB           
23       1             1         256MB           
24       1             1         256MB           
25       1             1         256MB           
26       1             0         256MB           
27       1             0         256MB           
28       1             1         256MB           
29       1             1         256MB           
30       1             0         256MB           
31       1             0         256MB           

Memory Module Groups:
--------------------------------------------------
ControllerID   GroupID  Labels         Status
--------------------------------------------------
0              0        MB/P0/B0/D0    
0              0        MB/P0/B0/D1    
0              1        MB/P0/B1/D0    
0              1        MB/P0/B1/D1    
1              0        MB/P1/B0/D0    
1              0        MB/P1/B0/D1    
1              1        MB/P1/B1/D0    
1              1        MB/P1/B1/D1    


---=[ Disks ]=------------------------------------------------------------

DEV    TYPE   SIZE    
c1t0d0 SUN72G   68 GB 
c1t1d0 SUN72G   68 GB 
c1t2d0 SUN72G   68 GB 
c1t3d0 SUN72G   68 GB 


---=[ scsi_vhci.conf ]=---------------------------------------------------

n/a


---=[ SVM Version ]=------------------------------------------------------

VERSION: 11.9.0,REV=2002.04.06.15.27


---=[ Status of SVM Meta Database ]=--------------------------------------

        flags           first blk       block count
     a m  p  luo        16              8192            /dev/dsk/c1t0d0s7
     a    p  luo        8208            8192            /dev/dsk/c1t0d0s7
     a    p  luo        16              8192            /dev/dsk/c1t1d0s7
     a    p  luo        8208            8192            /dev/dsk/c1t1d0s7
 r - replica does not have device relocation information
 o - replica active prior to last mddb configuration change
 u - replica is up to date
 l - locator for this replica was read successfully
 c - replica's location was in /etc/lvm/mddb.cf
 p - replica's location was patched in kernel
 m - replica is master, this is replica selected as input
 W - replica has device write errors
 a - replica is active, commits are occurring to this replica
 M - replica had problem with master blocks
 D - replica had problem with data blocks
 F - replica had format problems
 S - replica is too small to hold current data base
 R - replica had device read errors


---=[ SVM Metadevice status ]=--------------------------------------------

d2: Mirror
    Submirror 0: d12
      State: Okay         
    Submirror 1: d22
      State: Okay         
    Pass: 1
    Read option: roundrobin (default)
    Write option: parallel (default)
    Size: 4853952 blocks (2.3 GB)

d12: Submirror of d2
    State: Okay         
    Size: 4853952 blocks (2.3 GB)
    Stripe 0:
        Device     Start Block  Dbase        State Reloc Hot Spare
        c1t0d0s3          0     No            Okay   Yes 


d22: Submirror of d2
    State: Okay         
    Size: 4853952 blocks (2.3 GB)
    Stripe 0:
        Device     Start Block  Dbase        State Reloc Hot Spare
        c1t1d0s3          0     No            Okay   Yes 


d1: Mirror
    Submirror 0: d11
      State: Okay         
    Submirror 1: d21
      State: Okay         
    Pass: 1
    Read option: roundrobin (default)
    Write option: parallel (default)
    Size: 8395200 blocks (4.0 GB)

d11: Submirror of d1
    State: Okay         
    Size: 8395200 blocks (4.0 GB)
    Stripe 0:
        Device     Start Block  Dbase        State Reloc Hot Spare
        c1t0d0s1          0     No            Okay   Yes 


d21: Submirror of d1
    State: Okay         
    Size: 8395200 blocks (4.0 GB)
    Stripe 0:
        Device     Start Block  Dbase        State Reloc Hot Spare
        c1t1d0s1          0     No            Okay   Yes 


d0: Mirror
    Submirror 0: d10
      State: Okay         
    Submirror 1: d20
      State: Okay         
    Pass: 1
    Read option: roundrobin (default)
    Write option: parallel (default)
    Size: 130018752 blocks (61 GB)

d10: Submirror of d0
    State: Okay         
    Size: 130018752 blocks (61 GB)
    Stripe 0:
        Device     Start Block  Dbase        State Reloc Hot Spare
        c1t0d0s0          0     No            Okay   Yes 


d20: Submirror of d0
    State: Okay         
    Size: 130018752 blocks (61 GB)
    Stripe 0:
        Device     Start Block  Dbase        State Reloc Hot Spare
        c1t1d0s0          0     No            Okay   Yes 


Device Relocation Information:
Device   Reloc  Device ID
c1t1d0   Yes    id1,sd@SSEAGATE_ST373207LSUN72G_0133RE43____________3KT3RE43
c1t0d0   Yes    id1,sd@SSEAGATE_ST373207LSUN72G_10347EPG____________3KT47EPG


---=[ SVM Configuration (concise format) ]=-------------------------------

n/a


---=[ SVM Configuration (md.tab format) ]=--------------------------------

d2 -m d12 d22 1
d12 1 1 c1t0d0s3
d22 1 1 c1t1d0s3
d1 -m d11 d21 1
d11 1 1 c1t0d0s1
d21 1 1 c1t1d0s1
d0 -m d10 d20 1
d10 1 1 c1t0d0s0
d20 1 1 c1t1d0s0


---=[ Versions of /etc/vfstab ]=------------------------------------------

-rw-r--r--   1 root     root         497 Mar 21  2011 /etc/vfstab
-rw-r--r--   1 root     root         310 Dec 22  2006 /etc/vfstab.orig


---=[ Contents of vfstab ]=-----------------------------------------------

#device           device             mount    FS    fsck  mount mount                                
#to               mount              to       fsck  point type  pass                 at boot options 
#                                                                                                    
fd                -                  /dev/fd  fd    -     no    -                                    
/proc             -                  /proc    proc  -     no    -                                    
/dev/md/dsk/d1    -                  -        swap  -     no    -                                    
/dev/md/dsk/d0    /dev/md/rdsk/d0    /        ufs   1     no    logging                              
/dev/md/dsk/d2    /dev/md/rdsk/d2    /var     ufs   1     no    logging                              
/dev/dsk/c1t0d0s3 /dev/rdsk/c1t0d0s3 /var     ufs   1     no    logging                              
swap              -                  /tmp     tmpfs -     yes   -                                    
wfmnfs:/WFMLOGS   -                  /wfmlogs nfs   -     yes   proto=tcp,rw,bg,hard                 


---=[ Currently Mounted File Systems ]=-----------------------------------

/dev/md/dsk/d0 - /           ufs   - no rw,intr,largefiles,logging,xattr,onerror=panic,suid 
/proc          - /proc       proc  - no                                                     
mnttab         - /etc/mnttab mntfs - no                                                     
fd             - /dev/fd     fd    - no rw,suid                                             
/dev/md/dsk/d2 - /var        ufs   - no rw,intr,largefiles,logging,xattr,onerror=panic,suid 
swap           - /var/run    tmpfs - no xattr                                               
swap           - /tmp        tmpfs - no xattr                                               


---=[ Disk Utilization (GB) ]=--------------------------------------------

Filesystem     gbytes used avail capacity Mounted 
/dev/md/dsk/d0   61.1 13.7  46.8      23% /       
/dev/md/dsk/d2    2.3  0.3   1.9      14% /var    
Grand_Totals     63.0 14.0  49.0                  


---=[ Swap Device Listing ]=----------------------------------------------

swapfile             dev  swaplo blocks   free
/dev/md/dsk/d1      85,1      16 8395184 8395184


---=[ Contents of dfstab ]=-----------------------------------------------


#       Place share(1M) commands here for automatic execution
#       on entering init state 3.
#
#       Issue the command '/etc/init.d/nfs.server start' to run the NFS
#       daemon processes and the share commands, after adding the very
#       first entry to this file.
#
#       share [-F fstype] [ -o options] [-d "&lt;text&gt;"] &lt;pathname&gt; [resource]
#       .e.g,
#       share  -F nfs  -o rw=engineering  -d "home dirs"  /export/home2


---=[ Remote file systems mounted via NFS ]=------------------------------

n/a


---=[ Local file systems shared via NFS ]=--------------------------------

n/a


---=[ Local file systems mounted on remote hosts via NFS ]=---------------

n/a


---=[ ifconfig -a output ]=-----------------------------------------------

lo0: flags=1000849&lt;UP,LOOPBACK,RUNNING,MULTICAST,IPv4&gt; mtu 8232 index 1
        inet 127.0.0.1 netmask ff000000 
bge1: flags=1000843&lt;UP,BROADCAST,RUNNING,MULTICAST,IPv4&gt; mtu 1500 index 2
        inet 10.164.66.168 netmask ffffff00 broadcast 10.164.66.0
        ether 0:3:ba:31:a4:b2 


---=[ Open Ports ]=-------------------------------------------------------

      *.111                *.*                0      0 49152      0 LISTEN
      *.6481               *.*                0      0 49152      0 LISTEN
      *.32771              *.*                0      0 49152      0 LISTEN
      *.4045               *.*                0      0 49152      0 LISTEN
      *.25                 *.*                0      0 49152      0 LISTEN
      *.25                 *.*                0      0 49152      0 LISTEN
      *.587                *.*                0      0 49152      0 LISTEN
      *.5987               *.*                0      0 49152      0 LISTEN
      *.898                *.*                0      0 49152      0 LISTEN
      *.32774              *.*                0      0 49152      0 LISTEN
      *.5988               *.*                0      0 49152      0 LISTEN
      *.32775              *.*                0      0 49152      0 LISTEN
      *.9010               *.*                0      0 49152      0 LISTEN
      *.22                 *.*                0      0 49152      0 LISTEN
      *.22                 *.*                0      0 49152      0 LISTEN
      *.32778              *.*                0      0 49152      0 LISTEN
      *.32779              *.*                0      0 49152      0 LISTEN
      *.7938               *.*                0      0 49152      0 LISTEN
      *.7937               *.*                0      0 49152      0 LISTEN
      *.10128              *.*                0      0 49152      0 LISTEN
      *.12000              *.*                0      0 49152      0 LISTEN
      *.12000              *.*                0      0 49152      0 LISTEN
      *.9100               *.*                0      0 49152      0 LISTEN
      *.2809               *.*                0      0 49152      0 LISTEN
      *.8880               *.*                0      0 49152      0 LISTEN
      *.1099               *.*                0      0 49152      0 LISTEN
      *.54876              *.*                0      0 49152      0 LISTEN
      *.9060               *.*                0      0 49152      0 LISTEN
      *.9080               *.*                0      0 49152      0 LISTEN
      *.9043               *.*                0      0 49152      0 LISTEN
      *.9443               *.*                0      0 49152      0 LISTEN
      *.80                 *.*                0      0 49152      0 LISTEN
      *.5060               *.*                0      0 49152      0 LISTEN
      *.5050               *.*                0      0 49152      0 LISTEN
      *.5053               *.*                0      0 49152      0 LISTEN
      *.25                              *.*                             0      0 49152      0 LISTEN           
      *.22                              *.*                             0      0 49152      0 LISTEN           
      *.12000                           *.*                             0      0 49152      0 LISTEN           
      *.80                              *.*                             0      0 49152      0 LISTEN           


---=[ Routing Table ]=----------------------------------------------------

                                                                                                        
IRE                  Table:          IPv4                                                               
Destination          Mask            Gateway              Device Mxfrg   Rtt Ref Flg         Out In/Fwd 
-------------------- --------------- -------------------- ------ ----- ----- --- ---       ----- ------ 
10.164.66.0          255.255.255.0   10.164.66.168        bge1   1500*     0   1 U          8321      0 
default              0.0.0.0         10.164.66.5          1500*  0         1  UG 402855        0        
127.0.0.1            255.255.255.255 127.0.0.1            lo0    8232*   213   6 UH     44551683      0 


---=[ nsswitch.conf ]=----------------------------------------------------

passwd:     files vas3
group:      files vas3
hosts:      dns files
ipnodes:    files
networks:   files
protocols:  files
rpc:        files
ethers:     files
netmasks:   files
bootparams: files
publickey:  files
netgroup:   files
automount:  files
aliases:    files
services:   files
sendmailvars:   files
printers:       user files
auth_attr:  files
prof_attr:  files
project:    files


---=[ resolv.conf ]=------------------------------------------------------

domain     czncorp.com                           
search     czncorp.com   fcinternal.net corp.pvt 
nameserver 10.160.64.242                         
nameserver 10.160.64.243                         
nameserver 10.32.1.49                            
options    retrans:1     retry:1                 


---=[ Hosts file ]=-------------------------------------------------------

#
# Internet host table
#
127.0.0.1               localhost
10.164.66.168   nyrofcsol29     nyrofcsol29.czncorp.com  loghost
10.160.71.105   nyrofcsol29-gb
10.160.110.57   nyrofcsol29-prov


---=[ Netmasks ]=---------------------------------------------------------

10.164.66.0 255.255.255.0 


---=[ NTP daemon configuraition ]=----------------------------------------

server nyrontptt01
server nyrontptt02


---=[ EEPROM Settings ]=--------------------------------------------------

asr-policy=normal
test-args: data not available.
diag-passes=1
local-mac-address?=true
fcode-debug?=false
scsi-initiator-id=7
oem-logo: data not available.
oem-logo?=false
oem-banner: data not available.
oem-banner?=false
ansi-terminal?=true
screen-#columns=80
screen-#rows=34
ttyb-rts-dtr-off=false
ttyb-ignore-cd=true
ttya-rts-dtr-off=false
ttya-ignore-cd=true
ttyb-mode=9600,8,n,1,-
ttya-mode=9600,8,n,1,-
output-device=ttya
input-device=ttya
auto-boot-on-error?=false
error-reset-recovery=sync
load-base=16384
auto-boot?=true
network-boot-arguments: data not available.
boot-command=boot
diag-file: data not available.
diag-device=net
boot-file: data not available.
boot-device=rootdisk rootmirror net
use-nvramrc?=true
nvramrc=devalias rootmirror /pci@1c,600000/scsi@2/disk@1,0
devalias rootdisk /pci@1c,600000/scsi@2/disk@0,0
devalias bootmirror /pci@1c,600000/scsi@2/disk@1,0
." ChassisSerialNumber FN62120209 " cr
security-mode=none
security-password: data not available.
security-#badlogins=0
verbosity=normal
diag-trigger=error-reset power-on-reset 
service-mode?=false
diag-script=normal
diag-level=min
diag-switch?=false


---=[ Versions of /etc/system ]=------------------------------------------

-rw-r--r--   1 root     sys         2193 Dec 22  2006 /etc/system


---=[ Contents of /etc/system ]=------------------------------------------


* Begin MDD root info (do not edit)
forceload: misc/md_trans
forceload: misc/md_raid
forceload: misc/md_hotspares
forceload: misc/md_sp
forceload: misc/md_stripe
forceload: misc/md_mirror
forceload: drv/pcisch
forceload: drv/glm
forceload: drv/sd
rootdev:/pseudo/md@0:0,0,blk
* End MDD root info (do not edit)


---=[ Configured printers ]=----------------------------------------------

scheduler is not running
no system default destination


---=[ Default printer ]=--------------------------------------------------

no system default destination


---=[ Status printers ]=--------------------------------------------------

scheduler is not running
no system default destination


---=[ crontabs ]=---------------------------------------------------------


-=[ Crontab entry for user AutoMon ]=-

#
### BEGIN lines added by LIpatrol ###
0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58 * * * * /infra/opt/bmc/PATROL/lib/bin/startAutoCron.sh &gt;/dev/null
### END lines added by LIpatrol ###
0,5,10,15,20,25,30,35,40,45,50,55 * * * * /infra/opt/bmc/PATROL/lib/bin/MetricSnap.sh &gt;/dev/null 2&gt;&amp;1
2,7,12,17,22,27,32,37,42,47,52,57 * * * * /infra/opt/bmc/PATROL/lib/bin/pingServers.sh &gt;/dev/null 2&gt;&amp;1

-=[ Crontab entry for user adm ]=-

#ident  "@(#)adm        1.5     92/07/14 SMI"   /* SVr4.0 1.2   */
#
# The adm crontab file should contain startup of performance collection if
# the profiling and performance feature has been installed.
#

-=[ Crontab entry for user jtt996 ]=-

40 0 * * 2-6 cd /home/jtt996/collect;./getlogs.pl
16 0 * * 2-6 cd /home/jtt996/collect;./collect.sh

-=[ Crontab entry for user lp ]=-

#ident  "@(#)lp 1.11    01/11/05 SMI"
#
#  At 03:13am on Sundays:
#  Move a weeks worth of 'requests' to 'requests.1'.
#  If there was a 'requests.1' move it to 'requests.2'.
#  If there was a 'requests.2' then it is lost.
#
13 3 * * 0 cd /var/lp/logs; if [ -f requests ]; then if [ -f requests.1 ]; then /bin/mv requests.1 requests.2; fi; /usr/bin/cp requests requests.1; &gt;r
#
#  Rotating of the "lpsched" log files is handled by logadm(1M).
#

-=[ Crontab entry for user pdheller ]=-

# Viryanet perf check
#0 * * * * /home/pdheller/viryanet/prstat-check.sh &gt;prstat.log
#5,10,15 8,15 * * * /home/pdheller/viryanet/prstat-check.sh &gt;prstat.log

-=[ Crontab entry for user root ]=-

#ident  "@(#)root       1.20    01/11/06 SMI"
#
# The root crontab should be used to perform accounting data collection.
#
# The rtc command is run to adjust the real time clock if and when
# daylight savings time changes.
#
10 3 * * * /usr/sbin/logadm
15 3 * * 0 /usr/lib/fs/nfs/nfsfind
1 2 * * * [ -x /usr/sbin/rtc ] &amp;&amp; /usr/sbin/rtc -c &gt; /dev/null 2&gt;&amp;1
30 3 * * * [ -x /usr/lib/gss/gsscred_clean ] &amp;&amp; /usr/lib/gss/gsscred_clean
#10 3 * * * /usr/lib/krb5/kprop_script ___slave_kdcs___
# *** Viryanet *******
00 22 * * * /opt/Scripts/vnet_logs.ksh
30 23 * * 0-6 /opt/Scripts/AccessLogRotate.sh &gt; /dev/null 2&gt;&amp;1
#
# FLAR process for DR - disabled on 04/01/11 as Oracle infrastructure
# platform is moving and new platform does not have sufficient 
# internal storage and Frontier does not want to incur the expense
# of SAN storage
#05 05 * * * /home/smod/bin/mkflar
#
### cfg2html ####################
## Run cfg2html to gather server information
15 01 * * * /infra/opt/cfg2html/bin/run_cfg2html &gt; /infra/opt/cfg2html/log/cfg2html.log 2&gt;&amp;1 
# VGP (vgp_unixext) Crontab Section Start ( DO NOT EDIT! )
10 00 13 9 * touch /var/opt/quest/vas/.nss_vas_no_reuse;chown root /var/opt/quest/vas/.nss_vas_no_reuse; chgrp 0 /var/opt/quest/vas/.nss_vas_no_reuse;
# VGP (vgp_unixext) Crontab Section End

-=[ Crontab entry for user saa759 ]=-

# 15 1 * * * /home/saa759/stats.sh
#0 0 * * * /home/saa759/nicstat/nicstat.sh
0 0 * * * /home/saa759/sysperf/sysperfstat.sh

-=[ Crontab entry for user sys ]=-

#ident  "@(#)sys        1.5     92/07/14 SMI"   /* SVr4.0 1.2   */
#
# The sys crontab should be used to do performance collection. See cron
# and performance manual pages for details on startup.
#
0 * * * 0-6 /usr/lib/sa/sa1
#20,40 8-17 * * 1-5 /usr/lib/sa/sa1
5,10,15,20,25,30,35,40,45,50,55 * * * 1-5 /usr/lib/sa/sa1
5 18 * * 1-5 /usr/lib/sa/sa2 -s 8:00 -e 18:01 -i 1200 -A

-=[ Crontab entry for user uucp ]=-

#
#ident  "@(#)uudemon.crontab    1.5     97/12/09 SMI"
#
# This crontab is provided as a sample. For systems
# running UUCP edit the time schedule to suit, uncomment 
# the following lines, and use crontab(1) to activate the
# new schedule.
#
#48 8,12,16 * * * /usr/lib/uucp/uudemon.admin
#20 3 * * * /usr/lib/uucp/uudemon.cleanup
#0 * * * * /usr/lib/uucp/uudemon.poll
#11,41 * * * * /usr/lib/uucp/uudemon.hour

-=[ Crontab entry for user v_bbb547 ]=-


---=[ cron.deny ]=--------------------------------------------------------

daemon
bin
smtp
nuucp
listen
nobody
noaccess


---=[ syslog.conf ]=------------------------------------------------------

#ident  "@(#)syslog.conf        1.5     98/12/14 SMI"   /* SunOS 5.0 */
#
# Copyright (c) 1991-1998 by Sun Microsystems, Inc.
# All rights reserved.
#
# syslog configuration file.
#
# This file is processed by m4 so be careful to quote (`') names
# that match m4 reserved words.  Also, within ifdef's, arguments
# containing commas must be quoted.
#
*.err;kern.notice;auth.notice                   /dev/sysmsg
*.err;kern.debug;daemon.notice;mail.crit        /var/adm/messages

*.alert;kern.err;daemon.err                     operator
*.alert                                         root

*.emerg                                         *

# if a non-loghost machine chooses to have authentication messages
# sent to the loghost machine, un-comment out the following line:
#auth.notice                    ifdef(`LOGHOST', /var/log/authlog, @loghost)

mail.debug                      ifdef(`LOGHOST', /var/log/syslog, @loghost)
# local2.info   /var/log/sudo.log
local2.debug    /var/log/sudo.log

#
# non-loghost machines will use the following lines to cause "user"
# log messages to be logged locally.
#
ifdef(`LOGHOST', ,
user.err                                        /dev/sysmsg
user.err                                        /var/adm/messages
user.alert                                      `root, operator'
user.emerg                                      *
)


---=[ /etc/passwd ]=------------------------------------------------------

root     x     0     1 Super-User                                                                                      /                     /sbin/sh 
vzpatrol x     0     4 BMC Patrol User                                                                                 /dev/null             /usr/bin/
daemon   x     1     1                                                                                                 /                              
bin      x     2     2                                                                                                 /usr/bin                       
sys      x     3     3                                                                                                 /                              
adm      x     4     4 Admin                                                                                           /var/adm                       
uucp     x     5     5 uucp Admin                                                                                      /usr/lib/uucp                  
nuucp    x     9     9 uucp Admin                                                                                      /var/spool/uucppublic /usr/lib/
smmsp    x    25    25 SendMail Message Submission Program                                                             /                              
listen   x    37     4 Network Admin                                                                                   /usr/net/nls                   
lp       x    71     8 Line Printer Admin                                                                              /usr/spool/lp                  
svctag   x    95    12 Service Tag UID                                                                                 /                              
mel      x  1010   859 Mel test account                                                                                /home/mel             /bin/bash
pdheller x  4505  4500 PD Heller,180 S. Clinton,999-999-9999,C232848,Paul.Heller,sun.com,SMOD                          /home/pdheller        /usr/bin/
rams     x  4508  4500 Ramachandran Sikkanan,Bangalore,011-91-9940679675,38520,ramachandran.sikkanan,oracle.com,ORACLE /home/rams            /usr/bin/
cfg2html x  4545  4545 cfg2html transfer,,999-999-9999,,,,SMOD                                                         /home/cfg2html        /usr/bin/
vnet     x 10249 10071 Viryanet Admin Account                                                                          /home/vnet            /bin/ksh 
AutoMon  x 15015     4 BMC Default User                                                                                /infra/opt/bmc        /usr/bin/
caputil  x 40557     4 BMC Best1 Default User                                                                          /infra/opt/best1      /usr/bin/
sshd     x 55064 10022 sshd privsep                                                                                    /var/empty            /bin/fals
nobody   x 60001 60001 Nobody                                                                                          /                              
noaccess x 60002 60002 No Access User                                                                                  /                              
nobody4  x 65534 65534 SunOS 4.x Nobody                                                                                /                              


---=[ /etc/group ]=-------------------------------------------------------

root          0 root                              
other         1                                   
bin           2 root,bin,daemon                   
sys           3 root,bin,sys,adm,caputil,vzpatrol 
adm           4 root,adm,daemon                   
uucp          5 root,uucp                         
mail          6 root                              
tty           7 root,adm                          
lp            8 root,lp,adm                       
nuucp         9 root,nuucp                        
staff        10                                   
daemon       12 root,daemon                       
sysadmin     14                                   
smmsp        25 smmsp                             
unixadm     859                                   
dba         898 AutoMon                           
smod       4500                                   
smops      4510                                   
rom        4545                                   
sshd      10022                                   
viryanet  10071                                   
nobody    60001                                   
noaccess  60002                                   
nogroup   65534                                   


---=[ Errors found in group ]=--------------------------------------------



bin::2:root,bin,daemon
        bin - Duplicate logname entry (gid first occurs in passwd entry)


sys::3:root,bin,sys,adm,caputil,vzpatrol
        sys - Duplicate logname entry (gid first occurs in passwd entry)


adm::4:root,adm,daemon
        adm - Duplicate logname entry (gid first occurs in passwd entry)


uucp::5:root,uucp
        uucp - Duplicate logname entry (gid first occurs in passwd entry)


lp::8:root,lp,adm
        lp - Duplicate logname entry (gid first occurs in passwd entry)


nuucp::9:root,nuucp
        nuucp - Duplicate logname entry (gid first occurs in passwd entry)


smmsp::25:smmsp
        smmsp - Duplicate logname entry (gid first occurs in passwd entry)


---=[ Packages Installed ]=-----------------------------------------------

monitoring  ILMT-TAD4D-agent                 ILMT-TAD4D-agent
system      IPLTadcon                        Administration Server Console
system      IPLTadman                        Administration Server Documentation
system      IPLTadmin                        Administration Server
system      IPLTcons                         Console Client Base
system      IPLTdscon                        Directory Server Console
system      IPLTdsman                        Directory Server Documentation
system      IPLTdsr                          Directory Server (root)
system      IPLTdsu                          Directory Server (usr)
system      IPLTjss                          Network Security Services for Java
system      IPLTnls                          Nationalization Languages and Localization Support
system      IPLTnspr                         Portable Runtime Interface
system      IPLTnss                          Network Security Services
system      IPLTpldap                        PerLDAP
application LGTOclnt                         NetWorker for Solaris (Backup/Recover) Client
automation  LIbstone                         Best/1 7.5.10 binary package for Solaris
automation  LIbstone0                        Best/1 7.5.10 Agent Patch(001) package for Solaris
automation  LIpatrol                         BMC Patrol
automation  LIpatrol2                        BMC Patrol
application MOZfirefox                       firefox 2.0.0.20 for Solaris 8
system      NATEvplr                         Nature Tech platform links
system      NATEvplu                         Nature Tech usr/platform links
application NSCPcom                          Netscape Communicator
system      NSCPeu8cm                        American English (UTF-8) Netscape Communicator Localization
application QSFTossh                         quest-openssh 4.5p1_q1.116
application QSFTsudo                         QSFTsudo 1.6.8p12q76
application RICHPse                          The SymbEL Interpreter
application SMCgcc                           gcc
application SMCossh421                       openssh
application SMCossl8a                        openssl
application SMCzlib                          zlib
system      SMEvplr                          SME platform links
system      SMEvplu                          SME usr/platform links
system      SUNW1251f                        Russian 1251 fonts
system      SUNW1394h                        Sun IEEE1394 Framework Header Files
system      SUNW1394x                        Sun IEEE1394 Framework (64-bit)
ALE         SUNW5ttf                         Traditional Chinese BIG5 True Type Fonts Package
ALE         SUNW5xmft                        Traditional Chinese (BIG5) X Windows Platform minimum required Fonts Package
system      SUNWGlib                         GLIB - Library of useful routines for C programming
system      SUNWGtkr                         GTK - The GIMP Toolkit (Root)
system      SUNWGtku                         GTK - The GIMP Toolkit (Usr)
system      SUNWTcl                          Tcl - Tool Command Language
system      SUNWTiff                         libtiff - library for reading and writing TIFF
GNOME2      SUNWTiffx                        libtiff - library for reading and writing TIFF (64-bit)
system      SUNWTk                           Tk - TCL GUI Toolkit
system      SUNWa2psr                        a2ps - GNU Any to PostScript filter (root)
system      SUNWa2psu                        a2ps - GNU Any to PostScript filter (user)
system      SUNWaccr                         System Accounting, (Root)
system      SUNWaccu                         System Accounting, (Usr)
system      SUNWaclg                         Apache Common Logging
system      SUNWadmap                        System administration applications
system      SUNWadmc                         System administration core libraries
system      SUNWadmfw                        System &amp; Network Administration Framework
system      SUNWadmj                         Admin/Install Java Extension Libraries
system      SUNWadmr                         System &amp; Network Administration Root
system      SUNWafb                          Elite3D Graphics System Software/Device Driver
system      SUNWafbcf                        Elite3D Graphics Configuration Software
system      SUNWafbr                         Elite3D Graphics System Software (Root)
application SUNWafbw                         Elite3D Graphics Window System Support
system      SUNWafbx                         Elite3D Graphics System Software/Device Driver (64-bit)
ALE         SUNWale                          Asian Language Environment Common Files
ALE         SUNWaled                         Asian Language Environment Common Man Pages
ALE         SUNWalex                         Asian Language Environment Common Files (64-bit)
system      SUNWant                          Jakarta ANT
system      SUNWapchd                        Apache Web Server Documentation
system      SUNWapchr                        Apache Web Server (root)
system      SUNWapchu                        Apache Web Server (usr)
system      SUNWapct                         ABI Application Certification Tools
system      SUNWarc                          Archive Libraries
system      SUNWarcx                         Archive Libraries (64-bit)
system      SUNWarrf                         X11 Arabic required fonts
system      SUNWasac                         Sun ONE Application Server Admin Client
system      SUNWascmn                        Sun ONE Application Server (common)
system      SUNWasdem                        Sun ONE Application Server Sample Applications
system      SUNWasman                        Sun ONE Application Server Manual Pages
system      SUNWasr                          Sun ONE Application Server (root)
system      SUNWast                          Automated Security Enhancement Tools
system      SUNWasu                          Sun ONE Application Server (usr)
system      SUNWatfsr                        AutoFS, (Root)
system      SUNWatfsu                        AutoFS, (Usr)
system      SUNWauda                         Audio Applications
system      SUNWaudd                         Audio Drivers
system      SUNWauddx                        Audio Drivers (64-bit)
system      SUNWaudf                         Audio Sound Files
system      SUNWaudh                         Audio Header Files
system      SUNWaudit                        AuditService Implementation
system      SUNWauditx                       AuditService Implementation (64-bit)
system      SUNWbash                         GNU Bourne-Again shell (bash)
system      SUNWbcp                          SunOS 4.x Binary Compatibility
system      SUNWbip                          Basic IP commands (Usr)
system      SUNWbnur                         Networking UUCP Utilities, (Root)
system      SUNWbnuu                         Networking UUCP Utilities, (Usr)
system      SUNWbsr                          Boot Server daemons (Root)
system      SUNWbsu                          Boot Server daemons (Usr)
system      SUNWbtool                        CCS tools bundled with SunOS
system      SUNWbtoox                        CCS libraries bundled with SunOS (64-bit)
system      SUNWbzip                         The bzip compression utility
system      SUNWbzipx                        The bzip compression library (64-bit)
system      SUNWcar                          Core Architecture, (Root)
system      SUNWcarx                         Core Architecture, (Root) (64-bit)
system      SUNWcdrw                         utility for writing to CD-R/RW and DVD{+-}R/RW DISKs
system      SUNWcea                          Sun GigaSwift Ethernet Adapter Driver 32 bit adb Macros
system      SUNWceax                         Sun GigaSwift Ethernet Adapter Driver 64 bit adb Macros
system      SUNWced                          Sun GigaSwift Ethernet Adapter (32-bit Driver)
system      SUNWcedu                         Sun GigaSwift Ethernet Adapter Driver Headers
system      SUNWcedx                         Sun GigaSwift Ethernet Adapter (64-bit Driver)
system      SUNWcg6                          GX (cg6) Device Driver
system      SUNWcg6h                         GX (cg6) Header Files
system      SUNWcg6x                         GX (cg6) Device Driver (64-bit)
ALE         SUNWciu8                         Simplified Chinese (EUC) iconv modules for UTF-8
ALE         SUNWciu8x                        Simplified Chinese (EUC) iconv modules for UTF-8 (64-bit)
system      SUNWcpc                          CPU Performance Counter driver
system      SUNWcpcu                         CPU Performance Counter libraries and utilities
system      SUNWcpcux                        CPU Performance Counter libraries and utilities (64-bit)
system      SUNWcpcx                         CPU Performance Counter driver (64-bit)
system      SUNWcpp                          Solaris cpp
system      SUNWcpr                          Suspend, Resume package
system      SUNWcprx                         Suspend, Resume package (64-bit)
system      SUNWcrsc                         Simplified Chinese (EUC) Remote System Control
system      SUNWcrscd                        Simplified Chinese (EUC) Remote System Control User Guide
system      SUNWcrscj                        Simplified Chinese (EUC) Remote System Control GUI
system      SUNWcsd                          Core Solaris Devices
system      SUNWcsl                          Core Solaris, (Shared Libs)
system      SUNWcslx                         Core Solaris Libraries (64-bit)
system      SUNWcsr                          Core Solaris, (Root)
system      SUNWcstl                         Apptrace Utility
system      SUNWcstlx                        Apptrace Utility (64-bit)
system      SUNWcsu                          Core Solaris, (Usr)
system      SUNWcsxu                         Core Solaris (Usr) (64-bit)
system      SUNWcti2x                        Netra ct I2C and System Drivers (64-bit)
system      SUNWctlu                         Print utilities for CTL locales
CTL         SUNWctpls                        Portable layout services for Complex Text Layout support
CTL         SUNWctplx                        Portable layout services for CTL (64-bit)
ALE         SUNWcttf                         Simplified Chinese (EUC) True Type Fonts
system      SUNWcvc                          Network Console
system      SUNWcvcr                         Network Console daemon and rc script
system      SUNWcvcx                         Network Console (64-bit)
ALE         SUNWcxmft                        Simplified Chinese (EUC) X Windows Platform minimum Required Fonts
system      SUNWdclnt                        Solaris Diskless Client Management Application
system      SUNWdcsr                         Domain Configuration Server, (Root)
system      SUNWdcsu                         Domain Configuration Server
system      SUNWdersc                        German Remote System Control
GNOME2      SUNWdesktop-media-player         Desktop Media Player - platform dependent files, /usr filesystem
GNOME2      SUNWdesktop-media-player-share   Desktop Media Player - platform independent files, /usr/share
system      SUNWdfb                          Dumb Frame Buffer Device Drivers
system      SUNWdfbh                         Dumb Frame Buffer Header Files
system      SUNWdhcm                         DHCP Manager
system      SUNWdhcsb                        Binary File Format Data Module for BOOTP/DHCP Services
system      SUNWdhcsr                        BOOTP/DHCP Server Services, (Root)
system      SUNWdhcsu                        BOOTP/DHCP Server Services, (Usr)
system      SUNWdial                         Buttons/Dials Streams Module
application SUNWdialh                        Buttons/Dials Header Files
system      SUNWdialx                        Buttons/Dials Streams Module (64-bit)
system      SUNWdmfex                        Sun Davicom 10/100Mb Ethernet Driver (64-bit)
system      SUNWdoc                          Documentation Tools
system      SUNWdpl                          Developer Profiled Libraries
system      SUNWdplx                         Developer Profiled Libraries (64-bit)
system      SUNWdrcrx                        Dynamic Reconfiguration Modules for Sun Fire 15000 (64-bit)
system      SUNWdrr                          Dynamic Reconfiguration Modules for Sun Enterprise 10000
system      SUNWdrrx                         Dynamic Reconfiguration Modules for Sun Enterprise 10000 (64-bit)
system      SUNWdrscd                        German Remote System Control User Guide
system      SUNWdrscj                        German Remote System Control GUI
system      SUNWdtab                         CDE DTBUILDER
system      SUNWdtbas                        CDE application basic runtime environment
system      SUNWdtbax                        CDE application basic runtime environment (64-bit)
system      SUNWdtcor                        Solaris Desktop /usr/dt filesystem anchor
system      SUNWdtct                         UTF-8 Code Conversion Tool
system      SUNWdtdem                        CDE DEMOS
system      SUNWdtdmn                        CDE daemons
system      SUNWdtdst                        CDE Desktop Applications
system      SUNWdtdte                        Solaris Desktop Login Environment
system      SUNWdtezt                        Solaris Desktop Extensions Applications
system      SUNWdthe                         CDE HELP RUNTIME
system      SUNWdthed                        CDE HELP DEVELOPER ENVIRONMENT
system      SUNWdthev                        CDE HELP VOLUMES
system      SUNWdthez                        Desktop Power Pack Help Volumes
system      SUNWdticn                        CDE icons
system      SUNWdtim                         Solaris CDE Image Viewer
system      SUNWdtinc                        CDE Includes
system      SUNWdtjxt                        Java Extensions
system      SUNWdtlog                        System boot for Desktop Login
system      SUNWdtma                         CDE man pages
system      SUNWdtmad                        CDE developer man pages
system      SUNWdtmaz                        Desktop Power Pack man pages
system      SUNWdtnsc                        Netscape Componentization Support for CDE
system      SUNWdtscm                        CDE Dtpower Schemes (Root)
system      SUNWdtwm                         CDE DESKTOP WINDOW MANAGER
system      SUNWefclx                        Embedded FCode Libraries (64-bit)
system      SUNWefcr                         Embedded FCode Interpreter (Root)
system      SUNWefcux                        Embedded FCode Interpreter (64-bit)
system      SUNWefcx                         Embedded FCode Interpreter Drivers (64-bit)
system      SUNWeridx                        Sun RIO 10/100 Mb Ethernet Drivers (64-bit)
system      SUNWerscd                        Spanish Remote System Control User Guide
system      SUNWerscj                        Spanish Remote System Control GUI
system      SUNWespgs                        espgs - ESP GhostScript
system      SUNWesrsc                        Spanish Remote System Control
system      SUNWesu                          Extended System Utilities
system      SUNWesxu                         Extended System Utilities (64-bit)
system      SUNWeu8df                        American English/UTF-8 Core Desktop Files
system      SUNWeu8os                        American English/UTF-8 L10N For OS Environment User Files
system      SUNWeu8ox                        American English/UTF-8 L10N For OS Env User Files (64-bit)
system      SUNWeudba                        UTF-8 L10N for CDE Base
system      SUNWeudbd                        UTF-8 L10N for CDE Dtbuilder
system      SUNWeudda                        UTF-8 L10N For CDE Desktop Applications
system      SUNWeudhr                        UTF-8 L10N For CDE Help Runtime
system      SUNWeudhs                        UTF-8 L10N For CDE Help Runtime
system      SUNWeudis                        UTF-8 L10N For CDE Icons
system      SUNWeudiv                        UTF-8 L10N For Desktop Imagetool
system      SUNWeudlg                        UTF-8 L10N For CDE Desktop Login
system      SUNWeudmg                        UTF-8 L10N For Desktop Window Manager
system      SUNWeuezt                        English UTF-8 L10N For Desktop Power Pack Applications
system      SUNWeuhed                        UTF-8 L10N For CDE Help Developer Environment
system      SUNWeuluf                        UTF-8 L10N For Language Environment User Files
system      SUNWeulux                        UTF-8 L10N For Language Environment User Files (64-bit)
system      SUNWeuodf                        UTF-8 Core OPENLOOK Desktop Files
system      SUNWeurf                         Global fonts
system      SUNWeusru                        English UTF-8 L10N For Solaris User Registration
system      SUNWeuxwe                        UTF-8 X Window Environment
application SUNWexplo                        Oracle Explorer Data Collector
application SUNWexplu                        Oracle Explorer Data Collector Config Files
system      SUNWfac                          Framed Access Command Environment
application SUNWfbc                          Frame Buffer Configuration Utility
system      SUNWfcip                         Sun FCIP IP/ARP over FibreChannel Device Driver
system      SUNWfcipx                        Sun FCIP IP/ARP over FibreChannel Device Driver (64-bit)
system      SUNWfcp                          Sun FCP SCSI Device Driver
system      SUNWfcpx                         Sun FCP SCSI Device Driver (64-bit)
system      SUNWfctl                         Sun Fibre Channel Transport layer
system      SUNWfctlx                        Sun Fibre Channel Transport layer (64-bit)
system      SUNWfdl                          Font Downloader
system      SUNWffb                          Creator Graphics System Software/Device Driver
application SUNWffbcf                        Creator Graphics Configuration Software
application SUNWffbw                         Creator Graphics Window System Support
system      SUNWffbx                         Creator Graphics System Software/Device Driver (64-bit)
system      SUNWffiltersr                    foomatic-filters - Foomatic Print Filters (root)
system      SUNWffiltersu                    foomatic-filters - Foomatic Print Filters (user)
system      SUNWfns                          Federated Naming System
system      SUNWfnsx                         Federated Naming System (64-bit)
system      SUNWfnsx5                        FNS Support For X.500 Directory Context
system      SUNWfnx5x                        FNS Support For X.500 Directory Context (64-bit)
system      SUNWfontconfig                   Fontconfig library
system      SUNWfontconfig-64                Fontconfig library (64-bit)
system      SUNWfontconfig-docs              Fontconfig library documentation
system      SUNWfontconfig-root              Fontconfig library configuration files
system      SUNWfppd                         foomatic_ppds - Foomatic Print PPDs
system      SUNWfreetype2                    FreeType 2.1.2 Font library
system      SUNWfreetype2-64                 FreeType 2.1.2 Font library (64-bit)
system      SUNWfrrsc                        French Remote System Control
system      SUNWfrscd                        French Remote System Control User Guide
system      SUNWfrscj                        French Remote System Control GUI
system      SUNWfruid                        FRU ID Utility and Library (Usr)
system      SUNWfruip                        FRU ID Platform Modules (Usr)
system      SUNWfruix                        FRU ID Library (64-bit)
system      SUNWfss                          Fair Share Scheduler
system      SUNWfssx                         Fair Share Scheduler (64-bit)
system      SUNWftdur                        ftSafe developer utilities package (Root)
system      SUNWftduu                        ftSafe developer utilities package (Usr)
system      SUNWftdux                        ftSafe developer utilities package (Root) (64-bit)
system      SUNWftpr                         FTP Server, (Root)
system      SUNWftpu                         FTP Server, (Usr)
system      SUNWfwdcd                        IEEE 1394 Video Conferencing Demo (64-bit)
system      SUNWfwdcu                        IEEE 1394 Video Conferencing Support, (Usr) (64-bit)
system      SUNWfwdcx                        IEEE 1394 Video Conferencing Class Driver (64-bit)
system      SUNWgcmn                         gcmn - Common GNU package
system      SUNWged                          Sun Gigabit Ethernet Adapter Driver
system      SUNWgedu                         Sun Gigabit Ethernet Adapter Driver Headers
system      SUNWgedx                         Sun Gigabit Ethernet Adapter Driver (64-bit)
system      SUNWgfb                          Sun XVR-1000 Graphics Accelerator System Software/Device Driver
application SUNWgfbcf                        Sun XVR-1000 Graphics Accelerator Configuration Software
system      SUNWgfbr                         Sun XVR-1000 Graphics Accelerator System Software (Root)
application SUNWgfbw                         Sun XVR-1000 Graphics Accelerator Window System Support
system      SUNWgfbx                         Sun XVR-1000 Graphics Accelerator System Software/Device Driver (64-bit)
system      SUNWggrp                         ggrep - GNU grep utilities
system      SUNWgimpprint                    gimpprint - Drivers for Canon, Epson, Lexmark &amp; PCL printers
system      SUNWglmr                         rasctrl environment monitoring driver for i2c, (Root) (32-bit)
system      SUNWglmx                         rasctrl environment monitoring driver for i2c, (Root) (64-bit)
system      SUNWglt                          Layout Table Generation Utility
GNOME2      SUNWgnome-a11y-libs              GNOME accessibility framework - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-a11y-libs-devel        GNOME
GNOME2      SUNWgnome-a11y-libs-devel-share  GNOME
GNOME2      SUNWgnome-a11y-libs-share        GNOME accessibility framework - platform independent files, /usr/share
GNOME2      SUNWgnome-audio                  GNOME audio support framework - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-audio-devel            GNOME audio support framework - developer files
GNOME2      SUNWgnome-audio-devel-share      GNOME audio support framework - developer files - platform independent, /usr/share
GNOME2      SUNWgnome-audio-root             GNOME audio support framework - platform dependent files, / filesystem
GNOME2      SUNWgnome-audio-share            GNOME audio support framework - platform independent files, /usr/share
GNOME2      SUNWgnome-base-libs              GNOME base GUI libraries - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-base-libs-64           GNOME base GUI libraries (64-bit) - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-base-libs-64-root      GNOME base GUI libraries (64-bit) - platform dependent files, / filesystem
GNOME2      SUNWgnome-base-libs-devel        GNOME base GUI libraries - developer files
GNOME2      SUNWgnome-base-libs-devel-share  GNOME base GUI libraries - developer files - platform independent, /usr/share
GNOME2      SUNWgnome-base-libs-root         GNOME base GUI libraries - platform dependent files, / filesystem
GNOME2      SUNWgnome-base-libs-share        GNOME base GUI libraries - platform independent files, /usr/share
GNOME2      SUNWgnome-calculator             GNOME calculator utility - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-calculator-share       GNOME calculator utility - platform independent files, /usr/share
GNOME2      SUNWgnome-cd                     GNOME CD player utility - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-cd-root                GNOME CD player utility - platform dependent files, / filesystem
GNOME2      SUNWgnome-cd-share               GNOME CD player utility - platform independent files, /usr/share
GNOME2      SUNWgnome-character-map          GNOME character map utility - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-character-map-share    GNOME character map utility - platform independent files, /usr/share
GNOME2      SUNWgnome-common-devel           GNOME common development tools and libraries - developer files
GNOME2      SUNWgnome-common-devel-share     GNOME common development tools and libraries - developer files
GNOME2      SUNWgnome-component              GNOME CORBA ORB and component framework - platform dependent files, / filesystem
GNOME2      SUNWgnome-component-devel        GNOME CORBA ORB and component framework - developer files
GNOME2      SUNWgnome-component-devel-share  GNOME CORBA ORB and component framework - developer files - platform independent, /usr/share
GNOME2      SUNWgnome-component-root         GNOME CORBA ORB and component framework - platform dependent files, / filesystem
GNOME2      SUNWgnome-component-share        GNOME CORBA ORB and component framework - platform independent files, /usr/share
GNOME2      SUNWgnome-config                 GNOME configuration framework - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-config-devel           GNOME configuration framework - developer files
GNOME2      SUNWgnome-config-devel-share     GNOME configuration framework - developer files - platform independent, /usr/share
GNOME2      SUNWgnome-config-root            GNOME configuration framework - platform dependent files, / filesystem
GNOME2      SUNWgnome-config-share           GNOME configuration framework - platform independent files, /usr/share
GNOME2      SUNWgnome-desktop-prefs          GNOME desktop wide preference configuration tools - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-desktop-prefs-root     GNOME desktop wide preference configuration tools - platform dependent files, / filesystem
GNOME2      SUNWgnome-desktop-prefs-share    GNOME desktop wide preference configuration tools - platform independent files, /usr/share
GNOME2      SUNWgnome-dtlogin-integration    dtlogin configuration files for the GNOME desktop - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-file-mgr               GNOME file manager and support libraries - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-file-mgr-root          GNOME file manager and support libraries - platform dependent files, / filesystem
GNOME2      SUNWgnome-file-mgr-share         GNOME file manager and support libraries - platform independent files, /usr/share
GNOME2      SUNWgnome-freedb-libs            GNOME free CD database access library - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-freedb-libs-root       GNOME free CD database access library - platform dependent files, / filesystem
GNOME2      SUNWgnome-freedb-libs-share      GNOME free CD database access library - platform independent files, /usr/share
GNOME2      SUNWgnome-fun-applets            GNOME panel applets - amusements - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-fun-applets-root       GNOME panel applets - amusements - platform dependent files, / filesystem
GNOME2      SUNWgnome-fun-applets-share      GNOME panel applets - amusements - platform independent files, /usr/share
GNOME2      SUNWgnome-games                  GNOME games
GNOME2      SUNWgnome-games-root             GNOME games - platform dependent files, / filesystem
GNOME2      SUNWgnome-games-share            GNOME games - platform independent files, /usr/share
GNOME2      SUNWgnome-help-db                GNOME help data base - /var filesystem
GNOME2      SUNWgnome-help-viewer            GNOME help system - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-help-viewer-share      GNOME help system - platform independent files, /usr/share
GNOME2      SUNWgnome-hex-editor             GNOME hex editor - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-hex-editor-root        GNOME hex editor - platform dependent files, / filesystem
GNOME2      SUNWgnome-hex-editor-share       GNOME hex editor - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-image-viewer           GNOME image viewer - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-image-viewer-root      GNOME image viewer - platform dependent files, / filesystem
GNOME2      SUNWgnome-image-viewer-share     GNOME image viewer - platform independent files, /usr/share
GNOME2      SUNWgnome-intranet-applets-root  GNOME panel applets - intranet
GNOME2      SUNWgnome-intranet-applets-share GNOME panel applets - intranet - platform independent files, /usr/share
GNOME2      SUNWgnome-libs                   GNOME libraries - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-libs-devel             GNOME libraries - developer files
GNOME2      SUNWgnome-libs-devel-share       GNOME libraries - developer files - platform independent, /usr/share
GNOME2      SUNWgnome-libs-root              GNOME libraries - platform dependent files, / filesystem
GNOME2      SUNWgnome-libs-share             GNOME libraries - platform independent files, /usr/share
GNOME2      SUNWgnome-mm-applets             GNOME panel applets - multimedia - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-mm-applets-root        GNOME panel applets - multimedia - platform dependent files, / filesystem
GNOME2      SUNWgnome-mm-applets-share       GNOME panel applets - multimedia - platform independent files, /usr/share
GNOME2      SUNWgnome-panel                  GNOME panel and support libraries - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-panel-devel            GNOME panel and support libraries - developer files
GNOME2      SUNWgnome-panel-devel-share      GNOME panel and support libraries - developer files - platform independent, /usr/share
GNOME2      SUNWgnome-panel-root             GNOME panel and support libraries - platform dependent files, / filesystem
GNOME2      SUNWgnome-panel-share            GNOME panel and support libraries - platform independent files, /usr/share
GNOME2      SUNWgnome-perf-meter             GNOME performance meter - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-perf-meter-root        GNOME performance meter - platform dependent files, / filesystem
GNOME2      SUNWgnome-perf-meter-share       GNOME performance meter - platform independent files, /usr/share
GNOME2      SUNWgnome-print                  GNOME printing technology - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-print-devel            GNOME printing technology - developer files
GNOME2      SUNWgnome-print-root             GNOME printing technology - platform dependent files, / filesystem
GNOME2      SUNWgnome-print-share            GNOME printing technology - platform independent files, /usr/share
GNOME2      SUNWgnome-ps-viewer              GNOME postscript viewer - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-ps-viewer-root         GNOME post script viewer - platform dependent files, / filesystem
GNOME2      SUNWgnome-ps-viewer-share        GNOME post script viewer - platform independent files, /usr/share
GNOME2      SUNWgnome-removable-media        GNOME removable media support - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-removable-media-share  GNOME removable media support - platform independent files, /usr/share
GNOME2      SUNWgnome-search-tool            GNOME file search tool - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-search-tool-share      GNOME file search tool - platform independent files, /usr/share
GNOME2      SUNWgnome-session                GNOME session manager - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-session-root           GNOME session manager - platform dependent files, / filesystem
GNOME2      SUNWgnome-session-share          GNOME session manager - platform independent files, /usr/share
GNOME2      SUNWgnome-sound-recorder         GNOME sound recording utilities - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-sound-recorder-root    GNOME sound recording utilities - platform dependent files, / filesystem
GNOME2      SUNWgnome-sound-recorder-share   GNOME sound recording utilities - platform independent files, /usr/share
GNOME2      SUNWgnome-terminal               GNOME terminal emulator - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-terminal-root          GNOME terminal emulator - platform dependent files, / filesystem
GNOME2      SUNWgnome-terminal-share         GNOME terminal emulator - platform independent files, /usr/share
GNOME2      SUNWgnome-text-editor            GNOME text editor - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-text-editor-root       GNOME text editor - platform dependent files, / filesystem
GNOME2      SUNWgnome-text-editor-share      GNOME text editor - platform independent files, /usr/share
GNOME2      SUNWgnome-themes                 GNOME themes and support libraries - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-themes-share           GNOME themes and support libraries - platform independent files, /usr/share
GNOME2      SUNWgnome-ui-designer            GNOME GUI wysiwyg designer - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-ui-designer-share      GNOME GUI wysiwyg designer - platform independent files, /usr/share
GNOME2      SUNWgnome-user-docs              GNOME user documentation - platform independent files, /usr/share
GNOME2      SUNWgnome-utility-applets        GNOME panel applets - utility - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-utility-applets-root   GNOME panel applets - utility - root files
GNOME2      SUNWgnome-utility-applets-share  GNOME panel applets - utility - platform independent files, /usr/share
GNOME2      SUNWgnome-vfs                    GNOME Virtual File System Framework and application/MIME type registry - platform dependent files, /usr f
GNOME2      SUNWgnome-vfs-devel              GNOME Virtual File System Framework and application/MIME type registry - developer files
GNOME2      SUNWgnome-vfs-devel-share        GNOME Virtual File System Framework and application/MIME type registry - developer files - platform indep
GNOME2      SUNWgnome-vfs-root               GNOME Virtual File System Framework and application/MIME type registry - platform dependent files, / file
GNOME2      SUNWgnome-vfs-share              GNOME Virtual File System Framework and application/MIME type registry - platform independent files, /usr
GNOME2      SUNWgnome-wm                     GNOME window manager - platform dependent files, /usr filesystem
GNOME2      SUNWgnome-wm-root                GNOME window manager - platform dependent files, / filesystem
GNOME2      SUNWgnome-wm-share               GNOME window manager - platform independent files, /usr/share
GNOME2      SUNWgnome-xml-root               GNOME XML catalogs - platform dependent files, / filesystem
GNOME2      SUNWgnome-xml-share              GNOME XML stylesheets - platform independent files, /usr/share
system      SUNWgpch                         The GNU Patch utility
system      SUNWgscr                         GNU Ghostscript
system      SUNWgsdhx                        GSS Diffie-Hellman (64-bit)
system      SUNWgsfot                        GNU Ghostscript Fonts (Other)
system      SUNWgsfst                        GNU Ghostscript Fonts (Standard)
system      SUNWgss                          GSSAPI V2
system      SUNWgssc                         GSSAPI CONFIG V2
system      SUNWgssdh                        GSS Diffie-Hellman
system      SUNWgssk                         kernel GSSAPI V2
system      SUNWgsskx                        kernel GSSAPI V2 (64-bit)
system      SUNWgssx                         GSSAPI V2 (64-bit)
system      SUNWgtar                         gtar - GNU tar
ALE         SUNWgttf                         Simplified Chinese (GBK) True Type Fonts
system      SUNWgzip                         The GNU Zip (gzip) compression utility
system      SUNWhea                          SunOS Header Files
ALE         SUNWhiu8                         Traditional Chinese iconv modules for UTF-8
ALE         SUNWhiu8x                        Traditional Chinese (EUC) iconv modules for UTF-8 (64-bit)
system      SUNWhmd                          SunSwift Adapter Drivers
system      SUNWhmdu                         SunSwift Adapter Headers
system      SUNWhmdx                         SunSwift Adapter Drivers (64-bit)
system      SUNWhpijs                        hpijs - HP InkJet Server
system      SUNWhrsc                         Traditional Chinese (EUC) Remote System Control
system      SUNWhrscd                        Traditional Chinese (EUC) Remote System Control User Guide
system      SUNWhrscj                        Traditional Chinese (EUC) Remote System Control GUI
ALE         SUNWhttf                         Traditional Chinese True Type Fonts Package
system      SUNWi13rf                        X11 ISO-8859-13 required fonts
system      SUNWi15cs                        X11 ISO8859-15 Codeset Support
system      SUNWi15rf                        X11 ISO-8859-15 required fonts
system      SUNWi1cs                         X11 ISO8859-1 Codeset Support
system      SUNWi1of                         ISO-8859-1 (Latin-1) Optional Fonts
system      SUNWi2cr                         Device drivers for I2C devices, (Root, 32-bit)
system      SUNWi2cx                         Device drivers for I2C devices, (Root, 64-bit)
system      SUNWi2rf                         X11 ISO-8859-2 required fonts
system      SUNWi4rf                         X11 ISO-8859-4 required fonts
system      SUNWi5rf                         X11 ISO-8859-5 required fonts
system      SUNWi7rf                         X11 ISO-8859-7 required fonts
system      SUNWi8rf                         X11 iso8859-8 required fonts
system      SUNWi9rf                         X11 ISO-8859-9 required fonts
system      SUNWicu                          International Components for Unicode User Files
system      SUNWicud                         International Components for Unicode Developer Files
system      SUNWicux                         International Components for Unicode User Files (64-bit)
system      SUNWidecr                        IDE device drivers
system      SUNWidecx                        IDE device drivers- 64bit
system      SUNWider                         IDE Device Driver, (Root)
system      SUNWidn                          Inter-Domain Network Modules for Sun Enterprise 10000
system      SUNWidnd                         Internationalized Domain Name Support Developer Files
system      SUNWidnl                         Internationalized Domain Name Support Library Files
system      SUNWidnlx                        Internationalized Domain Name Support Library Files (64-bit)
system      SUNWidnx                         Inter-Domain Network Modules for Sun Enterprise 10000 (64-bit)
system      SUNWifb                          Sun Expert3D (IFB) Graphics System Software/Device Driver
application SUNWifbcf                        Sun Expert3D (IFB) Graphics Configuration Software
system      SUNWifbr                         Sun Expert3D (IFB) Graphics System Software (Root)
application SUNWifbw                         Sun Expert3D (IFB) Graphics Window System Support
system      SUNWifbx                         Sun Expert3D (IFB) Graphics System Software/Device Driver (64-bit)
system      SUNWifp                          Sun Fibre Channel Arbitrated Loop Device Driver
system      SUNWifph                         Sun Fibre Channel Arbirated Loop Driver Header Files
system      SUNWifpx                         Sun Fibre Channel Arbitrated Loop Device Driver (64-bit)
system      SUNWigsr                         IGS CyberPro2010 Device Driver (Root)
application SUNWigsu                         IGS CyberPro2010 DDX (OW) Driver
application SUNWigsuc                        IGS CyberPro2010 DDX (OW) Config
application SUNWigsud                        IGS CyberPro2010 DDX (OW) Developer
system      SUNWigsx                         IGS CyberPro2010 64-bit Device Driver (Root)
system      SUNWiiimr                        Internet/Intranet Input Method Framework Package (Root)
system      SUNWiiimu                        Internet/Intranet Input Method Framework Package (Usr)
system      SUNWimagick                      ImageMagick - Image Manipulation Utilities and Libraries
system      SUNWinamd                        Internet Domain Name Server
system      SUNWiniu8                        Indic UTF-8 iconv modules for UTF-8
system      SUNWiniu8x                       Indic UTF-8 iconv modules for UTF-8 (64-bit)
system      SUNWinleu                        Indic Locale Environment User Files
system      SUNWinlex                        Indic Language Environment user files (64-bit)
system      SUNWinst                         Install Software
ALE         SUNWinttf                        Indic True Type Fonts
system      SUNWipc                          Interprocess Communications
system      SUNWippcore                      Internet Printing Protocol(IPP) core libraries, (usr)
system      SUNWipplr                        Internet Printing Protocol(IPP) listener, (root)
system      SUNWipplu                        Internet Printing Protocol(IPP) listener module (/usr)
application SUNWiqdoc                        Sun ONE Message Queue Javadoc and Examples
application SUNWiqfs                         Sun ONE Message Queue JNDI FS Provider
application SUNWiqjx                         Sun ONE Message Queue JAXM Client Runtime Package
application SUNWiqr                          Sun ONE Message Queue Root Package
application SUNWiqu                          Sun ONE Message Queue /usr Package
application SUNWiquc                         Sun ONE Message Queue Client Runtime Package
application SUNWiqum                         Sun ONE Message Queue JMS/SOAP Msg Transformer Runtime
system      SUNWirscd                        Italian Remote System Control User Guide
system      SUNWirscj                        Italian Remote System Control GUI
system      SUNWiscr                         Sun ISCRI OCF CT Driver
system      SUNWiscrx                        Sun ISCRI OCF CT Driver (64-bit)
system      SUNWislcc                        XSH4 conversion for Eastern European locales
system      SUNWislcx                        64-bit iconv conversion for Eastern European locales
system      SUNWisolc                        XSH4 conversion for ISO Latin character sets
system      SUNWisolx                        64-bit iconv conversion for ISO Latin character sets
system      SUNWitrsc                        Italian Remote System Control
system      SUNWj2dem                        JDK 1.2 demo programs
system      SUNWj2man                        JDK 1.2 man pages
application SUNWj2pi                         Java Plug-in
system      SUNWj2rt                         JDK 1.2 run time environment
system      SUNWj3cfg                        SUNWj3rt post configuration
system      SUNWj3dev                        J2SDK 1.4 development tools
system      SUNWj3dmo                        J2SDK 1.4 demo programs
system      SUNWj3dvx                        J2SDK 1.4 development tools (64-bit)
system      SUNWj3irt                        JDK 1.4 I18N run time environment
system      SUNWj3man                        J2SDK 1.4 man pages
system      SUNWj3rt                         J2SDK 1.4 runtime environment
system      SUNWj3rtx                        J2SDK 1.4 runtime environment (64-bit)
system      SUNWjaf                          Java Activation Framework
system      SUNWjaxp                         Java API for XML Parsing 1.2
system      SUNWjcom                         Java Communications API
system      SUNWjcomx                        Java Communications API (64-bit)
system      SUNWjersc                        Japanese (EUC) Remote System Control
application SUNWjfbcf                        Sun XVR-1200 and XVR-600 Graphics Configuration Software (64-bit)
system      SUNWjfbmn                        Sun XVR-1200 and XVR-600 Graphics On-line Manual Pages
system      SUNWjfbr                         Sun XVR-1200 and XVR-600 Graphics System Software (Root) (64-bit)
application SUNWjfbw                         Sun XVR-1200 and XVR-600 Graphics Window System Support (64-bit)
system      SUNWjfbx                         Sun XVR-1200 and XVR-600 Graphics System Software/Device Driver (64-bit)
application SUNWjhdem                        JavaHelp Demos
application SUNWjhdev                        JavaHelp Development Utilities
application SUNWjhdoc                        JavaHelp Documentation
application SUNWjhrt                         JavaHelp Runtime
system      SUNWjib                          iButton OCF CT Driver
system      SUNWjiu8                         Japanese iconv modules for UTF-8
system      SUNWjiu8x                        Japanese iconv modules for UTF-8 (64-bit)
system      SUNWjmail                        Java Mail Runtime
system      SUNWjmfp                         Java Media Framework Player
system      SUNWjpg                          jpeg - The Independent JPEG Groups JPEG software
GNOME2      SUNWjpgx                         jpeg - The Independent JPEG Groups JPEG software (64-bit)
system      SUNWjrscd                        Japanese (EUC) Remote System Control User Guide
system      SUNWjrscj                        Japanese (EUC) Remote System Control GUI
system      SUNWjsnmp                        Java SNMP API
system      SUNWjss                          Network Security Services for Java (JSS)
system      SUNWjssx                         Network Security Services for Java (JSS) (64-bit)
system      SUNWjxcft                        Japanese Required TrueType Font
system      SUNWjxmft                        Japanese Required Bitmap Font
application SUNWkcslx                        KCMS Runtime Library (64-bit)
application SUNWkcspf                        KCMS Optional Profiles
application SUNWkcspg                        KCMS Programmers Environment
application SUNWkcspx                        KCMS Programmers Environment (64-bit)
system      SUNWkcsrl                        KCMS Runtime Library Support
system      SUNWkcsrr                        KCMS Runtime Profiles
application SUNWkcsrt                        KCMS Runtime Environment
application SUNWkcsrx                        KCMS Runtime Environment (64-bit)
system      SUNWkdcr                         Kerberos V5 KDC (root)
system      SUNWkdcu                         Kerberos V5 Master KDC (user)
system      SUNWkey                          Keyboard configuration tables
system      SUNWkfb                          Sun XVR-2500 Graphics System Software/Device Driver (64-bit)
application SUNWkfbcf                        Sun XVR-2500 Graphics Configuration Software (64-bit)
system      SUNWkfbr                         Sun XVR-2500 Graphics System Software (Root) (64-bit)
application SUNWkfbw                         Sun XVR-2500 Graphics Window System Support (64-bit)
ALE         SUNWkiu8                         Korean UTF-8 iconv modules for UTF-8
ALE         SUNWkiu8x                        Korean (UTF-8) iconv modules for UTF-8 (64-bit)
system      SUNWkmp2r                        PS/2 Keyboard and Mouse Device Drivers (Root) (32-bit)
system      SUNWkmp2x                        PS/2 Keyboard and Mouse Device Drivers (Root) (64-bit)
system      SUNWkoi8f                        X11 KOI8-R fonts
system      SUNWkrbr                         Kerberos version 5 support (Root)
system      SUNWkrbu                         Kerberos version 5 support (Usr)
system      SUNWkrbux                        Kerberos version 5 support (Usr) (64-bit)
system      SUNWkrsc                         Korean (EUC) Remote System Control
system      SUNWkrscd                        Korean (EUC) Remote System Control User Guide
system      SUNWkrscj                        Korean (EUC) Remote System Control GUI
ALE         SUNWkttf                         Korean True Type Fonts
system      SUNWkvm                          Core Architecture, (Kvm)
system      SUNWkvmx                         Core Architecture (Kvm) (64-bit)
ALE         SUNWkxmft                        Korean UTF-8 X Windows Platform minimum Required Fonts
system      SUNWladm                         Locale Administrator
system      SUNWlccom                        Localization common files
system      SUNWlcl                          Locale Conversion Library
system      SUNWlclx                         Locale Conversion Library (64-bit)
system      SUNWless                         The GNU pager (less)
system      SUNWlibC                         Sun Workshop Compilers Bundled libC
system      SUNWlibCf                        SunSoft WorkShop Bundled libC (cfront version)
system      SUNWlibCx                        Sun WorkShop Bundled 64-bit libC
system      SUNWlibm                         Forte Developer Bundled libm
system      SUNWlibms                        Forte Developer Bundled shared libm
GNOME2      SUNWlibpopt                      command line parsing library
GNOME2      SUNWlibpopt-64                   command line parsing library (64-bit) - platform dependent files, /usr filesystem
GNOME2      SUNWlibpopt-share                command line parsing library - platform independent files, /usr/share
system      SUNWllc                          LLC2 driver and its initialization programs
system      SUNWllcr                         LLC2 driver configuration and startup files
system      SUNWllcx                         LLC2 driver (64-bit)
system      SUNWlldap                        LDAP Libraries
system      SUNWlmsx                         Forte Developer Bundled 64-bit shared libm
system      SUNWlmx                          Forte Developer Bundled misc. 64-bit libm files
system      SUNWloc                          System Localization
system      SUNWlocx                         System Localization (64-bit)
system      SUNWlpmsg                        LP Alerts
application SUNWlur                          Live Upgrade (root)
application SUNWluu                          Live Upgrade (usr)
system      SUNWluxd                         Sun Enterprise Network Array sf Device Driver
system      SUNWluxdx                        Sun Enterprise Network Array sf Device Driver (64-bit)
system      SUNWluxl                         Sun Enterprise Network Array socal Device Driver
system      SUNWluxlx                        Sun Enterprise Network Array socal Device Driver (64-bit)
system      SUNWluxop                        Sun Enterprise Network Array firmware and utilities
system      SUNWluxox                        Sun Enterprise Network Array libraries (64-bit)
system      SUNWlvma                         Solaris Volume Management APIs
system      SUNWlvmg                         Solaris Volume Management Application
system      SUNWlvmr                         Solaris Volume Management (root)
system      SUNWlwact                        Oracle Lightweight Availability Collection Tool
system      SUNWlxml                         The XML library
system      SUNWlxmlx                        The XML library (64-bit)
system      SUNWlxsl                         The XSLT library
system      SUNWlxslx                        The XSLT library (64-bit)
system      SUNWm64                          M64 Graphics System Software/Device Driver
application SUNWm64cf                        M64 Graphics Configuration Software
application SUNWm64w                         M64 Graphics Window System Support
system      SUNWm64x                         M64 Graphics System Software/Device Driver (64-bit)
system      SUNWm64xr                        M64XR System Software (Device Driver Config.)
system      SUNWman                          On-Line Manual Pages
application SUNWmc                           Solaris Management Console 2.1 (Server Components)
application SUNWmcc                          Solaris Management Console 2.1 (Client Components)
application SUNWmccom                        Solaris Management Console 2.1 (Common Components)
application SUNWmcdev                        Solaris Management Console 2.1 (Development Kit)
application SUNWmcex                         Solaris Management Console 2.1 (Examples)
system      SUNWmdar                         Solaris Volume Manager Assistant (Root)
system      SUNWmdau                         Solaris Volume Manager Assistant (Usr)
system      SUNWmdb                          Modular Debugger
system      SUNWmdbdm                        Modular Debugger Demo Source
system      SUNWmdbx                         Modular Debugger (64-bit)
system      SUNWmddr                         SVM RCM Module
system      SUNWmdi                          Sun Multipath I/O Drivers
system      SUNWmdix                         Sun Multipath I/O Drivers (64-bit)
system      SUNWmdr                          Solaris Volume Manager, (Root)
system      SUNWmdu                          Solaris Volume Manager, (Usr)
system      SUNWmdx                          Solaris Volume Manager Drivers, (64-bit)
system      SUNWmfdev                        Motif UIL Compiler
system      SUNWmfman                        CDE Motif Manuals
system      SUNWmfrun                        Motif RunTime Kit
system      SUNWmga                          Solaris Management Applications
system      SUNWmgapp                        WBEM Management Applications
system      SUNWmibii                        Solstice Enterprise Agents 1.0.3 SNMP daemon
system      SUNWmipr                         Mobile-IP (Root)
system      SUNWmipu                         Mobile-IP (Usr)
system      SUNWmkcd                         CD creation utilities
system      SUNWmp                           MP Print Filter
system      SUNWnamdt                        Northern America CDE Support
system      SUNWnamos                        Northern America OS Support
system      SUNWnamow                        Northern America OW Support
system      SUNWnamox                        Northern America 64-bit OS Support
system      SUNWncar                         Solaris Network Cache and Accelerator (Root)
system      SUNWncarx                        Solaris Network Cache and Accelerator (Root) (64-bit)
system      SUNWncau                         Solaris Network Cache and Accelerator (Usr)
system      SUNWncaux                        Solaris Network Cache and Accelerator (Usr) (64-bit)
system      SUNWncft                         NcFTP - client application implementing FTP
system      SUNWnfb                          Sun XVR-300 Graphics System Software/Device Driver (64-bit)
application SUNWnfbcf                        Sun XVR-300 Graphics Configuration Software (64-bit)
application SUNWnfbw                         Sun XVR-300 Graphics Window System Support (64-bit)
system      SUNWnfscr                        Network File System (NFS) client support (Root)
system      SUNWnfscu                        Network File System (NFS) client support (Usr)
system      SUNWnfscx                        Network File System (NFS) client support (Root) (64-bit)
system      SUNWnfssr                        Network File System (NFS) server support (Root)
system      SUNWnfssu                        Network File System (NFS) server support (Usr)
system      SUNWnfssx                        Network File System (NFS) server support (Root) (64-bit)
system      SUNWnisr                         Network Information System, (Root)
system      SUNWnisu                         Network Information System, (Usr)
application SUNWnsb                          Netscape 7 for Solaris - Browser
application SUNWnsm                          Netscape 7 for Solaris - Messenger
application SUNWnspsm                        Netscape 7 for Solaris - PSM
application SUNWnsxp                         Netscape 7 for Solaris - XPCOM
system      SUNWntpr                         NTP, (Root)
system      SUNWntpu                         NTP, (Usr)
system      SUNWocf                          Open Card Framework
system      SUNWocfd                         Open Card Framework
system      SUNWocfh                         Open Card Framework header files
system      SUNWocfr                         Configuration files for Open Card Framework
system      SUNWocfx                         Open Card Framework (64-bit)
system      SUNWolrte                        OPEN LOOK toolkits runtime environment
system      SUNWopl5m                        Perl 5.005_03 Reference Manual Pages
system      SUNWopl5p                        Perl 5.005_03 (POD Documentation)
system      SUNWopl5u                        Perl 5.005_03
system      SUNWosdem                        OS demo source
system      SUNWowbcp                        OpenWindows binary compatibility
system      SUNWpamsc                        PAM Smart Card module
system      SUNWpamsx                        PAM Smart Card module (64-bit)
system      SUNWpapi                         Free Standards Group Open Printing API
system      SUNWpcelx                        3COM EtherLink III PCMCIA Ethernet Driver
system      SUNWpcelxx                       3COM EtherLink III PCMCIA Ethernet Driver (64-bit)
system      SUNWpcmci                        PCMCIA Card Services, (Root)
system      SUNWpcmcu                        PCMCIA Card Services, (Usr)
system      SUNWpcmcx                        PCMCIA Card Services (64-bit)
system      SUNWpcmem                        PCMCIA memory card driver
system      SUNWpcmemx                       PCMCIA memory card driver (64-bit)
system      SUNWpcr                          Solaris Print - Client, (root)
system      SUNWpcser                        PCMCIA serial card driver
system      SUNWpcserx                       PCMCIA serial card driver (64-bit)
system      SUNWpcu                          Solaris Print - Client, (usr)
system      SUNWpd                           PCI Drivers
system      SUNWpdas                         PDA Synchronization for Solaris
system      SUNWpdu                          PCI Drivers Headers
system      SUNWpdx                          PCI Drivers (64-bit)
application SUNWpfbcf                        Sun XVR-100 Graphics Configuration Software (64-bit)
application SUNWpfbw                         Sun XVR-100 Graphics Window System Support (64-bit)
system      SUNWpfbx                         Sun XVR-100 Graphics System Software Device Driver (64-bit)
system      SUNWphx                          Solaris interface for phx
system      SUNWphxx                         Solaris interface for phx (64 bit)
system      SUNWpiclh                        PICL Header Files (Usr)
system      SUNWpiclr                        PICL Framework (Root)
system      SUNWpiclu                        PICL Libraries, and Plugin Modules (Usr)
system      SUNWpiclx                        PICL Libraries (64-bit)
system      SUNWpl5m                         Perl 5.6.1 Reference Manual Pages
system      SUNWpl5p                         Perl 5.6.1 (POD Documentation)
system      SUNWpl5u                         Perl 5.6.1 (core)
system      SUNWpl5v                         Perl 5.6.1 (non-core)
system      SUNWplow                         OpenWindows enabling for Partial Locales
system      SUNWplow1                        OpenWindows enabling for Supplementary Partial Locales
system      SUNWplowr                        Root pkg partial locales.
system      SUNWpmgr                         Solaris Patch Management Applications
system      SUNWpmowm                        Power Management OW Utilities Man Pages
system      SUNWpmowr                        Power Management OW Utilities, (Root)
system      SUNWpmowu                        Power Management OW Utilities, (Usr)
system      SUNWpmr                          Power Management config file and rc script
system      SUNWpmu                          Power Management binaries
system      SUNWpmux                         Power Management binaries (64-bit)
system      SUNWpng                          PNG - Portable Network Graphics library
GNOME2      SUNWpngx                         PNG - Portable Network Graphics library (64-bit)
system      SUNWpool                         Resource Pools
system      SUNWpoolx                        Resource Pools (64-bit)
system      SUNWppm                          Solaris Print Manager
system      SUNWpppd                         Solaris PPP Device Drivers
system      SUNWpppdr                        Solaris PPP configuration files
system      SUNWpppdt                        Solaris PPP Tunneling
system      SUNWpppdu                        Solaris PPP daemon and utilities
system      SUNWpppdx                        Solaris PPP Device Drivers (64-bit)
system      SUNWpppg                         GNU utilities for PPP
system      SUNWpr                           Netscape Portable Runtime
system      SUNWprx                          Netscape Portable Runtime (64-bit)
system      SUNWpsdpr                        PCMCIA ATA card driver
system      SUNWpsdprx                       PCMCIA ATA card driver (64-bit)
system      SUNWpsf                          PostScript filters - (Usr)
system      SUNWpsm-lpd                      Free Standards Group Open Printing API RFC-1179 Print Service Module
system      SUNWpsn                          Product Serial Number Collector
system      SUNWpsr                          Solaris Print - LP Server, (root)
system      SUNWpstl                         Platform specific apptrace support
system      SUNWpstlx                        Platform specific apptrace support (64-bit)
system      SUNWpsu                          Solaris Print - LP Server, (usr)
system      SUNWpsutils                      psutils - PostScript utilities
system      SUNWqfed                         Sun Quad FastEthernet Adapter Driver
system      SUNWqfedu                        Sun Quad FastEthernet Adapter Driver Headers
system      SUNWqfedx                        Sun Quad FastEthernet Adapter Driver (64-bit)
system      SUNWqlc                          Qlogic ISP 2200/2202 Fibre Channel Device Driver
system      SUNWqlcx                         Qlogic ISP 2200/2202 Fibre Channel Device Driver (64-bit)
system      SUNWqos                          IP QoS, (Root)
system      SUNWqosu                         IP QoS, (Usr)
system      SUNWqosx                         IP QoS (Root) (64-bit)
system      SUNWrcapr                        Solaris Resource Capping Daemon (Root)
system      SUNWrcapu                        Solaris Resource Capping Daemon (Usr)
system      SUNWrcmdc                        Remote Network Client Commands
system      SUNWrcmdr                        Remote Network Server Commands (Root)
system      SUNWrcmds                        Remote Network Server Commands (Usr)
application SUNWrda                          Oracle Remote Diagnostic Agent
system      SUNWrmodu                        Realmode Modules, (Usr)
system      SUNWrmui                         Resource Management User Interface Components
system      SUNWrmwbr                        Resource Management WBEM Instrumentation (root)
system      SUNWrmwbu                        Resource Management WBEM Instrumentation (usr)
system      SUNWrmwbx                        Resource Management WBEM Instrumentation (64-bit)
system      SUNWroute                        Network Routing daemons/commands (Usr)
system      SUNWrpm                          Utilities for processing RPM archives
system      SUNWrsc                          Remote System Control
system      SUNWrscd                         Remote System Control User Guide
system      SUNWrscj                         Remote System Control GUI
system      SUNWrsg                          RPCSEC_GSS
system      SUNWrsgk                         kernel RPCSEC_GSS
system      SUNWrsgx                         RPCSEC_GSS (64-bit)
system      SUNWrsm                          Remote Shared Memory
system      SUNWrsmo                         RSMPI Operations Registration Module
system      SUNWrsmox                        RSMPI Operations Registration Module (64-bit)
system      SUNWrsmx                         Remote Shared Memory (64-bit)
system      SUNWrtvc                         SunVideo Device Driver
application SUNWrtvcl                        SunVideo XIL library support
application SUNWrtvcu                        SunVideo Runtime Support Software
system      SUNWrtvcx                        SunVideo Device Driver (64-bit)
system      SUNWsacom                        Solstice Enterprise Agents 1.0.3 files for root file system
system      SUNWsadmi                        Solstice Enterprise Agents 1.0.3 Desktop Management Interface
system      SUNWsadml                        Solstice Launcher.
system      SUNWsadmx                        Solstice Enterprise Agents 1.0.3 Desktop Management Interface Libraries (64-bit)
system      SUNWsasnm                        Solstice Enterprise Agents 1.0.3 Simple Network Management Protocol
system      SUNWsasnx                        Solstice Enterprise Agents 1.0.3 Simple Network Management Protocol Libraries (64-bit)
system      SUNWscbcp                        SPARCompilers Binary Compatibility Libraries
system      SUNWscgui                        Solaris Smart Card Administration GUI
system      SUNWsckmr                        Init script &amp; links for Sun Fire 15000 Key Management daemon
system      SUNWsckmu                        Key Management daemon for Sun Fire 15000
system      SUNWsckmx                        Key Management Modules for Sun Fire 15000 (64-Bit)
system      SUNWscmos                        SCM Microsystems SmartOS
system      SUNWscmsc                        Sun SCRI OCF CT Driver
system      SUNWscplp                        Solaris Print - Source Compatibility, (Usr)
system      SUNWscpr                         Source Compatibility, (Root)
system      SUNWscpu                         Source Compatibility, (Usr)
system      SUNWscpux                        Source Compatibility (Usr) (64-bit)
system      SUNWservicetagr                  Service Tags (root)
system      SUNWservicetagu                  Service Tags (Usr)
system      SUNWses                          SCSI Enclosure Services Device Driver
system      SUNWsesx                         SCSI Enclosure Services Device Driver (64-bit)
system      SUNWsfdoc                        GNU and open source documentation
system      SUNWsfdr                         Sun Fire 880 DR Daemon
system      SUNWsfdrr                        Sun Fire 880 DR Daemon init script
system      SUNWsfinf                        GNU and open source info pages
system      SUNWsfman                        GNU and open source man pages
system      SUNWsior                         SuperIO 307 (plug-n-play) device drivers, (Root) (32-bit)
system      SUNWsiox                         SuperIO 307 (plug-n-play) device drivers, (Root) (64-bit)
system      SUNWslpr                         SLP, (Root)
system      SUNWslpu                         SLP, (Usr)
system      SUNWslpx                         SLP (64-bit)
system      SUNWsmapi                        Storage Management APIs
system      SUNWsmbac                        samba - A Windows SMB/CIFS fileserver for UNIX (client)
system      SUNWsmbar                        samba - A Windows SMB/CIFS fileserver for UNIX (Root)
system      SUNWsmbau                        samba - A Windows SMB/CIFS fileserver for UNIX (Usr)
system      SUNWsndmr                        Sendmail (root)
system      SUNWsndmu                        Sendmail (/usr)
service     SUNWsneep                        Oracle Serial Number in EEPROM
system      SUNWsolnm                        Solaris Naming Enabler
system      SUNWspl                          Spell Checking Engine - Base Release (English)
system      SUNWsprot                        Solaris Bundled tools
system      SUNWsprox                        Sun WorkShop Bundled 64-bit make library
system      SUNWsra                          Source Compatibility Archive Libraries
system      SUNWsregu                        Solaris User Registration
system      SUNWsrh                          Source Compatibility Header Files
system      SUNWsrscd                        Swedish Remote System Control User Guide
system      SUNWsrscj                        Swedish Remote System Control GUI
system      SUNWssad                         SPARCstorage Array Drivers
system      SUNWssadx                        SPARCstorage Array Drivers (64-bit)
system      SUNWssaop                        SPARCstorage Array Utility
system      SUNWsshcu                        SSH Common, (Usr)
system      SUNWsshdr                        SSH Server, (Root)
system      SUNWsshdu                        SSH Server, (Usr)
system      SUNWsshr                         SSH Client and utilities, (Root)
system      SUNWsshu                         SSH Client and utilities, (Usr)
system      SUNWstcx                         SUN ISCRI Kernel Driver - (64-bit)
system      SUNWsthwreg                      Hardware Service Tag Registration
system      SUNWstosreg                      Service Tags Solaris OS Registration
system      SUNWstsf                         Standard Type Services Framework
system      SUNWstsfr                        Standard Type Services Framework, (Root)
system      SUNWstsfx                        Standard Type Services Framework (64-bit)
system      SUNWsutl                         Static Utilities
system      SUNWsvrsc                        Swedish Remote System Control
system      SUNWswmt                         Install and Patch Utilities
application SUNWsx                           SX/CG14 Shareable Library
application SUNWsxow                         SX/CG14 Window System Support
system      SUNWtcatr                        Tomcat Servlet/JSP Container (root)
system      SUNWtcatu                        Tomcat Servlet/JSP Container
system      SUNWtcpd                         tcpd - access control facility for internet services
system      SUNWtcsh                         Tenex C-shell (tcsh)
application SUNWtcxow                        TCX Window System Support
system      SUNWter                          Terminal Information
system      SUNWtexi                         GNU texinfo - Texinfo utilities (texinfo)
system      SUNWtftp                         Trivial File Transfer Server
system      SUNWtftpr                        Trivial File Transfer Server (Root)
system      SUNWtiu8                         Thai UTF-8 iconv modules for UTF-8
system      SUNWtiu8x                        Thai UTF-8 iconv modules for UTF-8 (64-bit)
system      SUNWtleu                         Thai Locale Environment User Files
system      SUNWtleux                        Thai Language Environment user files (64-bit)
system      SUNWtls                          Network Security Services
system      SUNWtlsu                         Network Security Services Tools
system      SUNWtlsux                        Network Security Services Tools (64 bit)
system      SUNWtlsx                         Network Security Services (64-bit)
system      SUNWtltk                         ToolTalk runtime
system      SUNWtltkd                        ToolTalk developer support
system      SUNWtltkm                        ToolTalk manual pages
system      SUNWtltkx                        ToolTalk library (64-bit)
system      SUNWtnamd                        Trivial Name Server (Usr)
system      SUNWtnamr                        Trivial Name Server (Root)
system      SUNWtnetc                        Telnet Command (client)
system      SUNWtnetd                        Telnet Server Daemon (Usr)
system      SUNWtnetr                        Telnet Server Daemon (Root)
system      SUNWtnfc                         TNF Core Components
system      SUNWtnfcx                        TNF Core Components (64-bit)
system      SUNWtnfd                         TNF Developer Components
system      SUNWtoo                          Programming Tools
system      SUNWtoox                         Programming Tools (64-bit)
system      SUNWtxfnt                        Thai X Windows Platform required Fonts Package
system      SUNWucbt                         Apptrace support objects for ucblib
system      SUNWucbtx                        Apptrace support objects for ucblib (64-bit)
system      SUNWudf                          Universal Disk Format 1.50, (Usr)
system      SUNWudfr                         Universal Disk Format 1.50
system      SUNWudfrx                        Universal Disk Format 1.50 (64-bit)
system      SUNWuiu8                         Iconv modules for UTF-8 Locale
system      SUNWuiu8x                        Iconv Modules for UTF-8 Locale (64-bit)
system      SUNWuium                         Iconv Man Pages for UTF-8 Locale
system      SUNWulcf                         UTF-8 Locale Environment Common Files
system      SUNWulcfx                        UTF-8 Locale Environment Common Files (64-bit)
system      SUNWulocf                        UTF-8 Locale Environment OpenWindows Common Files
system      SUNWusb                          USB Device Drivers
system      SUNWusbu                         USB Headers
system      SUNWusbx                         USB Device Drivers (64-bit)
system      SUNWusoc                         Sun Universal SOC+ Device Driver
system      SUNWusocx                        Sun Universal SOC+ Device Driver (64-bit)
system      SUNWusx                          UltraSPARC CPU Device Driver (64-bit)
system      SUNWuxfl1                        SUNW,Ultra-1 FLASH PROM Update
system      SUNWuxfl2                        SUNW,Ultra-2 FLASH PROM Update
system      SUNWuxfl4                        SUNW,Ultra-4 FLASH PROM Update
system      SUNWuxfle                        SUNW,Ultra-Enterprise FLASH PROM Update
system      SUNWuxflr                        Sun4u FLASH PROM update generic components, (Root)
system      SUNWuxflu                        Sun4u FLASH PROM Update generic components, (Usr)
system      SUNWuxlcf                        UTF-8 X Locale Environment Common Files
system      SUNWuxlcx                        UTF-8 X Locale Environment Common Files (64-bit)
application SUNWvid                          Video Timing Information
system      SUNWvld                          Sun Ethernet Vlan Utility Routines
system      SUNWvldu                         Sun Ethernet Vlan Utility Headers
system      SUNWvldx                         Sun Ethernet Vlan Utility Routines (64-bit)
system      SUNWvolg                         Volume Management Graphical User Interface
system      SUNWvolr                         Volume Management, (Root)
system      SUNWvolu                         Volume Management, (Usr)
system      SUNWvolux                        Volume Management (Usr) (64-bit)
application SUNWwbapi                        WBEM API
system      SUNWwbcor                        WBEM Services (root)
system      SUNWwbcou                        WBEM Services (usr)
application SUNWwbdev                        Sun WBEM SDK
application SUNWwbdoc                        Sun WBEM SDK - Documentation
application SUNWwbmc                         Solaris Management Console 2.1 (WBEM Components)
system      SUNWwbpro                        WBEM Providers (usr)
system      SUNWwbsup                        WAN boot support
system      SUNWwgetr                        GNU wget - utility to retrieve files from the World Wide Web (root)
system      SUNWwgetu                        wget - GNU wget
system      SUNWwrsax                        WCI Remote Shared Memory API Library (64-bit)
system      SUNWwrsdx                        WCI RSM DLPI driver (64-bit)
system      SUNWwrsmx                        WCI Remote Shared Memory Drivers (64-bit)
system      SUNWwrsux                        WCI RSM Commands and Libraries (64-bit)
system      SUNWwsr2                         Solaris Product Registry &amp; Web Start runtime support
system      SUNWwsrv                         Solaris Product Registry Viewer
system      SUNWxcu4                         XCU4 Utilities
system      SUNWxcu4t                        XCU4 make and sccs utilities
system      SUNWxi18n                        X Window System Internationalization Common Package
system      SUNWxi18x                        X Window System Internationalization Common Package (64-bit)
application SUNWxilcg                        SX/CG14 XIL Support
application SUNWxildh                        XIL Loadable Pipeline Libraries
application SUNWxilh                         XIL API Header Files
application SUNWxilow                        XIL Deskset Loadable Pipeline Libraries
application SUNWxilrl                        XIL Runtime Environment
application SUNWxilvl                        VIS/XIL Support
system      SUNWxim                          X Window System X Input Method Server Package
system      SUNWximx                         X Window System X Input Method Server Package (64-bit)
system      SUNWxrgrt                        JAXR Runtime
system      SUNWxrpcrt                       JAX-RPC Runtime
system      SUNWxsrt                         Soap Runtime
system      SUNWxwacx                        AccessX client program
system      SUNWxwcft                        X Window System common (not required) fonts
system      SUNWxwcsl                        X Window System Display Postscript CID support library
system      SUNWxwdem                        X Window System demo programs
system      SUNWxwdim                        X Window System demo images
system      SUNWxwdv                         X Windows System Window Drivers
system      SUNWxwdvx                        X Windows System Window Drivers (64-bit)
system      SUNWxwdxm                        DPS motif library
system      SUNWxwfa                         X Window System Font Administrator
system      SUNWxwfnt                        X Window System platform required fonts
system      SUNWxwfs                         X Window System Font server
system      SUNWxwhl                         X Window System &amp; Graphics Header links in /usr/include
system      SUNWxwice                        X Window System Inter-Client Exchange (ICE) Components
system      SUNWxwicx                        X Window System ICE library (64-bit)
system      SUNWxwinc                        X Window System include files
system      SUNWxwkey                        X Windows software, PC keytables
system      SUNWxwman                        X Window System online user man pages
system      SUNWxwmod                        X Window System kernel modules
system      SUNWxwmox                        X Window System kernel modules (64-bit)
system      SUNWxwoft                        X Window System optional fonts
system      SUNWxwopt                        X Window System Optional Clients
system      SUNWxwpft                        X Window System Printer Fonts
system      SUNWxwpl                         Platform specific X server supplementary links
system      SUNWxwplt                        X Window System platform software
system      SUNWxwplx                        X Window System library software (64-bit)
system      SUNWxwpmn                        X Window System online programmers man pages
system      SUNWxwpsr                        Sun4u-platform specific X server auxiliary filter modules
system      SUNWxwrtl                        X Window System &amp; Graphics Runtime Library Links in /usr/lib
system      SUNWxwrtx                        X Window System Runtime Compatibility Package (64-bit)
system      SUNWxwslb                        X Window System static/lint libraries
system      SUNWxwslx                        X Window System lint libraries (64-bit)
system      SUNWxwsrc                        X Window System sample source
system      SUNWxwsrv                        X Window System Virtual Servers
GNOME2      SUNWxwsvr                        Screen Saver/Locker (xscreensaver)
system      SUNWxwxft                        Xft (X Freetype) Library
system      SUNWxwxftx                       Xft (X Freetype) Library (64-bit)
system      SUNWxwxst                        X Window System XST extension
system      SUNWxwxstx                       X Window System XST extension (64-bit)
system      SUNWypr                          NIS Server for Solaris (root)
system      SUNWypu                          NIS Server for Solaris (usr)
system      SUNWzip                          The Info-Zip (zip) compression utility
system      SUNWzlib                         The Zip compression library
system      SUNWzlibx                        The Zip compression library (64-bit)
system      SUNWzsh                          Z shell (zsh)
application SUNWzuluc                        Sun XVR-4000 Graphics Configuration Software (64-bit)
system      SUNWzulur                        Sun XVR-4000 Graphics System Software (Root) (64-bit)
application SUNWzuluw                        Sun XVR-4000 Graphics Window System Support (64-bit)
system      SUNWzulux                        Sun XVR-4000 Graphics System Software/Device Driver (64-bit)
system      TSIpgx                           PGX32 (Raptor GFX) System Software/Device Driver v3.0
application TSIpgxw                          PGX32 (Raptor GFX) X Window System Support v3.0
system      TSIpgxx                          PGX32 (Raptor GFX) System Software/Device Driver v3.0 (64-bit)
application WSBAA61                          IBM WebSphere Application Server
application WSBAA61LI                        LAP Component
application WSIHS61                          IBM HTTP Server
application WSIHS61LI                        LAP Component
application WSPAA61                          Web server plug-ins for IBM WebSphere Application Server
application WSPAA61LI                        LAP Component
application gsk7bas                          Certificate and SSL Base Runtime (gsk7bas)
application vasclnt                          VAS Client
application vasgp                            VAS Group Policy Components
application vasutil                          Vintela Authentication Services - Utility


---=[ Patches Installed ]=------------------------------------------------

Patch: 112233-12 Obsoletes: 114400-03, 114408-01, 113361-08, 112653-04, 112687-02, 112701-02, 112902-12, 112903-03, 114760-02, 114977-01, 112736-03, 1
Patch: 112835-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 112905-02 Obsoletes: 112713-02 Requires: 112233-01 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWcsxu, SUNWhea
Patch: 112917-01 Obsoletes: 112702-02 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 112918-01 Obsoletes: 112703-02 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWhea
Patch: 112919-01 Obsoletes: 112704-02 Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 112954-14 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWcsxu
Patch: 112960-39 Obsoletes: 113152-01, 113166-01, 113476-13 Requires: 112874-06 Incompatibles:  Packages: SUNWcsu, SUNWcsl, SUNWcslx, SUNWnisu, SUNWhe
Patch: 112963-25 Obsoletes: 112833-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcsl, SUNWcslx, SUNWcsxu, SUNWtoo, SUNWmdb, SUNWmdbx, 
Patch: 112964-15 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 112968-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 112998-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113031-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWxcu4
Patch: 113032-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 113033-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWcsxu, SUNWhea
Patch: 113071-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113110-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113225-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113277-47 Obsoletes: 113324-03, 113347-02, 117252-01 Requires: 112233-02, 112834-02 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWc
Patch: 113280-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113323-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113330-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113451-11 Obsoletes: 115260-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcsl, SUNWcstl
Patch: 113471-09 Obsoletes: 115484-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWesu, SUNWcsxu, SUNWscpu, SUNWtoo, SUNWmdb, SUNWesxu, SUNWtnfc,
Patch: 113490-04 Obsoletes: 116069-02 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu, SUNWaudd, SUNWauddx, SUNWaudh
Patch: 113494-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113576-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113580-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 113713-21 Obsoletes: 114462-01, 115520-01, 115555-01, 115524-01, 115689-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 113718-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113973-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 113977-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113978-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113981-04 Obsoletes: 115508-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsl, SUNWcslx, SUNWscpu, SUNWhea, SUNWarc, SUNWarcx, SUNWcstl,
Patch: 114004-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114008-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 114010-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWxcu4
Patch: 114128-03 Obsoletes:  Requires: 113277-46 Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 114133-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114135-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114224-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114259-02 Obsoletes: 115528-01 Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114329-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114332-23 Obsoletes: 112969-04, 114327-01, 113496-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcsl, SUNWcslx, SUNWcarx, SUNWcs
Patch: 114389-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114713-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsl, SUNWcslx, SUNWcsxu, SUNWarc, SUNWarcx, SUNWcstl, SUNWcstlx
Patch: 114718-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu, SUNWhea
Patch: 114861-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114923-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu, SUNWhea
Patch: 114927-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 114971-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 115018-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 115020-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 115022-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 115024-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 115028-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 115336-04 Obsoletes: 113326-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWsutl
Patch: 115671-01 Obsoletes: 115255-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 115878-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 116012-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 116014-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 116016-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 116049-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 116237-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 116243-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 116482-02 Obsoletes: 116079-01 Requires: 112233-12 Incompatibles:  Packages: SUNWcsu
Patch: 116506-02 Obsoletes:  Requires: 115683-02 Incompatibles:  Packages: SUNWcsu
Patch: 116538-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 116543-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 116552-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 117129-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsxu
Patch: 117132-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 117168-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 117171-17 Obsoletes: 112971-05, 115539-03, 113328-02, 116672-02, 112975-04 Requires: 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNW
Patch: 117433-02 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWcsxu, SUNWfss, SUNWfssx
Patch: 117445-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 117471-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWcsxu, SUNWhea
Patch: 117480-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 118305-08 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWhea
Patch: 118463-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWxcu4
Patch: 118465-03 Obsoletes: 114340-01, 114758-02, 115330-01, 115988-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsl, SUNWcslx, SUNWarc, SUNWa
Patch: 118535-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 118586-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWxcu4, SUNWsutl
Patch: 119438-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 119929-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 120025-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 120768-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 121319-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 121992-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 122713-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu, SUNWxcu4
Patch: 123767-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 112970-09 Obsoletes:  Requires: 113319-12 Incompatibles:  Packages: SUNWcsu, SUNWcsl, SUNWcslx, SUNWinamd, SUNWhea, SUNWarc, SUNWarcx, SUNWcstl
Patch: 114127-03 Obsoletes: 114132-01 Requires: 114129-02 Incompatibles:  Packages: SUNWcsu, SUNWcsl, SUNWcslx, SUNWarc, SUNWarcx, SUNWcstl, SUNWcstlx
Patch: 114344-21 Obsoletes: 112652-03, 113155-01, 112698-02, 113153-01, 112914-04, 113964-11, 115016-01, 112911-16, 112714-02, 112906-03, 116536-01, 1
Patch: 114369-01 Obsoletes:  Requires: 114127-01 Incompatibles:  Packages: SUNWcsu
Patch: 113072-08 Obsoletes:  Requires: 114127-01 Incompatibles:  Packages: SUNWcsu, SUNWcsr
Patch: 113073-14 Obsoletes: 113005-02, 115026-01, 113492-04, 113006-01, 113026-22, 113069-04, 113282-01, 113333-02, 113491-01, 113276-04, 115506-01, 1
Patch: 118558-34 Obsoletes: 112987-01, 113543-02, 114126-03, 114338-01, 114378-02, 114386-03, 114395-03, 115994-01, 113025-01, 113221-03, 113574-08, 1
Patch: 115030-03 Obsoletes: 117386-01 Requires: 116548-01, 113073-13 Incompatibles:  Packages: SUNWcsu
Patch: 115553-23 Obsoletes: 112836-02, 115338-01, 115557-01, 116065-03, 117198-02, 117382-01, 115004-02, 117196-01 Requires: 112233-12, 112954-05, 113
Patch: 117483-01 Obsoletes:  Requires: 118558-05, 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx
Patch: 112964-16 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 113713-23 Obsoletes: 114462-01, 115520-01, 115555-01, 115524-01, 115689-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWarc
Patch: 113277-50 Obsoletes: 113324-03, 113347-02, 117252-01 Requires: 112233-02, 112834-02 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWc
Patch: 112954-15 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWcsxu
Patch: 114332-25 Obsoletes: 112969-04, 114327-01, 113496-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcsl, SUNWcslx, SUNWcarx, SUNWcs
Patch: 118558-38 Obsoletes: 112987-01, 113543-02, 114126-03, 114338-01, 114378-02, 114386-03, 114395-03, 115994-01, 113025-01, 113221-03, 113574-08, 1
Patch: 115553-24 Obsoletes: 112836-02, 115338-01, 115557-01, 116065-03, 117198-02, 117382-01, 115004-02, 117196-01 Requires: 112233-12, 112954-05, 113
Patch: 112963-29 Obsoletes: 112833-01 Requires:  Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcsl, SUNWcslx, SUNWcsxu, SUNWtoo, SUNWmdb, SUNWmdbx, 
Patch: 112960-40 Obsoletes: 113152-01, 113166-01, 113476-13 Requires: 112874-06 Incompatibles:  Packages: SUNWcsu, SUNWcsl, SUNWcslx, SUNWnisu, SUNWhe
Patch: 114133-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 118305-09 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsu, SUNWcsr, SUNWcarx, SUNWhea
Patch: 113225-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsu
Patch: 112834-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWhea
Patch: 112854-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 112874-34 Obsoletes: 113165-01, 113475-03, 115480-01 Requires: 112233-11 Incompatibles:  Packages: SUNWcsr, SUNWcsl, SUNWcslx, SUNWhea, SUNWarc
Patch: 112908-27 Obsoletes: 112724-03, 112726-03, 112907-06 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcar, SUNWcarx, SUNWgss, SUNWkrbu, SUNWkr
Patch: 112920-02 Obsoletes: 112712-02 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcsl, SUNWcslx, SUNWmdb, SUNWmdbx, SUNWhea, SUNWarc, SUNWarcx, 
Patch: 112958-04 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcsl, SUNWcslx, SUNWcarx, SUNWcstl, SUNWcstlx
Patch: 113068-06 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 113278-15 Obsoletes: 114231-02, 115247-01 Requires: 112233-09 Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWnfscu, SUNWnfssu, SUNWhea
Patch: 113318-26 Obsoletes: 112955-04, 113222-06, 115249-01, 115253-02, 117175-02 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWnfscr, S
Patch: 113329-17 Obsoletes: 114979-01, 115882-01, 116239-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWpsf, SUNWpcu, SUNWppm, SUNWpsr, SUNWpsu,
Patch: 113335-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 113459-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 113467-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 113482-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 114125-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 114331-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcar, SUNWcarx
Patch: 114349-04 Obsoletes: 113274-01, 115504-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcsl, SUNWhea, SUNWcstl
Patch: 114352-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 114361-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 114377-04 Obsoletes: 116435-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 114383-04 Obsoletes: 114754-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWhea
Patch: 115172-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 115488-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 115537-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 115683-03 Obsoletes: 115512-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWhea
Patch: 115685-01 Obsoletes: 115518-01 Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 115687-02 Obsoletes: 115522-01 Requires: 113713-07 Incompatibles:  Packages: SUNWcsr
Patch: 116047-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWhea
Patch: 116241-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116247-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 116495-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116498-02 Obsoletes: 116418-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116510-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116527-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116532-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWpdu
Patch: 116554-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116670-04 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116782-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 117071-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWhea
Patch: 117152-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 117160-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 117418-01 Obsoletes: 117194-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 117426-03 Obsoletes: 117294-01 Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWcti2x
Patch: 117457-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 117459-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 117746-04 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 118335-05 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 121314-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 121316-02 Obsoletes:  Requires: 112233-12, 117171-17 Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWhea
Patch: 121998-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 122716-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWmdb, SUNWmdbx, SUNWhea
Patch: 123182-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWhea
Patch: 123056-01 Obsoletes:  Requires: 118558-27 Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWhea
Patch: 116486-03 Obsoletes: 116415-01 Requires: 113447-06 Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 116561-14 Obsoletes: 114388-05, 116439-01, 116492-01, 117297-01, 117425-01 Requires: 118558-31, 112233-12 Incompatibles:  Packages: SUNWcsr, SU
Patch: 113477-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWdrr
Patch: 113717-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 114566-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWocfr
Patch: 115257-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 115258-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWefcr, SUNWypr
Patch: 115322-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr
Patch: 116090-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWsndmr, SUNWusb
Patch: 116092-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWmdr, SUNWusx, SUNW1394x, SUNWusb
Patch: 117280-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWmdr
Patch: 117282-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcti2x, SUNWmdr, SUNWmdu, SUNWusb
Patch: 120192-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWmdr
Patch: 123837-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcti2x, SUNWdrr, SUNWmdr, SUNWmdu, SUNWusx, SUNW1394x, SUNWaudd, SUNWaud
Patch: 123838-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWdrr, SUNWmdr, SUNWocfr, SUNWslpr, SUNWsndmr, SUNWssad, SUNWefcr, SUNWus
Patch: 112908-29 Obsoletes: 112724-03, 112726-03, 112907-06 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcar, SUNWcarx, SUNWkrbr, SUNWgss, SUNWkr
Patch: 112874-35 Obsoletes: 112839-08, 112962-01, 113165-01, 113475-03, 115480-01 Requires: 112233-11 Incompatibles:  Packages: SUNWcsr, SUNWcsl, SUNW
Patch: 113335-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx
Patch: 113318-27 Obsoletes: 112955-04, 113222-06, 115249-01, 115253-02, 117175-02 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWcarx, SUNWnfscr, S
Patch: 116561-15 Obsoletes: 114388-05, 116439-01, 116492-01, 117297-01, 117425-01 Requires: 112233-12, 118558-31 Incompatibles:  Packages: SUNWcsr, SU
Patch: 113329-18 Obsoletes: 114979-01, 115882-01, 116239-01 Requires:  Incompatibles:  Packages: SUNWcsr, SUNWpsf, SUNWpcu, SUNWppm, SUNWpsr, SUNWpsu,
Patch: 112912-01 Obsoletes: 112688-02 Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcstl
Patch: 113029-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWcstl, SUNWcstlx
Patch: 113319-24 Obsoletes: 113481-03, 115165-05, 115492-01 Requires: 112874-16 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWnisu, SUNWhea, SUNWar
Patch: 113480-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx
Patch: 113493-03 Obsoletes:  Requires: 112874-18 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWmdb, SUNWmdbx
Patch: 114129-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWhea, SUNWarc, SUNWarcx, SUNWcstl, SUNWcstlx
Patch: 114131-03 Obsoletes: 115514-01 Requires: 112233-09 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWarc
Patch: 114235-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx
Patch: 114370-05 Obsoletes:  Requires: 112874-13 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWhea
Patch: 115542-02 Obsoletes:  Requires: 113319-12 Incompatibles:  Packages: SUNWcsl, SUNWcslx
Patch: 115544-02 Obsoletes:  Requires: 113319-12 Incompatibles:  Packages: SUNWcsl, SUNWcslx
Patch: 115545-01 Obsoletes:  Requires: 113319-12 Incompatibles:  Packages: SUNWcsl, SUNWcslx
Patch: 115675-01 Obsoletes: 115482-02 Requires: 112233-09, 112874-17 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWarc, SUNWarcx, SUNWcstl, SUNWcst
Patch: 115681-01 Obsoletes: 115502-01 Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWhea
Patch: 115697-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWarc, SUNWarcx, SUNWcstl, SUNWcstlx
Patch: 116229-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWarc
Patch: 116494-01 Obsoletes: 116440-01 Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWhea, SUNWcstl, SUNWcstlx
Patch: 117431-01 Obsoletes:  Requires: 113319-20 Incompatibles:  Packages: SUNWcsl, SUNWcslx
Patch: 117443-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx
Patch: 117453-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWarc
Patch: 120441-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWarc, SUNWcstl, SUNWcstlx
Patch: 112839-08 Obsoletes: 112962-01 Requires: 112874-13 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWmdb, SUNWmdbx
Patch: 116178-01 Obsoletes:  Requires: 116229-01 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWarc
Patch: 113319-25 Obsoletes: 113481-03, 115165-05, 115492-01 Requires: 112874-16 Incompatibles:  Packages: SUNWcsl, SUNWcslx, SUNWnisu, SUNWhea, SUNWar
Patch: 113332-07 Obsoletes: 113539-01, 113540-01, 114464-01, 114376-03 Requires:  Incompatibles:  Packages: SUNWkvm, SUNWkvmx, SUNWmdb, SUNWpstl, SUNW
Patch: 113495-05 Obsoletes: 114767-01 Requires:  Incompatibles:  Packages: SUNWkvm, SUNWkvmx
Patch: 114387-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm
Patch: 115010-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm, SUNWmdb, SUNWpstl, SUNWpstlx, SUNWhea
Patch: 115012-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm
Patch: 115014-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm
Patch: 116478-01 Obsoletes: 116075-01 Requires:  Incompatibles:  Packages: SUNWkvm, SUNWkvmx, SUNWmdb, SUNWpstl, SUNWpstlx, SUNWhea
Patch: 119937-02 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWkvm
Patch: 123763-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm, SUNWcarx, SUNWkvmx, SUNWpiclu, SUNWfruip, SUNWmdb, SUNWpstl, SUNWpstlx, SUN
Patch: 123764-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm, SUNWkvmx, SUNWpiclu, SUNWfruip, SUNWmdb, SUNWpstl, SUNWpstlx, SUNWhea
Patch: 123765-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm, SUNWpiclu, SUNWfruip, SUNWmdb, SUNWpstl, SUNWpstlx, SUNWhea
Patch: 123769-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm, SUNWfruip
Patch: 123770-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkvm, SUNWkvmx, SUNWpiclu, SUNWfruip, SUNWmdb, SUNWpstl, SUNWpstlx
Patch: 113720-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 115006-01 Obsoletes:  Requires: 114332-04 Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 116484-01 Obsoletes: 116133-01 Requires:  Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 117123-07 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcar, SUNWwbsup
Patch: 118897-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 123766-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 117155-10 Obsoletes:  Requires: 112233-12, 117171-17 Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 116548-05 Obsoletes:  Requires: 112233-12, 113073-10 Incompatibles:  Packages: SUNWcar
Patch: 113077-18 Obsoletes: 116071-01 Requires: 123056-01 Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 113077-20 Obsoletes: 116071-01 Requires: 123056-01 Incompatibles:  Packages: SUNWcar, SUNWcarx
Patch: 114374-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWpl5u
Patch: 122002-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWpl5u, SUNWesu
Patch: 119449-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWpl5v
Patch: 113075-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu, SUNWesxu
Patch: 113472-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu, SUNWesxu
Patch: 114363-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu, SUNWesxu, SUNWxcu4
Patch: 115259-03 Obsoletes: 119436-01 Requires:  Incompatibles:  Packages: SUNWesu, SUNWaccu
Patch: 115693-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu
Patch: 115986-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu, SUNWesxu
Patch: 116245-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu
Patch: 117067-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu
Patch: 118472-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu, SUNWesxu
Patch: 122709-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWesu
Patch: 111722-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWlmsx, SUNWlibms, SUNWlibm
Patch: 117560-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWlmsx, SUNWlibms, SUNWlibm
Patch: 113220-01 Obsoletes:  Requires: 112233-01 Incompatibles:  Packages: SUNWcarx
Patch: 113446-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx
Patch: 113975-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx
Patch: 113984-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx
Patch: 114003-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx
Patch: 116009-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx, SUNWkvmx
Patch: 116488-03 Obsoletes: 116417-01 Requires:  Incompatibles:  Packages: SUNWcarx, SUNWhea
Patch: 116489-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx
Patch: 116529-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx
Patch: 116530-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcarx
Patch: 117131-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcarx
Patch: 117165-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcarx
Patch: 118539-02 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWcarx
Patch: 120241-03 Obsoletes: 116665-02 Requires: 112233-12 Incompatibles:  Packages: SUNWcarx
Patch: 123760-01 Obsoletes:  Requires: 118558-31 Incompatibles:  Packages: SUNWcarx
Patch: 123761-03 Obsoletes:  Requires: 118558-31 Incompatibles:  Packages: SUNWcarx, SUNWmdbx
Patch: 116557-04 Obsoletes:  Requires: 118558-01, 117171-17, 112233-12 Incompatibles:  Packages: SUNWcarx
Patch: 117124-12 Obsoletes: 116556-01, 116668-06, 117150-03 Requires: 112233-12, 117171-10, 118558-05 Incompatibles:  Packages: SUNWcarx, SUNWefcx, SU
Patch: 111712-15 Obsoletes:  Requires: 111711-15 Incompatibles:  Packages: SUNWlibCx
Patch: 111712-16 Obsoletes:  Requires: 111711-16 Incompatibles:  Packages: SUNWlibCx
Patch: 116084-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwfnt
Patch: 112785-54 Obsoletes: 113100-01, 113762-02, 112783-01, 113098-04, 113541-02 Requires: 113096-03, 112963-10 Incompatibles:  Packages: SUNWxwfnt, 
Patch: 112785-58 Obsoletes: 113100-01, 113762-02, 112783-01, 113098-04, 113541-02 Requires: 113096-03, 112963-10 Incompatibles:  Packages: SUNWxwfnt, 
Patch: 115754-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWzlib, SUNWzlibx
Patch: 113470-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwdv, SUNWxwdvx
Patch: 113096-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwplt
Patch: 113374-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwplt, SUNWxwman
Patch: 114561-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwplt
Patch: 117601-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwplt, SUNWxwplx
Patch: 117663-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwplt
Patch: 118300-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwplt, SUNWxwplx
Patch: 113764-05 Obsoletes:  Requires: 112785-12 Incompatibles:  Packages: SUNWxwplt
Patch: 111711-15 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWlibC
Patch: 111711-16 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWlibC
Patch: 113281-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnisu
Patch: 113579-09 Obsoletes: 113483-02, 115490-01 Requires: 115165-02 Incompatibles:  Packages: SUNWnisu, SUNWypr, SUNWypu, SUNWhea
Patch: 114736-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnisu
Patch: 121321-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnisu, SUNWlldap
Patch: 115677-02 Obsoletes: 115494-01 Requires: 121321-01 Incompatibles:  Packages: SUNWnisu
Patch: 114470-10 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWzuluc, SUNWzulux, SUNWzuluw
Patch: 112601-10 Obsoletes:  Requires:  Incompatibles:  Packages: TSIpgx, TSIpgxw, TSIpgxx
Patch: 113145-02 Obsoletes:  Requires:  Incompatibles:  Packages: NATEvplr
Patch: 115296-01 Obsoletes:  Requires:  Incompatibles:  Packages: NATEvplu
Patch: 112620-10 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWafb, SUNWafbx, SUNWafbcf, SUNWafbw
Patch: 112817-29 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWced, SUNWcedx, SUNWcea, SUNWceax, SUNWcedu
Patch: 113503-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWced, SUNWcedx
Patch: 117430-01 Obsoletes: 117298-01 Requires:  Incompatibles:  Packages: SUNWcti2x
Patch: 114586-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWbzip, SUNWbzipx
Patch: 112838-12 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWefcx, SUNWhea
Patch: 115669-03 Obsoletes: 114771-01 Requires:  Incompatibles:  Packages: SUNWefcx
Patch: 120315-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWdrcrx
Patch: 113074-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdrr
Patch: 114249-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWgttf, SUNW5xmft, SUNW5ttf, SUNWkxmft, SUNWcxmft, SUNWtxfnt
Patch: 112621-12 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWffb, SUNWffbx, SUNWffbcf, SUNWffbw
Patch: 117428-01 Obsoletes: 117295-01 Requires:  Incompatibles:  Packages: SUNWpiclu
Patch: 112959-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfruid, SUNWfruix
Patch: 113027-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfruid, SUNWfruix
Patch: 112913-02 Obsoletes: 112696-02 Requires:  Incompatibles:  Packages: SUNWfruip
Patch: 112565-23 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWgfb, SUNWgfbx, SUNWgfbcf, SUNWgfbr, SUNWgfbw
Patch: 112771-32 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmfrun, SUNWdtbax
Patch: 117632-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmfrun
Patch: 117134-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmdr
Patch: 116669-20 Obsoletes: 115559-01, 119432-01 Requires: 113073-14 Incompatibles:  Packages: SUNWmdr, SUNWmdu, SUNWmdx, SUNWmddr, SUNWhea
Patch: 116669-22 Obsoletes: 115559-01, 119432-01 Requires: 113073-14 Incompatibles:  Packages: SUNWmdr, SUNWmdu, SUNWmdx, SUNWmddr, SUNWhea
Patch: 122484-01 Obsoletes:  Requires: 113073-14 Incompatibles:  Packages: SUNWmdu
Patch: 116755-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWadmc
Patch: 113434-32 Obsoletes: 113313-01, 113504-01, 113628-02, 113965-01, 115622-01, 115597-02, 115699-02, 114726-02, 115847-01 Requires: 114482-01 Inco
Patch: 112941-09 Obsoletes: 112949-01, 113358-01 Requires:  Incompatibles:  Packages: SUNWadmap
Patch: 114584-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWi2cr, SUNWi2cx
Patch: 113070-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWbip
Patch: 116774-03 Obsoletes:  Requires: 115683-02 Incompatibles:  Packages: SUNWbip
Patch: 115591-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWidecr
Patch: 117636-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWidecx
Patch: 112915-04 Obsoletes: 112699-02, 115516-01 Requires:  Incompatibles:  Packages: SUNWrcmdc
Patch: 114716-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWrcmdc, SUNWsutl
Patch: 112875-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWrcmds
Patch: 117455-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWrcmds
Patch: 114006-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtftp
Patch: 119433-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtnetc
Patch: 114569-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWscpu, SUNWscpux, SUNWsra
Patch: 120240-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWscpu, SUNWscpux
Patch: 114571-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWbcp
Patch: 112787-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwopt
Patch: 112805-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas, SUNWdtab, SUNWdthev, SUNWdthez
Patch: 112812-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas, SUNWdtdte
Patch: 113789-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas
Patch: 113798-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas, SUNWdtbax
Patch: 113861-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas
Patch: 114282-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas, SUNWdtbax
Patch: 115972-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas
Patch: 116308-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas, SUNWdtbax
Patch: 119976-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas, SUNWdtbax
Patch: 116157-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtbas
Patch: 112926-06 Obsoletes: 112732-02 Requires:  Incompatibles:  Packages: SUNWocfr, SUNWocf, SUNWocfx, SUNWocfh, SUNWcstl, SUNWcstlx
Patch: 113863-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdte
Patch: 117728-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdte
Patch: 112807-17 Obsoletes: 114209-01, 113794-01 Requires: 112785-38 Incompatibles:  Packages: SUNWdtdte
Patch: 112807-18 Obsoletes: 113794-01, 114209-01 Requires: 112785-55 Incompatibles:  Packages: SUNWdtdte
Patch: 112617-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdmn
Patch: 112808-09 Obsoletes: 113796-02 Requires:  Incompatibles:  Packages: SUNWtltk, SUNWtltkx
Patch: 113279-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnfscr, SUNWnfscx, SUNWhea
Patch: 117179-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWnfscr, SUNWnfscx
Patch: 121194-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnfscu
Patch: 113331-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnfssu
Patch: 116502-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnfssu
Patch: 112951-13 Obsoletes: 115599-01 Requires: 115689-01 Incompatibles:  Packages: SUNWswmt
Patch: 112806-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdst
Patch: 112810-06 Obsoletes: 113865-01 Requires:  Incompatibles:  Packages: SUNWdtdst
Patch: 113841-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdst
Patch: 114312-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdst, SUNWscgui, SUNWpdas
Patch: 114495-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdst
Patch: 115713-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdst
Patch: 117114-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtdst
Patch: 112540-26 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWifb, SUNWifbx, SUNWifbcf, SUNWifbw
Patch: 112804-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtezt
Patch: 113839-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtezt
Patch: 114555-31 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjfbx, SUNWjfbcf, SUNWjfbr, SUNWjfbw, SUNWjfbmn
Patch: 114607-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjfbx, SUNWjfbcf, SUNWjfbr, SUNWjfbw
Patch: 114555-33 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjfbx, SUNWjfbcf, SUNWjfbr, SUNWjfbw, SUNWjfbmn
Patch: 113321-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWluxd, SUNWluxdx, SUNWluxl, SUNWluxlx, SUNWhea
Patch: 112622-19 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWm64, SUNWm64x, SUNWm64cf, SUNWm64w
Patch: 114538-36 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWpfbx, SUNWpfbcf, SUNWpfbw
Patch: 114538-39 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWpfbx, SUNWpfbcf, SUNWpfbw
Patch: 114219-11 Obsoletes: 113843-02 Requires:  Incompatibles:  Packages: SUNWdtim, SUNWolrte
Patch: 113240-11 Obsoletes: 114497-01 Requires:  Incompatibles:  Packages: SUNWdtwm
Patch: 113244-09 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdtwm
Patch: 116559-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWpmu
Patch: 112661-10 Obsoletes: 113971-01 Requires: 112785-46 Incompatibles:  Packages: SUNWiiimu, SUNWlccom, SUNWiiimr, SUNWxim, SUNWxi18n, SUNWxi18x, SU
Patch: 112661-11 Obsoletes: 113971-01 Requires: 112785-46 Incompatibles:  Packages: SUNWiiimu, SUNWlccom, SUNWiiimr, SUNWxim, SUNWxi18n, SUNWxi18x, SU
Patch: 119928-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWusx, SUNWusb
Patch: 113020-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNW5ttf, SUNWinleu, SUNWinlex, SUNWinttf, SUNWcttf, SUNWkttf, SUNWtleu, SUNWtleux
Patch: 114641-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjiu8, SUNWjiu8x
Patch: 114654-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWscgui
Patch: 113168-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjxmft, SUNWjxcft
Patch: 115177-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjxmft, SUNWjxcft
Patch: 114482-04 Obsoletes: 113967-01 Requires:  Incompatibles:  Packages: SUNWwsr2
Patch: 114221-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWi5rf
Patch: 115654-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWi7rf
Patch: 114624-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWi7rf
Patch: 113902-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkiu8, SUNWkiu8x, SUNWciu8, SUNWciu8x, SUNWtiu8, SUNWtiu8x, SUNWhiu8, SUNWhiu8x, 
Patch: 115095-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkiu8, SUNWkiu8x, SUNWciu8, SUNWhiu8
Patch: 112921-07 Obsoletes: 112725-02 Requires: 112908-01 Incompatibles:  Packages: SUNWkrbu, SUNWkrbux, SUNWkdcu, SUNWcstl, SUNWcstlx
Patch: 112922-02 Obsoletes: 112728-02 Requires: 112908-01 Incompatibles:  Packages: SUNWkrbu, SUNWkdcu, SUNWcstl
Patch: 112923-03 Obsoletes: 112729-02 Requires: 112908-01 Incompatibles:  Packages: SUNWkrbu, SUNWkdcu
Patch: 112924-01 Obsoletes: 112730-02 Requires: 112908-01 Incompatibles:  Packages: SUNWkrbu
Patch: 112925-06 Obsoletes: 112731-02 Requires: 112908-01 Incompatibles:  Packages: SUNWkrbu, SUNWkdcu
Patch: 113572-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdoc
Patch: 117593-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdoc
Patch: 113403-04 Obsoletes:  Requires: 113896-01, 112661-03, 112771-06, 112785-10 Incompatibles:  Packages: SUNWinleu, SUNWinlex, SUNWinttf
Patch: 113409-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWinleu, SUNWtleu
Patch: 115173-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtoo, SUNWtoox
Patch: 113908-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWinttf
Patch: 116231-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWllc, SUNWllcx
Patch: 116180-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWloc, SUNWlocx
Patch: 116453-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWadmfw
Patch: 114371-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmdb, SUNWmdbx
Patch: 117420-02 Obsoletes: 117250-01 Requires:  Incompatibles:  Packages: SUNWmdb, SUNWmdbx
Patch: 122976-01 Obsoletes:  Requires: 117171-04 Incompatibles:  Packages: SUNWmdb, SUNWmdbx
Patch: 113049-01 Obsoletes: 114130-01, 114368-01 Requires:  Incompatibles:  Packages: SUNWluxop, SUNWluxox
Patch: 113896-06 Obsoletes: 113061-01, 114274-02 Requires:  Incompatibles:  Packages: SUNWeuluf, SUNWeulux, SUNWulcf, SUNWeuodf, SUNWeu8os, SUNWeu8ox,
Patch: 112972-17 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmibii, SUNWsasnm, SUNWsasnx
Patch: 114612-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNW1251f
Patch: 116480-01 Obsoletes: 116076-01 Requires: 112233-12 Incompatibles:  Packages: SUNW1394x, SUNW1394h, SUNWhea
Patch: 122485-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNW1394x, SUNW1394h, SUNWhea
Patch: 116663-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWntpu
Patch: 117143-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWntpu
Patch: 121996-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWopl5u
Patch: 116476-01 Obsoletes: 116067-01 Requires:  Incompatibles:  Packages: SUNWpcmci, SUNWpcmcx
Patch: 114731-09 Obsoletes: 116073-02 Requires:  Incompatibles:  Packages: SUNWpd, SUNWpdx, SUNWpdu
Patch: 113320-06 Obsoletes:  Requires: 123056-01 Incompatibles:  Packages: SUNWpd, SUNWpdx
Patch: 114276-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWarrf
Patch: 115608-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjxcft
Patch: 113085-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtxfnt
Patch: 114926-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWaudd, SUNWauddx
Patch: 123762-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWauddx, SUNWaudh
Patch: 112764-09 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWqfed, SUNWqfedx, SUNWqfedu
Patch: 112916-01 Obsoletes: 112700-02 Requires:  Incompatibles:  Packages: SUNWroute
Patch: 116778-01 Obsoletes:  Requires: 115683-02 Incompatibles:  Packages: SUNWroute
Patch: 112928-03 Obsoletes: 112738-02 Requires: 115683-02 Incompatibles:  Packages: SUNWroute
Patch: 113086-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWciu8, SUNWciu8x
Patch: 116493-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWscmos
Patch: 119447-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWses, SUNWsesx
Patch: 115354-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWslpr, SUNWslpu
Patch: 113575-07 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWsndmr, SUNWsndmu
Patch: 113575-08 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWsndmr, SUNWsndmu
Patch: 116780-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWstcx
Patch: 117256-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWnamdt
Patch: 112627-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtcxow
Patch: 117479-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWefclx
Patch: 113224-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWefcux
Patch: 112965-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWeridx, SUNWhea
Patch: 112965-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWeridx, SUNWhea
Patch: 113046-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfcp, SUNWfcpx
Patch: 114729-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtnetd
Patch: 115646-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtnfc, SUNWtnfcx
Patch: 115350-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWudf
Patch: 113334-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWudfr, SUNWudfrx
Patch: 117119-05 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWged, SUNWgedx, SUNWgedu
Patch: 112966-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWvolu
Patch: 114229-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWvolu
Patch: 114335-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWvolu
Patch: 116474-03 Obsoletes: 116063-01 Requires: 112954-05, 113277-18, 114128-02 Incompatibles:  Packages: SUNWvolu, SUNWvolux, SUNWhea
Patch: 117477-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWvolu, SUNWvolux
Patch: 116472-02 Obsoletes: 116061-01 Requires: 112954-05, 113277-18, 114128-02, 116474-01 Incompatibles:  Packages: SUNWvolu
Patch: 114564-09 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWftpu
Patch: 114564-10 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWftpu
Patch: 112625-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfwdcx
Patch: 120443-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxcu4
Patch: 121588-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxcu4
Patch: 123058-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxcu4
Patch: 113407-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtleu
Patch: 113923-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwfs
Patch: 113513-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwpsr
Patch: 114602-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwpsr
Patch: 116121-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwpsr
Patch: 116039-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwpl
Patch: 117177-02 Obsoletes:  Requires: 112908-24 Incompatibles:  Packages: SUNWgsdhx, SUNWgssdh
Patch: 113226-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWhmd, SUNWhmdx
Patch: 114974-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWifp, SUNWifpx
Patch: 117577-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWi1of
Patch: 117400-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWislcc, SUNWislcx
Patch: 117203-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfontconfig-root, SUNWfontconfig-64, SUNWfontconfig
Patch: 117203-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfontconfig-root, SUNWfontconfig-64, SUNWfontconfig
Patch: 116105-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfreetype2-64, SUNWfreetype2
Patch: 116105-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfreetype2-64, SUNWfreetype2
Patch: 114677-11 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWicux, SUNWicu, SUNWicud
Patch: 117201-09 Obsoletes:  Requires: 117203-04, 116105-03 Incompatibles:  Packages: SUNWstsfx, SUNWstsf, SUNWxwxst, SUNWxwxft
Patch: 111703-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWsprot, SUNWsprox, SUNWxcu4t
Patch: 115695-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWypu
Patch: 114014-10 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWlxml, SUNWlxsl, SUNWlxmlx, SUNWlxslx, SUNWsfman
Patch: 114818-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWpng, SUNWsfman
Patch: 115738-05 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-base-libs-root, SUNWgnome-base-libs, SUNWgnome-base-libs-64-root,
Patch: 121985-01 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-component
Patch: 118260-01 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-config
Patch: 117186-02 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-vfs-root, SUNWgnome-vfs
Patch: 115734-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWgnome-vfs
Patch: 116006-01 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-libs
Patch: 112945-41 Obsoletes: 113829-04, 114724-01 Requires:  Incompatibles:  Packages: SUNWmccom, SUNWmcc, SUNWwbapi, SUNWwbcou, SUNWwbmc, SUNWwbcor, S
Patch: 112945-44 Obsoletes: 113829-04, 114724-01 Requires:  Incompatibles:  Packages: SUNWmccom, SUNWmcc, SUNWwbapi, SUNWwbcou, SUNWwbmc, SUNWwbcor, S
Patch: 113813-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmcc
Patch: 114503-14 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmcc, SUNWmga
Patch: 114520-07 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmcc, SUNWwbcor, SUNWwbpro
Patch: 113742-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmc
Patch: 116807-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmc
Patch: 124015-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWwbmc
Patch: 114711-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmga
Patch: 118064-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmga
Patch: 114975-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdhcsu
Patch: 117450-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdhcsu
Patch: 112837-10 Obsoletes:  Requires: 115697-02 Incompatibles:  Packages: SUNWdhcsu
Patch: 113076-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWdhcm
Patch: 117985-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxildh
Patch: 112811-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWolrte
Patch: 114967-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfdl
Patch: 112809-02 Obsoletes: 113845-01 Requires:  Incompatibles:  Packages: SUNWjmfp
Patch: 114636-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWkcsrt, SUNWkcsrx, SUNWkcspg, SUNWkcspx
Patch: 112943-09 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWlvma, SUNWlvmg
Patch: 114501-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWlvma
Patch: 115158-10 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwsvr
Patch: 113859-04 Obsoletes:  Requires:  Incompatibles:  Packages: IPLTnspr, IPLTnss, IPLTjss, IPLTnls, IPLTcons, IPLTadcon, IPLTpldap, IPLTdsu, IPLTad
Patch: 117590-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWladm
Patch: 113868-02 Obsoletes: 114660-02 Requires:  Incompatibles:  Packages: SUNWpdas
Patch: 113799-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWsregu
Patch: 116296-13 Obsoletes: 116794-04 Requires:  Incompatibles:  Packages: SUNWjaf
Patch: 116300-13 Obsoletes: 116798-04 Requires:  Incompatibles:  Packages: SUNWjmail
Patch: 116300-21 Obsoletes: 116798-04 Requires:  Incompatibles:  Packages: SUNWjmail
Patch: 114049-12 Obsoletes:  Requires:  Incompatibles: 114045-02 Packages: SUNWpr, SUNWtls, SUNWprx, SUNWtlsx
Patch: 115926-10 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWpr, SUNWtls, SUNWjss, SUNWprx, SUNWtlsx, SUNWjssx, SUNWtlsu, SUNWtlsux
Patch: 114049-14 Obsoletes:  Requires:  Incompatibles: 114045-02 Packages: SUNWpr, SUNWtls, SUNWprx, SUNWtlsx
Patch: 119211-10 Obsoletes: 115926-10, 117724-10 Requires:  Incompatibles:  Packages: SUNWpr, SUNWtls, SUNWjss, SUNWprx, SUNWtlsx, SUNWjssx, SUNWtlsu,
Patch: 118618-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWjss
Patch: 117595-05 Obsoletes:  Requires: 117593-01 Incompatibles:  Packages: SUNWman
Patch: 116288-13 Obsoletes: 116786-04 Requires:  Incompatibles:  Packages: SUNWascmn, SUNWasr, SUNWasac, SUNWasu, SUNWasdem
Patch: 116760-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWasr
Patch: 116298-13 Obsoletes: 116796-04 Requires:  Incompatibles:  Packages: SUNWxsrt, SUNWxrgrt, SUNWxrpcrt
Patch: 116298-21 Obsoletes: 116796-04 Requires:  Incompatibles:  Packages: SUNWxsrt, SUNWxrgrt, SUNWxrpcrt
Patch: 116302-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxrpcrt
Patch: 117540-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWasu
Patch: 116534-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmdau
Patch: 116776-01 Obsoletes:  Requires: 115683-02 Incompatibles:  Packages: SUNWmipu
Patch: 119494-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWmkcd
Patch: 112927-01 Obsoletes: 112733-02 Requires:  Incompatibles:  Packages: SUNWhea
Patch: 112929-01 Obsoletes: 112739-02 Requires:  Incompatibles:  Packages: SUNWhea
Patch: 114339-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWhea
Patch: 114380-04 Obsoletes: 114768-01 Requires:  Incompatibles:  Packages: SUNWhea, SUNWcpcu, SUNWcpcux
Patch: 115992-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWhea
Patch: 117127-02 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWhea
Patch: 117138-01 Obsoletes:  Requires: 112233-12 Incompatibles:  Packages: SUNWhea
Patch: 117162-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWhea
Patch: 123768-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWhea
Patch: 122673-01 Obsoletes:  Requires: 114344-18 Incompatibles:  Packages: SUNWhea
Patch: 115835-03 Obsoletes: 117682-03, 117686-01 Requires:  Incompatibles:  Packages: SUNWa2psr, SUNWa2psu, SUNWhpijs, SUNWespgs, SUNWffiltersu, SUNWg
Patch: 113716-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWaccu
Patch: 115651-02 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWaccu
Patch: 116490-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWaccu
Patch: 117473-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWaccu
Patch: 113028-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWosdem, SUNWqos, SUNWqosx
Patch: 113146-07 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWapchr, SUNWapchu, SUNWapchd
Patch: 113146-08 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWapchr, SUNWapchu, SUNWapchd
Patch: 114227-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWbtool
Patch: 114734-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWbtool
Patch: 114372-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWarc, SUNWarcx
Patch: 114822-04 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWpngx
Patch: 118759-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWxwfa
Patch: 113327-03 Obsoletes: 114855-01 Requires:  Incompatibles:  Packages: SUNWpppd, SUNWpppdu, SUNWpppdx
Patch: 115008-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWqosu
Patch: 113322-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWbnuu
Patch: 116546-08 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcdrw
Patch: 114233-05 Obsoletes: 115498-01 Requires:  Incompatibles:  Packages: SUNWrsm, SUNWrsmx
Patch: 114373-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWcstl, SUNWcstlx
Patch: 116500-01 Obsoletes: 116450-01 Requires:  Incompatibles:  Packages: SUNWcstl
Patch: 114326-03 Obsoletes: 114764-01 Requires:  Incompatibles:  Packages: SUNWdcsu
Patch: 116340-05 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWsfinf, SUNWgzip
Patch: 114684-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWsmbar, SUNWsmbac, SUNWsmbau
Patch: 114684-07 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWsmbar, SUNWsmbac, SUNWsmbau
Patch: 113273-11 Obsoletes:  Requires: 112908-24 Incompatibles:  Packages: SUNWsshcu, SUNWsshdr, SUNWsshdu, SUNWsshr, SUNWsshu
Patch: 114356-08 Obsoletes:  Requires: 112908-24 Incompatibles:  Packages: SUNWsshcu, SUNWsshu
Patch: 113273-12 Obsoletes:  Requires: 112908-24 Incompatibles:  Packages: SUNWsshcu, SUNWsshdr, SUNWsshdu, SUNWsshr, SUNWsshu
Patch: 115974-01 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-user-docs
Patch: 114016-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWtcatu, SUNWtcatr
Patch: 117753-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWhpijs, SUNWffiltersu
Patch: 114600-06 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWvld, SUNWvldu, SUNWvldx
Patch: 117485-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfnsx5, SUNWfnx5x
Patch: 116846-03 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWgzip
Patch: 117441-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWfss
Patch: 117184-01 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-panel
Patch: 115812-02 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-dtlogin-integration
Patch: 116674-06 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-file-mgr-share, SUNWgnome-file-mgr
Patch: 115958-01 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-help-db
Patch: 115740-02 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-print-share, SUNWgnome-print
Patch: 115736-06 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-wm-root, SUNWgnome-wm
Patch: 115968-01 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-perf-meter-share
Patch: 115742-02 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-search-tool
Patch: 115966-01 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-terminal-share
Patch: 115964-01 Obsoletes:  Requires: 113713-04 Incompatibles:  Packages: SUNWgnome-text-editor-share
Patch: 115970-01 Obsoletes:  Requires: 113713-13 Incompatibles:  Packages: SUNWgnome-utility-applets-share
Patch: 118191-01 Obsoletes:  Requires:  Incompatibles:  Packages: SUNWgtar


---=[ sysdef ]=-----------------------------------------------------------

* System Configuration
*
  swap files
swapfile             dev  swaplo blocks   free
/dev/md/dsk/d1      85,1      16 8395184 8395184
*
* Tunable Parameters
*
167239680       maximum memory allowed in buffer cache (bufhwm)
   30000        maximum number of processes (v.v_proc)
      99        maximum global priority in sys class (MAXCLSYSPRI)
   29995        maximum processes per user id (v.v_maxup)
      30        auto update time limit in seconds (NAUTOUP)
      25        page stealing low water mark (GPGSLO)
       1        fsflush run rate (FSFLUSHR)
      25        minimum resident memory for avoiding deadlock (MINARMEM)
      25        minimum swapable memory for avoiding deadlock (MINASMEM)
*
* Utsname Tunables
*
     5.9  release (REL)
nyrofcsol29  node name (NODE)
   SunOS  system name (SYS)
Generic_118558-38  version (VER)
*
* Process Resource Limit Tunables (Current:Maximum)
*
0x0000000000000100:0x0000000000010000   file descriptors
*
* Streams Tunables
*
     9  maximum number of pushes allowed (NSTRPUSH)
 65536  maximum stream message size (STRMSGSZ)
  1024  max size of ctl part of message (STRCTLSZ)
*
* IPC Messages
*
  2048  max message size (MSGMAX)
  4096  max bytes on queue (MSGMNB)
    50  message queue identifiers (MSGMNI)
    40  system message headers (MSGTQL)
*
* IPC Semaphores
*
    10  semaphore identifiers (SEMMNI)
    60  semaphores in system (SEMMNS)
    30  undo structures in system (SEMMNU)
    25  max semaphores per id (SEMMSL)
    10  max operations per semop call (SEMOPM)
    10  max undo entries per process (SEMUME)
 32767  semaphore maximum value (SEMVMX)
 16384  adjust on exit max value (SEMAEM)
*
* IPC Shared Memory
*
   8388608      max shared memory segment size (SHMMAX)
   100  shared memory identifiers (SHMMNI)
*
* Time Sharing Scheduler Tunables
*
60      maximum time sharing user priority (TSMAXUPRI)
SYS     system class name (SYS_NAME)


---=[ ulimit -a ]=--------------------------------------------------------

core file size (blocks)     unlimited
data seg size (kbytes)      unlimited
file size (blocks)          unlimited
open files                  256
pipe size (512 bytes)       10
stack size (kbytes)         8192
cpu time (seconds)          unlimited
max user processes          29995
virtual memory (kbytes)     unlimited


---=[ Projects Listing (projects -l) ]=-----------------------------------

n/a


---=[ Contents of /etc/project ]=-----------------------------------------

system:0::::
user.root:1::::
noproject:2::::
default:3::::
group.staff:10::::


---=[ inittab ]=----------------------------------------------------------

ap::sysinit:/sbin/autopush -f /etc/iu.ap
ap::sysinit:/sbin/soconfig -f /etc/sock2path
fs::sysinit:/sbin/rcS sysinit           &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
is:3:initdefault:
p3:s1234:powerfail:/usr/sbin/shutdown -y -i5 -g0 &gt;/dev/msglog 2&lt;&gt;/dev/msglog
sS:s:wait:/sbin/rcS                     &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
s0:0:wait:/sbin/rc0                     &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
s1:1:respawn:/sbin/rc1                  &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
s2:23:wait:/sbin/rc2                    &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
s3:3:wait:/sbin/rc3                     &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
s5:5:wait:/sbin/rc5                     &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
s6:6:wait:/sbin/rc6                     &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
fw:0:wait:/sbin/uadmin 2 0              &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
of:5:wait:/sbin/uadmin 2 6              &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
rb:6:wait:/sbin/uadmin 2 1              &gt;/dev/msglog 2&lt;&gt;/dev/msglog &lt;/dev/console
sc:234:respawn:/usr/lib/saf/sac -t 300
co:234:respawn:/usr/lib/saf/ttymon -g -h -p "`uname -n` console login: " -T sun -d /dev/console -l console -m ldterm,ttcompat
LT:3:respawn:/usr/sbin/tictimed &gt;/dev/msglog 2&lt;&gt;/dev/msglog


---=[ Start-Up Script Listing ]=------------------------------------------

/etc/rc1.d/S01MOUNTFSYS
/etc/rc1.d/S10lu
/etc/rc2.d/S01MOUNTFSYS
/etc/rc2.d/S01tlm
/etc/rc2.d/S05RMTMPFILES
/etc/rc2.d/S10lu
/etc/rc2.d/S20sysetup
/etc/rc2.d/S21perf
/etc/rc2.d/S30sysid.net
/etc/rc2.d/S40llc2
/etc/rc2.d/S42ncakmod
/etc/rc2.d/S47pppd
/etc/rc2.d/S69inet
/etc/rc2.d/S70sckm
/etc/rc2.d/S70uucp
/etc/rc2.d/S71ldap.client
/etc/rc2.d/S71rpc
/etc/rc2.d/S71sysid.sys
/etc/rc2.d/S72autoinstall
/etc/rc2.d/S72directory
/etc/rc2.d/S72inetsvc
/etc/rc2.d/S72slpd
/etc/rc2.d/S72vasgpd
/etc/rc2.d/S73cachefs.daemon
/etc/rc2.d/S73nfs.client
/etc/rc2.d/S74autofs
/etc/rc2.d/S74syslog
/etc/rc2.d/S74xntpd
/etc/rc2.d/S75cron
/etc/rc2.d/S75flashprom
/etc/rc2.d/S75savecore
/etc/rc2.d/S75vasd
/etc/rc2.d/S76nscd
/etc/rc2.d/S77sf880dr
/etc/rc2.d/S80lp
/etc/rc2.d/S80spc
/etc/rc2.d/S81ipp
/etc/rc2.d/S85power
/etc/rc2.d/S88sendmail
/etc/rc2.d/S88utmpd
/etc/rc2.d/S89PRESERVE
/etc/rc2.d/S89bdconfig
/etc/rc2.d/S90wbem
/etc/rc2.d/S91afbinit
/etc/rc2.d/S91gfbinit
/etc/rc2.d/S91ifbinit
/etc/rc2.d/S91jfbinit
/etc/rc2.d/S91kfbinit
/etc/rc2.d/S91zuluinit
/etc/rc2.d/S93cacheos.finish
/etc/rc2.d/S94ncalogd
/etc/rc2.d/S95IIim
/etc/rc2.d/S95lwact
/etc/rc2.d/S95networker
/etc/rc2.d/S95svm.sync
/etc/rc2.d/S98efcode
/etc/rc2.d/S98fc-cache
/etc/rc2.d/S98sshd-quest
/etc/rc2.d/S99audit
/etc/rc2.d/S99dtlogin
/etc/rc2.d/S99rcapd
/etc/rc2.d/S99sneep
/etc/rc3.d/S13kdc.master
/etc/rc3.d/S14kdc
/etc/rc3.d/S15nfs.server
/etc/rc3.d/S16boot.server
/etc/rc3.d/S34dhcp
/etc/rc3.d/S50apache
/etc/rc3.d/S52imq
/etc/rc3.d/S76snmpdx
/etc/rc3.d/S77dmi
/etc/rc3.d/S80mipagent
/etc/rc3.d/S81volmgt
/etc/rc3.d/S84appserv
/etc/rc3.d/S89psncollector
/etc/rc3.d/S89stosreg
/etc/rc3.d/S90samba
/etc/rc3.d/S90sthwreg
/etc/rc3.d/S91rc.patrol
/etc/rcS.d/S10cvc
/etc/rcS.d/S29wrsmcfg
/etc/rcS.d/S30network.sh
/etc/rcS.d/S30rootusr.sh
/etc/rcS.d/S33keymap.sh
/etc/rcS.d/S35cacheos.sh
/etc/rcS.d/S35svm.init
/etc/rcS.d/S40standardmounts.sh
/etc/rcS.d/S41cachefs.root
/etc/rcS.d/S42coreadm
/etc/rcS.d/S50devfsadm
/etc/rcS.d/S70buildmnttab.sh
/etc/rcS.d/S95picld


---=[ /etc/rc1.d/S01MOUNTFSYS ]=------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1999, 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)MOUNTFSYS  1.17    01/03/08 SMI"

if [ -z "$_INIT_PREV_LEVEL" ]; then
        set -- `/usr/bin/who -r`
        _INIT_PREV_LEVEL="$9"
fi

if [ $_INIT_PREV_LEVEL = S ]; then
        # Mount all local filesystems.

        cd /; /sbin/mountall -l
fi

# Make sure /usr subtree is present by testing for /usr/sbin

if [ ! -d /usr/sbin ]; then
        echo "WARNING: /usr subtree is missing: changing to single user mode"
        /sbin/init S
fi

#
# If there are non-global UFS filesystems with quotas, check and enable them.
#

# vlist is the non-global filesystems in vfstab requesting quotas
vlist=`/usr/bin/nawk '$1 !~ /^(#|-)/ &amp;&amp; $4 == "ufs" {
        if (match($7, "(^|,)(quota|rq)(,|$)") != 0 &amp;&amp;
            match($7, "(^|,)global(,|$)") == 0) print $1; }' /etc/vfstab`

if [ -n "$vlist" ]; then
        # mlist is the filesystems in mnttab that are ufs, mounted rw,
        # and without quotas turned on
        mlist=`/usr/sbin/mount -p | /usr/bin/nawk '$4 == "ufs" {
                if (match($7, "(^|,)ro(,|$)") == 0) print $1; }'`

        # qlist is the intersection of vlist and mlist
        qlist=`echo "$vlist&#92;n-&#92;n$mlist" | &#92;
                /usr/bin/nawk '{if ($1 == "-") { mlist = 1; }
                        else if (mlist == 0) { vlist[$1] = 1; }
                        else if (vlist[$1]) { print $1; } }'`

        #
        # Just check and enable the non-global UFS file systems with quotas
        # enabled. Note that "quotacheck -a" and "quotaon -a" will try
        # to process all UFS entries with quotas rather than excluding
        # the entries with the global option (the global entries are handled
        # later in another script if the cluster package is installed).
        #
        if [ -n "$qlist" ]; then
                echo 'Checking UFS quotas: &#92;c'
                /usr/sbin/quotacheck -p $qlist
                echo 'done.'
                /usr/sbin/quotaon $qlist
        fi
fi


---=[ /etc/rc1.d/S10lu ]=-------------------------------------------------

#!/sbin/sh
#
# Copyright 1999-2003 Sun Microsystems, Inc. All Rights Reserved.
#
# ident "@(#)init.d_lu.sh 5.5     03/02/12 SMI"
#
# Perform initial system startup or final system shutdown for Live Upgrade.

LU_INIT_D="/usr/lib/lu/lu_init_d"
LU_LUTAB_FILE="/etc/lutab"
BE_CONFIG_FILE="/etc/lu/jumpstart-profile-options.xml"

case "$1" in
start)
        # do no processing if:
        # - no boot environments configured, and
        # - no boot environments operations are pending
        [ ! -s "${LU_LUTAB_FILE}" -a ! -s "${BE_CONFIG_FILE}" ] &amp;&amp; exit 0

        # error exit if live upgrade init.d script is unavailable
        [ -f "${LU_INIT_D}" -a -s "${LU_INIT_D}" -a -x "${LU_INIT_D}" ] || exit 1

        # invoke live upgrade init.d script
        ${LU_INIT_D} "$1"
        [ "$?" -ne '0' ] &amp;&amp; exit 1
        exit 0
        ;;
stop)
        # do no processing if no boot environments configured
        [ -s "${LU_LUTAB_FILE}" ] || exit 0

        # error exit if live upgrade init.d script is unavailable
        [ -f "${LU_INIT_D}" -a -s "${LU_INIT_D}" -a -x "${LU_INIT_D}" ] || exit 1

        # invoke live upgrade init.d script
        ${LU_INIT_D} "$1"
        [ "$?" -ne '0' ] &amp;&amp; exit 1
        exit 0
        ;;
*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S01MOUNTFSYS ]=------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1999, 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)MOUNTFSYS  1.17    01/03/08 SMI"

if [ -z "$_INIT_PREV_LEVEL" ]; then
        set -- `/usr/bin/who -r`
        _INIT_PREV_LEVEL="$9"
fi

if [ $_INIT_PREV_LEVEL = S ]; then
        # Mount all local filesystems.

        cd /; /sbin/mountall -l
fi

# Make sure /usr subtree is present by testing for /usr/sbin

if [ ! -d /usr/sbin ]; then
        echo "WARNING: /usr subtree is missing: changing to single user mode"
        /sbin/init S
fi

#
# If there are non-global UFS filesystems with quotas, check and enable them.
#

# vlist is the non-global filesystems in vfstab requesting quotas
vlist=`/usr/bin/nawk '$1 !~ /^(#|-)/ &amp;&amp; $4 == "ufs" {
        if (match($7, "(^|,)(quota|rq)(,|$)") != 0 &amp;&amp;
            match($7, "(^|,)global(,|$)") == 0) print $1; }' /etc/vfstab`

if [ -n "$vlist" ]; then
        # mlist is the filesystems in mnttab that are ufs, mounted rw,
        # and without quotas turned on
        mlist=`/usr/sbin/mount -p | /usr/bin/nawk '$4 == "ufs" {
                if (match($7, "(^|,)ro(,|$)") == 0) print $1; }'`

        # qlist is the intersection of vlist and mlist
        qlist=`echo "$vlist&#92;n-&#92;n$mlist" | &#92;
                /usr/bin/nawk '{if ($1 == "-") { mlist = 1; }
                        else if (mlist == 0) { vlist[$1] = 1; }
                        else if (vlist[$1]) { print $1; } }'`

        #
        # Just check and enable the non-global UFS file systems with quotas
        # enabled. Note that "quotacheck -a" and "quotaon -a" will try
        # to process all UFS entries with quotas rather than excluding
        # the entries with the global option (the global entries are handled
        # later in another script if the cluster package is installed).
        #
        if [ -n "$qlist" ]; then
                echo 'Checking UFS quotas: &#92;c'
                /usr/sbin/quotacheck -p $qlist
                echo 'done.'
                /usr/sbin/quotaon $qlist
        fi
fi


---=[ /etc/rc2.d/S01tlm ]=------------------------------------------------

#!/bin/sh

###############################################################################
# Licensed Materials - Property of IBM
# 5724-T40 IBM License Metric Tool
# 5724-S94 IBM Tivoli Asset Discovery for Distributed
#
# (C) Copyright IBM Corp. 2002, 2010.  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
###############################################################################
PATH=/usr:/usr/bin:/sbin:/usr/sbin:/bin:/var/itlm/; export PATH

[ -f /var/itlm/tlmagent ] || exit 1

case "$*" in
'start')
         # tlmagent Start Command
         /var/itlm/tlmagent -g 1&gt;&amp;0 2&gt;&amp;0
         if [ $? -ne 0 ] ; then
                 exit 1
         fi
         ;;

'reload')
         # tlmagent Reload Command
         /var/itlm/tlmagent -reload
         if [ $? -ne 0 ] ; then
                 exit 1
         fi
         ;;

'stop')
         # tlmagent Stop Command
         /var/itlm/tlmagent -e

         # If tlmagent was not running exit now
         if [ $? -eq 6 ] ; then
                 exit 1
         fi

         # Wait until process(es) termination
         i="."
         while [ $i != "..........." ]
         do
                 ps -ef | egrep 'tlmagent -g$|tlmagent$' &gt;/dev/null 2&gt;&amp;1
                 if [ $? -eq 0 ] ; then
                         sleep 3
                         i=${i}"."
                 else
                         break
                 fi
         done

         # If 30 seconds have elapsed kill process(es) brutally
         if [ $i = "..........." ] ; then
                 kill -9 `ps -eo comm,pid,ppid | grep tlmagent | tr -s ' ' | cut -d ' ' -f2,3 | grep " 1$" | cut -d ' ' -f1`&gt;/dev/null 2&gt;&amp;1
         fi
         ;;

'capture')
         # tlmagent Capture Command
         /var/itlm/tlmagent -capture
         if [ $? -ne 0 ] ; then
                 exit 1
         fi
         ;;

*)
         echo "Usage: $0 { start | stop | reload | capture}"
         exit 1
         ;;

esac
exit 0


---=[ /etc/rc2.d/S05RMTMPFILES ]=-----------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997,2000 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)RMTMPFILES 1.19    00/12/07 SMI"

if [ -z "$_INIT_PREV_LEVEL" ]; then
        set -- `/usr/bin/who -r`
        _INIT_PREV_LEVEL="$9"
fi

[ $_INIT_PREV_LEVEL != S -a $_INIT_PREV_LEVEL != 1 ] &amp;&amp; exit 0

# Traditional SunOS 4.x behavior has been to not remove directories in
# the /tmp directory; only simple files were removed. This lead to an
# inconsistency when the tmpfs file system was used (which isn't persistent
# across boots. The following adopts the traditional System V behavior
# of removing everything in /tmp, unless /tmp or any of its subdirectories
# are mount points for another filesystem.

/sbin/mount | /usr/bin/egrep '^/tmp(/| )' &gt;/dev/null 2&gt;&amp;1 || {
        if [ -h /tmp ]; then
                # Just remove files under directory if symbolic link
                /usr/bin/rm -rf /tmp/*
        else
                /usr/bin/rm -rf /tmp
                /usr/bin/mkdir -m 1777 /tmp
                /usr/bin/chown root:sys /tmp
        fi
}

# Clean up /etc directory

for file in /etc/rem_name_to_major /etc/nologin; do
        [ -f $file ] &amp;&amp; /usr/bin/rm -f $file
done

# Traditional SunOS 4.x behavior has been to not alter the contents of
# /var/tmp (/usr/tmp) at boot time. This behavior is maintained as the
# current default behavior. It the traditional System V behavior of
# removing everything in /var/tmp is desired, remove the following 'exit'.

exit

# Clean up /var/tmp, unless /var/tmp or any of its subdirectories are
# mount points for another filesystem.

/sbin/mount | /usr/bin/egrep '^/var/tmp(/| )' &gt;/dev/null 2&gt;&amp;1 || {
        cd /var/tmp || exit 0

        # We carefully remove all files except the Ex* files (editor
        # temporary files), which expreserve will process later (in
        # S80PRESERVE).  Of course, it would be simpler to just run
        # expreserve before this script, but that doesn't work --
        # expreserve requires the name service, which is not available
        # until much later.

        /usr/bin/ls -a | /usr/bin/egrep -v '^(Ex.*|&#92;.|&#92;.&#92;.)$' |
            /usr/bin/xargs /usr/bin/rm -rf -- 2&gt;/dev/null
}


---=[ /etc/rc2.d/S10lu ]=-------------------------------------------------

#!/sbin/sh
#
# Copyright 1999-2003 Sun Microsystems, Inc. All Rights Reserved.
#
# ident "@(#)init.d_lu.sh 5.5     03/02/12 SMI"
#
# Perform initial system startup or final system shutdown for Live Upgrade.

LU_INIT_D="/usr/lib/lu/lu_init_d"
LU_LUTAB_FILE="/etc/lutab"
BE_CONFIG_FILE="/etc/lu/jumpstart-profile-options.xml"

case "$1" in
start)
        # do no processing if:
        # - no boot environments configured, and
        # - no boot environments operations are pending
        [ ! -s "${LU_LUTAB_FILE}" -a ! -s "${BE_CONFIG_FILE}" ] &amp;&amp; exit 0

        # error exit if live upgrade init.d script is unavailable
        [ -f "${LU_INIT_D}" -a -s "${LU_INIT_D}" -a -x "${LU_INIT_D}" ] || exit 1

        # invoke live upgrade init.d script
        ${LU_INIT_D} "$1"
        [ "$?" -ne '0' ] &amp;&amp; exit 1
        exit 0
        ;;
stop)
        # do no processing if no boot environments configured
        [ -s "${LU_LUTAB_FILE}" ] || exit 0

        # error exit if live upgrade init.d script is unavailable
        [ -f "${LU_INIT_D}" -a -s "${LU_INIT_D}" -a -x "${LU_INIT_D}" ] || exit 1

        # invoke live upgrade init.d script
        ${LU_INIT_D} "$1"
        [ "$?" -ne '0' ] &amp;&amp; exit 1
        exit 0
        ;;
*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S20sysetup ]=--------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1984-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)sysetup    1.22    01/10/29 SMI"

if [ -z "$_INIT_PREV_LEVEL" ]; then
        set -- `/usr/bin/who -r`
        _INIT_PREV_LEVEL="$9"
fi

[ $_INIT_PREV_LEVEL != S -a $_INIT_PREV_LEVEL != 1 ] &amp;&amp; exit 0

# Uncomment this line to print the complete system configuration on startup
#[ -x /usr/sbin/prtconf ] &amp;&amp; /usr/sbin/prtconf

# If there are trademark files, print them.

[ -d /etc/tm ] &amp;&amp; /usr/bin/cat /etc/tm/* 2&gt;/dev/null

#
# Savecore is enabled by default.
# See dumpadm(1M) on how to customize
# system dump configuration.
#

#
# Set default scheduling class
#
if [ -f /etc/dispadmin.conf ] &amp;&amp; [ -x /usr/sbin/dispadmin ] &#92;
     &amp;&amp; [ -x /usr/bin/priocntl ]; then
        ERROR="$0: cannot set default scheduling class to "
        DISPADMIN_D=`/usr/sbin/dispadmin -d`

        if [ $? -eq 0 ]; then
                DEFAULT_SCHEDULER=`echo $DISPADMIN_D | &#92;
                        /usr/bin/awk '{ print $1 }'`

                /usr/bin/priocntl -s -c $DEFAULT_SCHEDULER &#92;
                        -i all &gt;/dev/null 2&gt;&amp;1

                if [ $? -ne 0 ]; then
                        echo $ERROR $DEFAULT_SCHEDULER
                else
                        #
                        # Also need to move init process explicitly
                        # because it was ignored by "-i all". 
                        #
                        /usr/bin/priocntl -s -c $DEFAULT_SCHEDULER &#92;
                                -i pid 1 &gt;/dev/null 2&gt;&amp;1
                        if [ $? -ne 0 ]; then
                                echo $ERROR $DEFAULT_SCHEDULER
                        fi
                fi
        fi
fi

#
# Run rctladm to configure system resource controls based on the settings
# previously saved by rctladm.  See rctladm(1m) for instructions on how to
# modify resource control settings.
#
if [ -f /etc/rctladm.conf ] &amp;&amp; [ -x /usr/sbin/rctladm ]; then
        /usr/sbin/rctladm -u
fi

#
# Run pooladm to configure system pools.  See pooladm(1m) for more information.
#
if [ -f /etc/pooladm.conf ] &amp;&amp; [ -x /usr/sbin/pooladm ]; then
        /usr/sbin/pooladm -c
fi


---=[ /etc/rc2.d/S21perf ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&amp;T.
# All rights reserved.
#
# THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&amp;T
# The copyright notice above does not evidence any
# actual or intended publication of such source code.
#
# Copyright (c) 1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)perf.sh    1.7     97/12/08 SMI"

# Uncomment the following lines to enable system activity data gathering.
# You will also need to uncomment the sa entries in the system crontab
# /var/spool/cron/crontabs/sys.  Refer to the sar(1) and sadc(1m) man pages
# for more information.

# if [ -z "$_INIT_RUN_LEVEL" ]; then
#       set -- `/usr/bin/who -r`
#       _INIT_RUN_LEVEL="$7"
#       _INIT_RUN_NPREV="$8"
#       _INIT_PREV_LEVEL="$9"
# fi
# 
# if [ $_INIT_RUN_LEVEL -ge 2 -a $_INIT_RUN_LEVEL -le 4 -a &#92;
#     $_INIT_RUN_NPREV -eq 0 -a &#92;( $_INIT_PREV_LEVEL = 1 -o &#92;
#     $_INIT_PREV_LEVEL = S &#92;) ]; then
# 
        /usr/bin/su sys -c "/usr/lib/sa/sadc /var/adm/sa/sa`date +%d`"
# fi


---=[ /etc/rc2.d/S30sysid.net ]=------------------------------------------

#! /bin/sh
#
#ident  "@(#)sysid.net.sh       1.10    96/06/14 SMI"
#
# Copyright (c) 1991 by Sun Microsystems, Inc.
#
# /etc/init.d/sysid.net
#
# Script to invoke sysidnet, which completes configuration of basic
# network parameters.
#

config_interfaces() {
                
        #
        # Configure all network interfaces
        #
        /sbin/ifconfig -a plumb &gt; /dev/null 2&gt;&amp;1

        #
        # Get the complete list of network devices
        # so that we can revarp them individually
        # since the -ad option seems to stop after
        # the first failure (unconnected net device)
        # that it encounters
        #
        for i in `ifconfig -a |grep "^[a-z0-9]*:"`
        do
                echo $i |grep "^[a-z0-9]*:" &gt;/dev/null 2&gt;&amp;1
                if [ $? -eq 1 ]; then
                        continue
                fi
                # Remove colon after interface name and any 
                # logical interface portion that follows it.
                m=`echo ${i} | sed 's/:[0-9]*:*//'`
                net_device_list="${m}&#92;n${net_device_list}"
        done

        #
        # net_device_list contains a new line delimited list
        # of network devices. The new line is used for the (unique) sort.
        # do an auto-revarp on each of unique interface with the 
        # exception of the loopback device
        #

        net_device_list=`echo $net_device_list | sort -u`

        echo `gettext "Configuring network interface addresses:"`"&#92;&#92;c"
        set -- $net_device_list
        for i 
        do
                #
                # skip the auto-revarp for the loopback device
                #
                if [ "$i" = "lo0" ]; then
                        continue
                fi
                echo " ${i}&#92;c"
                /sbin/ifconfig $i auto-revarp netmask + broadcast + &#92;
                                                -trailers &gt;/dev/null 2&gt;&amp;1
                ipaddr=`/sbin/ifconfig $i |grep inet |awk '{print $2;}'`
                if [ "X$ipaddr" != "X0.0.0.0" ] ; then
                        # The interface configured itself correctly
                        /sbin/ifconfig $i up
                fi
        done
        echo `gettext "."`
        /sbin/hostconfig -p bootparams &gt; /dev/null 2&gt;&amp;1
}       

if [ -f /etc/.UNCONFIGURED -a -x /usr/sbin/sysidnet ] ; then
        /usr/sbin/sysidnet -l
        if [ -x /usr/sbin/sysidconfig ] ; then
                /usr/sbin/sysidconfig
        fi

        if [ "X$_INIT_NET_STRATEGY" != "Xdhcp" ] ; then
                config_interfaces
        fi

        /usr/sbin/sysidnet
        if [ -x /usr/sbin/sysidkrb5 ]
        then
                /usr/sbin/sysidkrb5
        fi
fi


---=[ /etc/rc2.d/S40llc2 ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1998-1999 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)llc2       1.9     99/04/30 SMI"

case $1 in
'start')
        if [ -x /etc/llc2/llc2_start ]; then
                /etc/llc2/llc2_start
        fi
        ;;
'stop')
        if [ -x /etc/llc2/llc2_start ]; then
                /usr/lib/llc2/llc2_config -U
        fi
        ;;
*)
        echo "Usage: $0  { start | stop }"
        exit 1
esac
exit 0


---=[ /etc/rc2.d/S42ncakmod ]=--------------------------------------------

#!/sbin/sh
#
# Copyright 1999-2002 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)ncakmod    1.5     02/01/28 SMI"

# Default config values used by script
nca=drv/nca
ncakmodconf=/etc/nca/ncakmod.conf
ncaifconf=/etc/nca/nca.if
tempdir=/tmp
default_miss_door=/var/run/nca_httpd_1.door

# Function used to parse the interface names from /etc/hostname.* entries
readifconf()
{
        while read i; do
                case "$i" in
                '#'* | '')      # Ignore comments, empty lines
                                continue ;;
                '*')            configinterfaces="`echo /etc/hostname.*[0-9] &#92;
                                   2&gt;/dev/null`"
                                checkforvirt=false
                                break ;;
                esac
                configinterfaces="$configinterfaces $i"
        done
}

case "$1" in
'start')

        if [ ! -f $ncakmodconf ]; then
                # If configuration file is missing, just exit
                exit 0
        fi

        . $ncakmodconf

        # Default is "disabled" so we want to exit
        [ "x$status" != "xenabled" ] &amp;&amp; exit 0

        if [ -f "$ncaifconf" ]; then
                readifconf &lt; $ncaifconf
                configinterfaces="`echo $configinterfaces | &#92;
                        /bin/sed 's/.etc.hostname.//g'`"
                for i in $configinterfaces; do
                        findinterface="`echo $i | /bin/grep '[0-9][0-9]*'`"
                        if [ $? -ne 0 ]; then
                                # Need to expand interface (ie. iprb)
                                interface="`echo /etc/hostname.$i*[0-9] &#92;
                                        2&gt;/dev/null | /bin/sed &#92;
                                        's/.etc.hostname.//g'`"
                                interfaces="$interfaces $interface"
                        else
                                interfaces="$interfaces $i"
                        fi
                done

                # If we don't have any interfaces configured, exit
                [ -z "$interfaces" ] &amp;&amp; exit 0
                
                # Prevent multiple instances of ncaconfd
                if /bin/pgrep ncaconfd &gt; /dev/null 2&gt;&amp;1; then
                        echo "$0: ncaconfd is already running"
                        exit 1
                fi

                /usr/sbin/modload -p $nca

                # Insert NCA into the stream of all the interfaces configured.
                interfaces="`echo $interfaces | /bin/tr ' ' '&#92;012' | &#92;
                    /bin/grep -v :`"
                if [ "x$nca_active" != xenabled ]; then
                        /usr/lib/inet/ncaconfd -l $interfaces
                else
                        /usr/lib/inet/ncaconfd -al $interfaces
                fi

                if [ "$httpd_door_path" != "$default_miss_door" ]; then
                        # Set the default HTTPD door in NCA via ndd
                        /usr/sbin/ndd -set /dev/nca httpd_door_path &#92;
                            $httpd_door_path
                fi
        fi
        ;;

'stop')
        # Need to reboot the system to stop
        echo "System reset is required to stop NCA functionality"
        ;;

*)

        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S47pppd ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 2000-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)pppd       1.3     01/10/29 SMI"

PATH=/sbin:/usr/bin:/usr/sbin; export PATH
PPPDIR=/etc/ppp; export PPPDIR

case "$1" in
'start')
        if [ ! -x /usr/bin/pppd -o ! -c /dev/sppp ]; then
                echo "$0: Solaris PPP has not been correctly installed on"
                echo "$0: this system.  Required files are missing."
                exit 1
        fi
        if [ -f $PPPDIR/ifconfig ]; then
                . $PPPDIR/ifconfig
        fi
        if [ -f $PPPDIR/demand ]; then
                . $PPPDIR/demand
        fi
        if [ -f $PPPDIR/pppoe.if ] &amp;&amp; [ -x /usr/sbin/sppptun ]; then
                sed -e 's/^#.*//;s/&#92;([^&#92;&#92;]&#92;)#.*/&#92;1/;s/[  ]*$//;s/^[     ]*//' &#92;
                    $PPPDIR/pppoe.if | &#92;
                while read intf; do
                        if [ "$intf" ]; then
                                /usr/sbin/sppptun plumb pppoe $intf
                                /usr/sbin/sppptun plumb pppoed $intf
                        fi
                done
        fi
        if [ -f $PPPDIR/pppoe ] &amp;&amp; [ -x /usr/lib/inet/pppoed ]; then
                /usr/lib/inet/pppoed &gt;/dev/null
        fi
        ;;

'stop')
        /usr/bin/pkill -x pppd
        sleep 1
        /usr/bin/pkill -x pppoed

        # Use ifconfig to make the interfaces down just in case
        if [ -f $PPPDIR/ifconfig ]; then
                nawk '/ifconfig[        ]*sppp/ { &#92;
                        system("ifconfig " $2 " down"); &#92;
                        system("ifconfig " $2 " unplumb"); &#92;
                        next; &#92;
                } &#92;
                /ifconfig/ { &#92;
                        $3 = "removeif"; &#92;
                        NF = 4; &#92;
                        system($0); &#92;
                }' &lt; $PPPDIR/ifconfig
        fi

        if [ -f $PPPDIR/pppoe.if ] &amp;&amp; [ -x /usr/sbin/sppptun ]; then
                sed -e 's/^#.*//;s/&#92;([^&#92;&#92;]&#92;)#.*/&#92;1/;s/[  ]*$//;s/^[     ]*//' &#92;
                    $PPPDIR/pppoe.if | &#92;
                while read intf; do
                        if [ "$intf" ]; then
                                /usr/sbin/sppptun unplumb ${intf}:pppoe
                                /usr/sbin/sppptun unplumb ${intf}:pppoed
                        fi
                done
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S69inet ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright 1995-2003 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# ident "@(#)inetinit   1.54    03/01/29 SMI"

#
# This is the second phase of TCP/IP configuration.  The first part,
# run in the "/etc/rcS.d/S30rootusr.sh" script, does all configuration
# necessary to mount the "/usr" filesystem via NFS.  This includes configuring
# the interfaces and setting the machine's hostname.  The second part,
# run in this script, does all configuration that can be done before
# NIS or NIS+ is started.  This includes configuring IP routing,
# setting the NIS domainname and setting any tunable parameters.  The
# third part, run in a subsequent startup script, does all
# configuration that may be dependent on NIS/NIS+ maps.  This includes
# a final re-configuration of the interfaces and starting all internet
# services.
#

case "$1" in
'start')
        ;; # Fall through -- rest of script is the initialization code

'stop')
        #
        # If we were routing dynamically, we will note this with
        # the .dynamic_routing file, so that we can leave the routes
        # in place without thinking they're static route entries
        # when we come back into states 2 or 3.
        #
        if /usr/bin/pgrep -x -u 0 'in.routed|in.rdisc' &gt;/dev/null 2&gt;&amp;1; then
                /usr/bin/pkill -x -u 0 'in.routed|in.rdisc'
                &gt; /etc/.dynamic_routing
        fi
        exit 0
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac

#
# Now that /usr is mounted, see if in.mpathd needs to be started by firing it
# up in "adopt" mode; if there are no interfaces it needs to manage, it will
# automatically exit.  Note that it may already be running if we're not
# executing as part of system boot.
#
/usr/bin/pgrep -x -u 0 in.mpathd &gt;/dev/null 2&gt;&amp;1 || /usr/lib/inet/in.mpathd -a

#
# Initialize IPsec only if ipsecinit.conf exists.  Otherwise, save the
# kernel memory that'll be consumed if IPsec is loaded.  See below for more
# IPsec-related commands.
#
if [ -f /etc/inet/ipsecinit.conf ] ; then
        /usr/sbin/ipsecconf -qa /etc/inet/ipsecinit.conf
fi

#
# Set the RFC 1948 entropy, regardless of if I'm using it or not.  If present,
# use the encrypted root password as a source of entropy.  Otherwise,
# just use the pre-set (and hopefully difficult to guess) entropy that
# tcp used when it loaded.
#
encr=`/usr/bin/awk -F: '/^root:/ {print $2}' /etc/shadow`
[ -z "$encr" ] || /usr/sbin/ndd -set /dev/tcp tcp_1948_phrase $encr
unset encr

#
# Get values for TCP_STRONG_ISS, ACCEPT6TO4RELAY and RELAY6TO4ADDR.
#
[ -f /etc/default/inetinit ] &amp;&amp; . /etc/default/inetinit

#
# Set TCP ISS generation.  By default the ISS generation is
# time + random()-delta.  This might not be strong enough for some users.
# See /etc/default/inetinit for settings and further info on TCP_STRONG_ISS.
# If not set, use TCP's internal default setting.
#
if [ $TCP_STRONG_ISS ]; then
        /usr/sbin/ndd -set /dev/tcp tcp_strong_iss $TCP_STRONG_ISS
fi

#
# Configure default IPv4 routers using the local "/etc/defaultrouter"
# configuration file.  The file can contain the hostnames or IP
# addresses of one or more default routers.  If hostnames are used,
# each hostname must also be listed in the local "/etc/hosts" file
# because NIS and NIS+ are not running at the time that this script is
# run.  Each router name or address is listed on a single line by
# itself in the file.  Anything else on that line after the router's
# name or address is ignored.  Lines that begin with "#" are
# considered comments and ignored.
#
# The default routes listed in the "/etc/defaultrouter" file will
# replace those added by the kernel during diskless booting.  An
# empty "/etc/defaultrouter" file will cause the default route
# added by the kernel to be deleted.
#
# Note that the default router file is ignored if we received routes
# from a DHCP server.  Our policy is to always trust DHCP over local
# administration.
#
if [ "$_INIT_NET_STRATEGY" = "dhcp" ] &amp;&amp; [ -n "`/sbin/dhcpinfo Router`" ]; then
        defrouters=`/sbin/dhcpinfo Router`
elif [ -f /etc/defaultrouter ]; then
        defrouters=`/usr/bin/grep -v &#92;^&#92;# /etc/defaultrouter | &#92;
            /usr/bin/awk '{print $1}'`
        if [ -n "$defrouters" ]; then
                #
                # We want the default router(s) listed in /etc/defaultrouter
                # to replace the one added from the BOOTPARAMS WHOAMI response
                # but we must avoid flushing the last route between the running
                # system and its /usr file system.
                #

                # First, remember the original route.
                shift $#
                set -- `/usr/bin/netstat -rn -f inet | /usr/bin/grep '^default'`
                route_IP="$2"

                #
                # Next, add those from /etc/defaultrouter.  While doing this,
                # if one of the routes we add is for the route previously
                # added as a result of the BOOTPARAMS response, we will see
                # a message of the form:
                #       "add net default: gateway a.b.c.d: entry exists"
                #
                do_delete=yes
                for router in $defrouters; do
                        set -- `/usr/sbin/route -n add default -gateway $router`
                        [ $? -eq 0 -a "x$5" = "x$route_IP:" ] &amp;&amp; do_delete=no
                done

                #
                # Finally, delete the original default route unless it was
                # also listed in the defaultrouter file.
                #
                if [ -n "$route_IP" -a $do_delete = yes ]; then
                        /usr/sbin/route -n delete default -gateway $route_IP &#92;
                            &gt;/dev/null
                fi
        else
                /usr/sbin/route -fn &gt; /dev/null
        fi
else
        defrouters=
fi

#
# Set LDAP/NIS+/NIS domainname if locally configured.
#
if [ -f /etc/defaultdomain ]; then
        mydomain=`cat /etc/defaultdomain`
        /usr/bin/domainname $mydomain
        name_service=""
        [ -f /var/ldap/ldap_client_file ] &amp;&amp; name_service="LDAP "
        [ -f /var/nis/NIS_COLD_START ] &amp;&amp; name_service="${name_service}NIS+ "
        [ -d /var/yp/binding/$mydomain ] &amp;&amp; name_service="${name_service}NIS "
        [ -n "$name_service" ] &amp;&amp; echo "${name_service}domain name is $mydomain"
fi

#
# Run in.routed/router discovery if we don't already have a default
# route installed or if we had been running them in a previous
# multiuser state.
#
if [ ! -f /etc/.dynamic_routing ] &amp;&amp; [ -z "$defrouters" ]; then
        #
        # No default routes were setup by "route" command above - check the
        # kernel routing table for any other default routes.
        #
        /usr/bin/netstat -rn -f inet | &#92;
            /usr/bin/grep default &gt;/dev/null 2&gt;&amp;1 &amp;&amp; defrouters=yes
fi
[ -f /etc/.dynamic_routing ] &amp;&amp; /usr/bin/rm -f /etc/.dynamic_routing

if [ -z "$defrouters" ]; then
        #
        # Determine how many active interfaces there are and how many pt-pt
        # interfaces. Act as an IPv4 router if there are more than 2 interfaces
        # (including the loopback interface) or one or more point-point
        # interface. Also act as an IPv4 router if /etc/gateways exists.
        #
        # Do NOT act as an IPv4 router if /etc/notrouter exists.
        # Do NOT act as an IPv4 router if DHCP was used to configure
        # interface(s)
        #
        inetifaddrs="`/usr/sbin/ifconfig -a4u | /usr/bin/grep inet`"
        numifs=`echo "$inetifaddrs" | /usr/bin/wc -l`
        numptptifs=`echo "$inetifaddrs" | /usr/bin/egrep -c -e '--&gt;'`

        if [ "$_INIT_NET_STRATEGY" = "dhcp" ]; then
                numdhcp=`/usr/sbin/ifconfig -a4 | /usr/bin/grep -c DHCP`
        else
                numdhcp=0
        fi

        if [ ! -f /etc/notrouter -a $numdhcp -eq 0 -a &#92;
            &#92;( $numifs -gt 2 -o $numptptifs -gt 0 -o -f /etc/gateways &#92;) ]; then
                #
                # Machine is an IPv4 router: turn on ip_forwarding.
                #
                echo 'Machine is an IPv4 router.'
                /usr/sbin/ndd -set /dev/ip ip_forwarding 1
        else
                #
                # Machine is an IPv4 host: turn off ip_forwarding.
                #
                /usr/sbin/ndd -set /dev/ip ip_forwarding 0
        fi
        #
        # For a router, in.routed advertises any local routes through RIP,
        # listens for other routes, and announces via router discovery.
        # For a host, in.routed listens to router discovery and RIP.
        #
        [ ! -x /usr/sbin/in.routed ] || /usr/sbin/in.routed
else
        /usr/sbin/ndd -set /dev/ip ip_forwarding 0
fi

#
# Run IPv6 if more than lo0 plumbed for IPv6.
#
/usr/sbin/ifconfig -a6u &gt;/tmp/ifconfig.$$
numv6ifs=`/usr/bin/grep -c inet6 /tmp/ifconfig.$$`
if  [ $numv6ifs -gt 1 ]; then
        #
        # Run IPv6 routing only if /etc/inet/ndpd.conf exists, otherwise just
        # run the host portion.
        #
        if [ -f /etc/inet/ndpd.conf ]; then
                #
                # Machine is an IPv6 router: turn on ip6_forwarding,
                # ip6_send_redirects and ip6_ignore_redirect, run in.ripngd, and
                # advertise ourselves as a router using neighbor discovery.
                #
                echo "Machine is an IPv6 router."
                /usr/sbin/ndd -set /dev/ip ip6_forwarding 1
                /usr/sbin/ndd -set /dev/ip ip6_send_redirects 1
                /usr/sbin/ndd -set /dev/ip ip6_ignore_redirect 1
                if [ -f /usr/lib/inet/in.ndpd ]; then
                        /usr/lib/inet/in.ndpd
                fi
                if [ -f /usr/lib/inet/in.ripngd ]; then
                        /usr/lib/inet/in.ripngd -s
                fi
        else
                # Machine is an IPv6 host - just run neighbor discovery.
                /usr/sbin/ndd -set /dev/ip ip6_forwarding 0
                /usr/sbin/ndd -set /dev/ip ip6_send_redirects 0
                /usr/sbin/ndd -set /dev/ip ip6_ignore_redirect 0
                if [ -f /usr/lib/inet/in.ndpd ] ; then
                        echo "Starting IPv6 neighbor discovery."
                        /usr/lib/inet/in.ndpd
                fi
        fi
        #
        # Add a static route for multicast packets out of a link-local
        # interface, although would like to specify multicast interface using
        # an interface name!
        #
        set -- `/usr/bin/awk '
                /inet6 fe80:/ {
                        print substr($2, 1, index($2, "/") - 1)
                }' /tmp/ifconfig.$$`

        if [ -n "$1" ]; then
                echo "Setting default IPv6 interface for multicast:" &#92;
                    "add net ff00::/8: gateway $1"
                /usr/sbin/route -n add -interface -inet6 "ff00::/8" "$1" &#92;
                    &gt;/dev/null
        fi
else
        /usr/sbin/ndd -set /dev/ip ip6_forwarding 0
        /usr/sbin/ndd -set /dev/ip ip6_send_redirects 0
        /usr/sbin/ndd -set /dev/ip ip6_ignore_redirect 0
fi
/usr/bin/rm -f /tmp/ifconfig.$$

#
# In spite of global policy, there may be a need for IPsec because of
# per-socket policy or tunnelled policy.  With that in mind, check for manual
# keys in /etc/inet/secret/ipseckeys, or check for IKE configuration in
# /etc/inet/ike/config.  Either of these will also load and initialize IPsec,
# thereby consuming kernel memory.
#

if [ -f /etc/inet/secret/ipseckeys ] ; then
        /usr/sbin/ipseckey -f /etc/inet/secret/ipseckeys
fi

if [ -f /etc/inet/ike/config ] ; then
        /usr/lib/inet/in.iked
fi

#
# Configure tunnels which was deferred by /etc/rcS.d/S30network.sh since
# it depends on the tunnel endpoints being reachable i.e. routing must be
# running.
#
# WARNING: you may wish to turn OFF forwarding if you haven't already, because
# of various possible security vulnerabilities when configuring tunnels for
# Virtual Private Network (VPN) construction.
#
# Also, if names are used in the /etc/hostname.ip.tun* file, those names
# have to be in either DNS (and DNS is used) or in /etc/hosts, because this
# file is executed before NIS or NIS+ is started.
#

#
# IPv4 tunnels
# The second component of the name must be either "ip" or "ip6".
#
interface_names="`/usr/bin/ls /etc/hostname.ip*.*[0-9] 2&gt;/dev/null | &#92;
    /usr/bin/grep '/etc/hostname&#92;.ip6&#92;{0,1&#92;}&#92;.'`"
if [ -n "$interface_names" ]; then
        (
                echo "configuring IPv4 tunnels:&#92;c"
                # Extract the part after the first '.'
                set -- `for intr in $interface_names; do &#92;
                    /usr/bin/expr //$intr : '[^.]*&#92;.&#92;(.*&#92;)$'; done`
                while [ $# -ge 1 ]; do
                        # Skip empty files
                        if [ ! -s /etc/hostname&#92;.$1 ]; then
                                shift
                                continue
                        fi
                        /usr/sbin/ifconfig $1 plumb
                        while read ifcmds; do
                                if [ -n "$ifcmds" ]; then
                                        /usr/sbin/ifconfig $1 inet $ifcmds
                                fi
                        done &lt;/etc/hostname&#92;.$1 &gt;/dev/null
                        echo " $1&#92;c"
                        shift
                done
                echo "."
        )
fi

#
# IPv6 Tunnels
# The second component of the name must be either "ip" or "ip6".
#
interface_names="`/usr/bin/ls /etc/hostname6.ip*.*[0-9] 2&gt;/dev/null | &#92;
    /usr/bin/grep '/etc/hostname6&#92;.ip6&#92;{0,1&#92;}&#92;.'`"
if [ -n "$interface_names" ]; then
        (
                echo "configuring IPv6 tunnels:&#92;c"
                # Extract the part after the first '.'
                set -- `for intr in $interface_names; do &#92;
                    /usr/bin/expr //$intr : '[^.]*&#92;.&#92;(.*&#92;)$'; done`
                while [ $# -ge 1 ]; do
                        # Skip empty files
                        if [ ! -s /etc/hostname6&#92;.$1 ]; then
                                shift
                                continue
                        fi
                        /usr/sbin/ifconfig $1 inet6 plumb
                        while read ifcmds; do
                                if [ -n "$ifcmds" ]; then
                                        /usr/sbin/ifconfig $1 inet6 $ifcmds
                                fi
                        done &lt;/etc/hostname6&#92;.$1 &gt; /dev/null
                        echo " $1&#92;c"
                        shift
                done
                echo "."
        )
fi

#
# Set 6to4 Relay Router communication support policy and, if applicable,
# the destination Relay Router IPv4 address.  See /etc/default/inetinit for
# setting and further info on ACCEPT6TO4RELAY and RELAY6TO4ADDR.
# If ACCEPT6TO4RELAY=NO, the default value in the kernel will
# be used.
#
ACCEPT6TO4RELAY=`echo "$ACCEPT6TO4RELAY" | /usr/bin/tr '[A-Z]' '[a-z]'`
if [ "$ACCEPT6TO4RELAY" = yes ]; then
        if [ "$RELAY6TO4ADDR" ]; then
                /usr/sbin/6to4relay -e -a $RELAY6TO4ADDR
        else
                /usr/sbin/6to4relay -e
        fi
fi


---=[ /etc/rc2.d/S70sckm ]=-----------------------------------------------

#! /sbin/sh
#
#pragma ident   "@(#)sckm.sh    1.1     00/10/18 SMI"
#
# Copyright (c) 2000 by Sun Microsystems, Inc.
# All rights reserved.
#
# Startup script for Sun Fire 15000 Key Management Daemon
#

case "$1" in
'start')
        platform=${_INIT_UTS_PLATFORM:-`/sbin/uname -i`}
        starcat="SUNW,Sun-Fire-15000" 
        if [ ${platform} = "${starcat}" ]; then
                if [ -x /usr/platform/${platform}/lib/sckmd ]; then 
                        /usr/platform/${platform}/lib/sckmd
                fi
        fi
        ;;

'stop')
        /usr/bin/pkill -9 -x -u 0 sckmd
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S70uucp ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)uucp       1.9     97/12/08 SMI"

if [ -z "$_INIT_PREV_LEVEL" ]; then
        set -- `/usr/bin/who -r`
        _INIT_PREV_LEVEL="$9"
fi

if [ $_INIT_PREV_LEVEL = S -o $_INIT_PREV_LEVEL = 1 ]; then
        /usr/bin/rm -rf /usr/spool/locks/* &gt;/dev/null 2&gt;&amp;1 &amp;
fi


---=[ /etc/rc2.d/S71ldap.client ]=----------------------------------------

#!/sbin/sh
#
# Copyright (c) 1999,2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)ldap.client        1.3     01/10/29 SMI"

case "$1" in
start)
        [ -f /var/ldap/ldap_client_file ] &amp;&amp; &#92;
            [ -f /usr/lib/ldap/ldap_cachemgr ] || exit 0
        /usr/lib/ldap/ldap_cachemgr
        ;;

stop)
        [ -f /usr/lib/ldap/ldap_cachemgr ] &amp;&amp; /usr/lib/ldap/ldap_cachemgr -K
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S71rpc ]=------------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997-1999, 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)rpc        1.48    01/11/06 SMI"

[ ! -d /usr/bin ] &amp;&amp; exit

case "$1" in
'start'|'rpcstart')
        if [ "$1" = start ]; then
                if [ -z "$_INIT_PREV_LEVEL" ]; then
                        set -- `/usr/bin/who -r`
                        _INIT_PREV_LEVEL="$9"
                fi

                if [ $_INIT_PREV_LEVEL != S -a $_INIT_PREV_LEVEL != 1 &#92;
                    -a $_INIT_PREV_LEVEL != '?' ]; then
                        exit 0
                fi

                [ -x /usr/sbin/rpcbind ] || exit 0
        fi

        echo "starting rpc services:&#92;c"
        /usr/bin/mkdir -p -m 1777 /var/run/rpc_door
        /usr/sbin/rpcbind &gt;/dev/msglog 2&gt;&amp;1
        echo " rpcbind&#92;c"
        
        # Configure NIS or NIS+

        if [ -f /etc/.UNCONFIGURED ] &amp;&amp; [ -x /usr/sbin/sysidns ]; then
                /usr/sbin/sysidns &gt;/dev/msglog 2&gt;&amp;1
        fi

        # Start the key service but only if the domain has been set

        if [ -n "`/usr/bin/domainname 2&gt;/dev/null`" ] &amp;&amp;
                [ -x /usr/sbin/keyserv ]; then
                        /usr/sbin/keyserv &gt;/dev/msglog 2&gt;&amp;1
                        echo " keyserv&#92;c"
        fi

        # Start NIS+. Note this needs to be done after keyserv
        # has started because NIS+ uses the keyserver for authentication.

        if [ -d /var/nis -a -x /usr/sbin/rpc.nisd ]; then
                if [ -f /var/nis/NIS_COLD_START ]; then
                        if [ -x /usr/sbin/nis_cachemgr ]; then
                                /usr/sbin/nis_cachemgr
                                echo " nis_cachemgr&#92;c"
                        fi
                fi

                # We always start the NIS+ Password Update Daemon.  If it
                # finds the NIS+ server is not a Master it will just exit.
                # It also determines if the server is running in NIS (YP)
                # compat mode and automatically registers a yppasswdd so NIS
                # (YP) clients can change their passwords.

                [ -z "$_INIT_UTS_NODENAME" ] &amp;&amp; &#92;
                    _INIT_UTS_NODENAME=`/usr/bin/uname -n`
                
                hostname=`echo "$_INIT_UTS_NODENAME" | /usr/bin/cut -d. -f1 | &#92;
                    /usr/bin/tr '[A-Z]' '[a-z]'`

                if [ -d /var/nis/data -o -d /var/nis/$hostname ]; then
                        /usr/sbin/rpc.nisd
                        echo " rpc.nisd &#92;c"
                        /usr/sbin/rpc.nispasswdd
                fi
        fi

        # Start NIS (YP) services.  The ypstart script handles both client
        # and server startup, whichever is appropriate.

        if [ -x /usr/lib/netsvc/yp/ypstart ]; then
                /usr/lib/netsvc/yp/ypstart rpcstart
        fi

        echo " done."
        ;;

'stop')
        # Bring all of the RPC service daemons to a halt.  Note that the 
        # daemons are stopped in a particular order.  Further note that rpcbind
        # is special in that it needs to be killed with -9 to prevent it from
        # saving its state and sending a message to syslog.

        for daemon in rpc.nisd nis_cachemgr keyserv rpc.nispasswdd; do
                /usr/bin/pkill -x -u 0 $daemon
        done

        if [ -x /usr/lib/netsvc/yp/ypstop ]; then
                /usr/lib/netsvc/yp/ypstop
        fi

        /usr/bin/pkill -9 -x -u 0 rpcbind
        /usr/bin/rm -rf /var/run/rpc_door
        ;;

*)
        echo "Usage: $0 { rpcstart | start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S71sysid.sys ]=------------------------------------------

#! /bin/sh
#
#ident  "@(#)sysid.sys.sh       1.12    97/03/07 SMI"
#
# Copyright (c) 1991 by Sun Microsystems, Inc.
#
# /etc/init.d/sysid.sys
#
# Script to invoke sysidsys, sysidroot and sysidpm, which complete
# configuration of various system attributes.
#

need_net_reboot()
{
        Response=""
        if [ -f /.cache ] ; then
                Response=" -- net "
        fi
        mount -p | grep ' / ' | (read f1 junk ; echo $f1) | &#92;
                grep ':/' &gt;/dev/null 2&gt;&amp;1
        if [ "$?" = "0" ] ; then
                Response=" -- net "
        fi
        echo $Response
}

NeedReboot="no"
if [ -f /etc/.UNCONFIGURED ]
then
        cp /etc/default/init /tmp/init.orig
        if [ -x /usr/sbin/sysidsys ]
        then
                /usr/sbin/sysidsys
        fi
        if [ -x /usr/sbin/sysidroot ]
        then
                /usr/sbin/sysidroot
        fi
        if [ -x /usr/sbin/sysidpm ]
        then
                /usr/sbin/sysidpm
        fi

        if diff /tmp/init.orig /etc/default/init &gt; /dev/null 2&gt;&amp;1
        then
                NeedReboot="no"
        else
                NeedReboot="yes"
        fi
        rm -f /tmp/init.orig

elif [ -f /etc/.PM_RECONFIGURE ]
then
        if [ -x /usr/sbin/sysidpm ]
        then
                /usr/sbin/sysidpm
        fi
fi

#
# The SUNWsibi package is only installed in the Solaris mini root.
# This lets us determine if we are booted from a CD-ROM or netimage.
# We do NOT want to reboot we are running in the mini root. (CD/netimage)
#
# A pkginfo exit status of zero indicates we are running in the mini root.
#
pkginfo -q SUNWsibi
status=$?

if [ "$status" = "1" -a "$NeedReboot" = "yes" ]
then
        echo "&#92;nrebooting system due to change(s) in /etc/default/init &#92;n"
        Net=`need_net_reboot`
        /usr/sbin/reboot -l $Net
fi


---=[ /etc/rc2.d/S72autoinstall ]=----------------------------------------

#! /bin/sh
#
#       @(#)autoinstall.sh 1.6 96/01/31 SMI
#
# Copyright (c) 1992-1995 Sun Microsystems, Inc.  All Rights Reserved. Sun
# considers its source code as an unpublished, proprietary trade secret, and
# it is available only under strict license provisions.  This copyright
# notice is placed here only to protect Sun in the event the source is
# deemed a published work.  Dissassembly, decompilation, or other means of
# reducing the object code to human readable form is prohibited by the
# license agreement under which this code is provided to the user or company
# in possession of this copy.
#
# RESTRICTED RIGHTS LEGEND: Use, duplication, or disclosure by the Government
# is subject to restrictions as set forth in subparagraph (c)(1)(ii) of the
# Rights in Technical Data and Computer Software clause at DFARS 52.227-7013
# and in similar clauses in the FAR and NASA FAR Supplement.
#

# Script executed during stub JumpStart or /AUTOINSTALL JumpStart.
# The purpose is to reboot the system with the appropriate "FD=*"
# boot string, which is recognized by /sbin/rcS to mean "JumpStart".
# In either case, custom profiles are selected first, and if none
# are available, then the default profiles in are used.
# 
#

AUTO_NAME="/AUTOINSTALL"
PATH=/usr/sbin/install.d:${PATH}

cleanup()
{
        exit 1
}

if [ -f ${AUTO_NAME} ]; then
        rm -f ${AUTO_NAME}
        # check for the existence of install media
        . stubboot
        if [ ! "${BOOT_STRING}" ]; then
                echo "No network boot server."
                # just reboot the existing OS
        else
                reboot "${BOOT_STRING}"
        fi
fi


---=[ /etc/rc2.d/S72directory ]=------------------------------------------

#!/sbin/sh
#
# Copyright (c) 2001,2002 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)directory  1.3 - 02/01/15"
VAR=/var/ds5
DIR=""

# Test if we are in a cluster and silently exit if so
/usr/sbin/clinfo &gt; /dev/null 2&gt;&amp;1
[ $? -eq 0 ] &amp;&amp; exit 0

for di in $VAR/slapd-*
do
        [ -d "$di" ]  &amp;&amp; DIR="$DIR $di"
done

case "$1" in
start)
        [ ! -z "$DIR" ] || exit 0
        /usr/sbin/directoryserver start
        if [ $? -ne 0 ]; then
          echo "$0: unable to start the directory server" 
          exit 1
        fi
        /usr/sbin/directoryserver start-admin
        if [ $? -ne 0 ]; then
          echo "$0: unable to start the admin server" 
          exit 1
        fi
        ;;

stop)
        [ ! -z "$DIR" ] || exit 0
        /usr/sbin/directoryserver stop-admin
        if [ $? -ne 0 ]; then
          echo "$0: unable to stop the admin server" 
          exit 1
        fi
        /usr/sbin/directoryserver stop
        if [ $? -ne 0 ]; then
          echo "$0: unable to stop the directory server" 
          exit 1
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S72inetsvc ]=--------------------------------------------

#!/sbin/sh
#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)inetsvc    1.31    04/03/16 SMI"

#
# This is third phase of TCP/IP startup/configuration.  This script
# runs after the NIS/NIS+ startup script.  We run things here that may
# depend on NIS/NIS+ maps.
#

case "$1" in
'start')
        ;; # Fall through -- rest of script is the initialization code

'stop')
        /usr/bin/pkill -x -u 0 'in.named|inetd'
        exit 0
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac

# If boot variables are not set, set variables we use
[ -z "$_INIT_UTS_NODENAME" ] &amp;&amp; _INIT_UTS_NODENAME=`/usr/bin/uname -n`

if [ -z "$_INIT_PREV_LEVEL" ]; then
        set -- `/usr/bin/who -r`
        _INIT_PREV_LEVEL="$9"
fi

#
# wait_nis
# Wait up to 5 seconds for ypbind to obtain a binding.
#
wait_nis ()
{
        for i in 1 2 3 4 5; do
                server=`/usr/bin/ypwhich 2&gt;/dev/null`
                [ $? -eq 0 -a -n "$server" ] &amp;&amp; return 0 || sleep 1
        done
        return 1
}

#
# We now need to reset the netmask and broadcast address for our network
# interfaces.  Since this may result in a name service lookup, we want to
# now wait for NIS to come up if we previously started it.
#
domain=`/usr/bin/domainname 2&gt;/dev/null`

[ -z "$domain" ] || [ ! -d /var/yp/binding/$domain ] || wait_nis || &#92;
    echo "WARNING: Timed out waiting for NIS to come up" &gt;&amp; 2

#
# Re-set the netmask and broadcast addr for all IP interfaces.  This ifconfig
# is run here, after waiting for name services, so that "netmask +" will find
# the netmask if it lives in a NIS map. The 'D' in -auD tells ifconfig NOT to
# mess with the interface if it is under DHCP control
#
/usr/sbin/ifconfig -auD4 netmask + broadcast +

# Uncomment these lines to print complete network interface configuration
# echo "network interface configuration:"
# /usr/sbin/ifconfig -a

#
# If this machine is configured to be an Internet Domain Name System (DNS)
# server, run the name daemon.  Start named prior to: route add net host,
# to avoid dns gethostbyname timout delay for nameserver during boot.
#
if [ -f /etc/named.conf ] &amp;&amp; [ -f /usr/sbin/in.named ]; then
        echo 'starting internet domain name server.'
        /usr/sbin/in.named &amp;
fi

if [ "$_INIT_NET_STRATEGY" = "dhcp" ]; then
        dnsservers=`/sbin/dhcpinfo DNSserv`
else
        dnsservers=""
fi

if [ -n "$dnsservers" ]; then
        if [ -f /etc/resolv.conf ]; then
                /usr/bin/rm -f /tmp/resolv.conf.$$
                /usr/bin/sed -e '/^domain/d' -e '/^nameserver/d' &#92;
                    /etc/resolv.conf &gt;/tmp/resolv.conf.$$
        fi
        dnsdomain=`/sbin/dhcpinfo DNSdmain`
        if [ -n "$dnsdomain" ]; then
                echo "domain $dnsdomain" &gt;&gt;/tmp/resolv.conf.$$
        fi
        for name in $dnsservers; do
                echo nameserver $name &gt;&gt;/tmp/resolv.conf.$$
        done
        #
        # Warning: The umask is 000 during boot, which requires explicit
        # setting of file permission modes when we create files.
        #
        /usr/bin/mv /tmp/resolv.conf.$$ /etc/resolv.conf
        /usr/bin/chmod 644 /etc/resolv.conf

        # Add dns to the nsswitch file, if it isn't already there.
        /usr/bin/rm -f /tmp/nsswitch.conf.$$
        /usr/bin/awk ' $1 ~ /^hosts:/ {
                n = split($0, a);
                newl = a[1];
                if ($0 !~ /dns/) {
                        printf("#%s # Commented out by DHCP&#92;n", $0);
                        updated = 0;
                        for (i = 2; i &lt;= n; i++) {
                                if (updated == 0 &amp;&amp; index(a[i], "[") == 1) {
                                        newl = newl" dns";
                                        updated++;
                                }
                                newl = newl" "a[i];
                        }
                        if (updated == 0) {
                                newl = newl" dns";
                                updated++;
                        }
                        if (updated != 0)
                                newl = newl" # Added by DHCP";
                        else
                                newl = $0;
                        printf("%s&#92;n", newl);
                } else
                        printf("%s&#92;n", $0);
        } $1 !~ /^hosts:/ { printf("%s&#92;n", $0); }' /etc/nsswitch.conf &#92;
            &gt;/tmp/nsswitch.conf.$$

        /usr/bin/mv /tmp/nsswitch.conf.$$ /etc/nsswitch.conf
        /usr/bin/chmod 644 /etc/nsswitch.conf

elif grep '# Added by DHCP$' /etc/nsswitch.conf &gt;/dev/null 2&gt;&amp;1; then

        # If we added DNS to a hosts line in the nsswitch, remove it.
        /usr/bin/rm -f /tmp/nsswitch.conf.$$
        /usr/bin/sed &#92;
            -e '/# Added by DHCP$/d' &#92;
            -e 's/^&#92;(#hosts:&#92;)&#92;(.*[^#]&#92;)&#92;(#.*&#92;)$/hosts: &#92;2/' &#92;
            /etc/nsswitch.conf &gt;/tmp/nsswitch.conf.$$

        /usr/bin/mv /tmp/nsswitch.conf.$$ /etc/nsswitch.conf
        /usr/bin/chmod 644 /etc/nsswitch.conf
fi

if [ "$_INIT_NET_STRATEGY" = "dhcp" ]; then

        hostname=`/usr/bin/uname -n`

        ipaddr=`/sbin/dhcpinfo Yiaddr`

        /usr/bin/rm -f /tmp/hosts.$$ /tmp/hosts_clear.$$

        # Delete any old lines added by dhcp.
        /usr/bin/sed -e '/# Added by DHCP$/d' /etc/inet/hosts &#92;
            &gt; /tmp/hosts_clear.$$

        shift $#        # Clear $0-9 first in case grep fails
        set -- `/usr/bin/grep "^[       ]*$ipaddr[      ]" &#92;
            /tmp/hosts_clear.$$ 2&gt;/dev/null`

        if [ $# -gt 0 ]; then
                #
                # IP address is already in the hosts file. Ensure the
                # associated hostname is the same as the Hostname
                # property returned by the DHCP server.
                #
                /usr/bin/sed -e "/^[    ]*${ipaddr}[    ]/s/${2}/${hostname}/" &#92;
                    /tmp/hosts_clear.$$ &gt;/tmp/hosts.$$
        else
                #
                # IP address is missing from the hosts file.  Now check
                # to see if the hostname is present with a different IP.
                #
                shift $#        # Clear $0-9 in case grep fails
                set -- `/usr/bin/grep -s -v '^#' /tmp/hosts_clear.$$ | &#92;
                    /usr/bin/egrep "[    ]${hostname}([  ]|$)"`

                if [ $# -gt 0 ]; then
                        #
                        # Hostname is present in the hosts file. Rewrite this
                        # line to have the new IP address and the DHCP comment.
                        #
                        /usr/bin/sed -e "/^[    ]*${1}[         ]/d" &#92;
                            /tmp/hosts_clear.$$ &gt;/tmp/hosts.$$

                        shift   # Shift off $1 (the old IP)

                        echo "$ipaddr $*&#92;c" | /usr/bin/tr ' ' '&#92;t' &#92;
                            &gt;&gt;/tmp/hosts.$$

                        echo "&#92;t# Added by DHCP" &gt;&gt;/tmp/hosts.$$
                else
                        #
                        # Hostname is not present in the hosts file.
                        # Add a new line for the host at the end of
                        # the new hosts file.
                        #
                        /usr/bin/mv /tmp/hosts_clear.$$ /tmp/hosts.$$
                        echo "${ipaddr}&#92;t${hostname}&#92;t# Added by DHCP" &#92;
                            &gt;&gt;/tmp/hosts.$$
                fi
        fi

        # Update loopback transport hosts files
        for inet in /etc/net/*/hosts; do
                echo "# RPC hosts" &gt; $inet
                echo "$hostname&#92;t$hostname" &gt;&gt; $inet
                /usr/bin/chmod 644 $inet
        done

        /usr/bin/rm -f /tmp/hosts_clear.$$
        /usr/bin/mv /tmp/hosts.$$ /etc/inet/hosts
        /usr/bin/chmod 644 /etc/inet/hosts
fi

#
# Load the IPQoS configuration.
# This is backgrounded so that any remote hostname lookups it performs
# don't unduely delay startup. Any messages go via syslog.
#

if [ -f /usr/sbin/ipqosconf -a -f /etc/inet/ipqosinit.conf ]; then
        /usr/sbin/ipqosconf -s -a /etc/inet/ipqosinit.conf &amp;
fi

#
# Add a static route for multicast packets out our default interface.
# The default interface is the interface that corresponds to the node name.
# Run in background subshell to avoid waiting for name service.
#

(
if [ "$_INIT_NET_STRATEGY" = "dhcp" ]; then
        mcastif=`/sbin/dhcpinfo Yiaddr` || mcastif=$_INIT_UTS_NODENAME
else
        mcastif=$_INIT_UTS_NODENAME
fi

echo "Setting default IPv4 interface for multicast:" &#92;
    "add net 224.0/4: gateway $mcastif"

/usr/sbin/route -n add -interface 224.0/4 -gateway "$mcastif" &gt;/dev/null
) &amp;

#
# Remove the _INIT_ environment variables before running inetd.
#
unset `env | sed -n 's/^&#92;(_INIT_.*&#92;)=.*/&#92;1/p'`
#
# Run inetd in "standalone" mode (-s flag) so that it doesn't have
# to submit to the will of SAF.  Why did we ever let them change inetd?
#
/usr/sbin/inetd -s


---=[ /etc/rc2.d/S72slpd ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright 1999-2003 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)slpd       1.3     03/05/21 SMI"

CONF=/etc/inet/slp.conf
JAVA_BIN=/usr/j2se/bin/java
CLASSPATH=/usr/share/lib/slp/slpd.jar
MAIN_CLASS=com.sun.slp.slpd
SLPD_HOME=/usr/lib/inet
SLPD=slpd
SLPD_BIN=$SLPD_HOME/$SLPD

case "$1" in
'start')
        # If a configuration file exists start the slpd proxy.
        [ -f $CONF ] &amp;&amp; $SLPD_BIN -f $CONF &gt;/dev/msglog 2&gt;&amp;1 &amp;
        ;;

'stop')
        # Kill the slpd proxy.
        /usr/bin/pkill -x -u 0 -P 1 $SLPD

        # If a configuration file exists signal a shutdown to the real slpd.
        [ -f $CONF  ] &amp;&amp; {
                $JAVA_BIN -classpath $CLASSPATH &#92;
                        $MAIN_CLASS stop -f $CONF &gt;/dev/msglog 2&gt;&amp;1 &amp;

                (
                        # Give the above slpd instance a chance to signal
                        # a shutdown to the real slpd instance. If after
                        # this time it has hung kill it.
                        sleep 5

                        # The pattern must not exceed 80 chars!
                        /usr/bin/pkill -x -f -u 0 -P 1,$$ &#92;
                                "${JAVA_BIN}.*-classpath ${CLASSPATH} .*"
                ) &amp;
        }
        ;;
*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S72vasgpd ]=---------------------------------------------

#!/bin/sh
#
# /etc/init.d/vasgpd
#
# vasgpd    Start/Stop the VAS Group Policy refresh deamon (vasgpd).
#
# description: VAS GP refresh daemon
# processname: vasgpd

NAME=vasgpd
PS_GREP_NAME="$NAME"

# We don't do anything here...
START_REQUIRED_SERVICES=0
START_DEPENDENT_SERVICES=0

DAEMON=/opt/quest/sbin/$NAME  

# Change to root
OLDDIR=`pwd`
cd /

# The file where the PID is stored- in the the daemon state 
# directory by default
PIDFILE="/var/opt/quest/vgp/.$NAME.pid"

# The command line options to pass to the daemon
OPTIONS="-p $PIDFILE"

DAEMON_RUNNING=0

check_daemon_running() {
  if [ -f $PIDFILE ]; then
    daemon_pid=`cat $PIDFILE`
    daemon_process=`ps -e | grep $daemon_pid | grep $PS_GREP_NAME`
    if [ $? -eq 0 ]; then
      DAEMON_RUNNING=1;
    else
      rm -f $PIDFILE
    fi
  fi
}

# make sure the binary exists
if test ! -x $DAEMON; then
  echo "$DAEMON does not exist"
  exit 1
fi

# our return value
RETVAL=0

# process the command line
case "$1" in
  start)
    check_daemon_running

    if [ $DAEMON_RUNNING -eq 0 ]; then

      if [ $START_REQUIRED_SERVICES -eq 1 ]; then
        start_required_services
      fi

      $DAEMON $OPTIONS &gt; /dev/null 
      RETVAL=$?
      if [ $RETVAL -eq 0 ]; then
        echo "$NAME started"

        if [ $START_DEPENDENT_SERVICES -eq 1 ]; then
          start_dependent_services
        fi
      else
        echo "$NAME failed to start"
      fi
    else
      echo "$NAME appears to be running already"
    fi
    ;;

  stop)
    check_daemon_running

    if [ $DAEMON_RUNNING -eq 1 ]; then

      kill `cat $PIDFILE`
      RETVAL=$?
      if [ $RETVAL -eq 0 ]; then
        echo "$NAME stopped"
      else
        echo "Could not kill $NAME"
      fi
    else
      echo "$NAME does not appear to be running"
    fi
    ;;

  restart)
    cd $OLDDIR
    $0 stop
    sleep 1
    $0 start
    RETVAL=$?
    cd /
    ;;

  status)
    check_daemon_running
    if [ $DAEMON_RUNNING -eq 1 ]; then
      echo "$NAME is running"
      RETVAL=0
    else
      echo "$NAME is not running"
      RETVAL=1
    fi
    ;;

  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}"
    exit 1

esac

exit $RETVAL


---=[ /etc/rc2.d/S73cachefs.daemon ]=-------------------------------------

#!/sbin/sh
#
# Copyright 1995, 1997, 2002 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)cachefs.daemon     1.5     02/11/05 SMI"

# If /usr is a cachefs file system then start up the
# cachefsd for it and any other cachefs file system.

if [ "x`/usr/lib/fs/cachefs/cfsfstype /usr/lib 2&gt;/dev/null`" != xcachefs ]; then
        exit 0
fi

cachefsd=/usr/lib/fs/cachefs/cachefsd
inetconf=/etc/inet/inetd.conf
svcfound=no

rpcsvc=`/usr/bin/grep -v '^#' $inetconf | &#92;
    /usr/bin/awk '$6 == DAEMON {print $1}' DAEMON=$cachefsd`

if [ -z "$rpcsvc" ]; then
        echo "WARNING: cachefsd is not configured in $inetconf" &gt;&amp; 2
        exit 1
fi

set -- `echo "$rpcsvc" | tr '/' ' '`

for i in 1 2 3 4 5; do
        if /usr/bin/rpcinfo -l `/usr/bin/uname -n` $1 $2 2&gt;/dev/null | &#92;
            /usr/bin/grep $1 &gt;/dev/null 2&gt;&amp;1; then

                svcfound=yes
                break
        fi

        sleep 1
done

if [ $svcfound = no ]; then
        echo "WARNING: Timed out waiting for cachefs service to register" &gt;&amp;2
fi

/usr/lib/fs/cachefs/cfsadmin -C /dev/null 2&gt;/dev/null

/usr/lib/fs/cachefs/cachefspack /usr/lib/fs/cachefs &#92;
    /etc/netconfig /etc/vfstab /etc/inittab /etc/cachefstab


---=[ /etc/rc2.d/S73nfs.client ]=-----------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997-1999 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)nfs.client 1.17    01/11/27 SMI"

[ ! -d /usr/bin ] &amp;&amp; exit

#
# Start/stop processes required for client NFS
#

stop_nfsclnt_procs()
{
        /usr/bin/pkill -x -u 0,1 '(lockd|statd)'
        /sbin/umountall -F cachefs
        /sbin/umountall -F nfs
}

case "$1" in
'start')
        [ ${_INIT_RUN_NPREV:-0} != 0 ] &amp;&amp; stop_nfsclnt_procs
        if [ -x /usr/lib/nfs/statd -a -x /usr/lib/nfs/lockd ]; then
                /usr/bin/pgrep -x -u 0,1 statd &gt;/dev/null 2&gt;&amp;1 || &#92;
                    /usr/lib/nfs/statd &gt;/dev/msglog 2&gt;&amp;1 &amp;

                /usr/bin/pgrep -x -u 0 lockd &gt;/dev/null 2&gt;&amp;1 || &#92;
                    /usr/lib/nfs/lockd &gt;/dev/msglog 2&gt;&amp;1 &amp;
        fi

        /sbin/mountall -F nfs
        /sbin/mountall -F cachefs
        /sbin/swapadd
        ;;

'stop')
        stop_nfsclnt_procs
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S74autofs ]=---------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1993-1998 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)autofs     1.8     01/11/27 SMI"

case "$1" in
'start')
        /usr/lib/autofs/automountd &lt;/dev/null &gt;/dev/msglog 2&gt;&amp;1
        /usr/sbin/automount &amp;
        ;;

'stop')
        /sbin/umountall -F autofs
        /usr/bin/pkill -x -u 0 automountd
        ;;

*)
        echo "Usage: $0 { start | stop }"
        ;;
esac
exit 0


---=[ /etc/rc2.d/S74syslog ]=---------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1991-2000 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)syslog     1.14    00/11/06 SMI"

case "$1" in
'start')
        if [ -f /etc/syslog.conf -a -f /usr/sbin/syslogd ]; then
                echo 'syslog service starting.'
                #
                # Before syslogd starts, save any messages from previous
                # crash dumps so that messages appear in chronological order.
                #
                /usr/bin/savecore -m
                if [ -r /etc/dumpadm.conf ]; then
                        . /etc/dumpadm.conf
                        [ -n "$DUMPADM_DEVICE" -a &#92;
                            "x$DUMPADM_DEVICE" != xswap ] &amp;&amp; &#92;
                            /usr/bin/savecore -m -f $DUMPADM_DEVICE
                fi
                if [ ! -f /var/adm/messages ]; then
                        /usr/bin/cp /dev/null /var/adm/messages
                        /usr/bin/chmod 0644 /var/adm/messages
                fi
                /usr/sbin/syslogd &gt;/dev/msglog 2&gt;&amp;1 &amp;
        fi
        ;;

'stop')
        if [ -f /etc/syslog.pid ]; then
                syspid=`/usr/bin/cat /etc/syslog.pid`
                [ "$syspid" -gt 0 ] &amp;&amp; kill -15 $syspid
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac


---=[ /etc/rc2.d/S74xntpd ]=----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1996-1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)xntpd.sh   1.7     01/04/25 SMI"

[ ! -d /usr/sbin -o ! -d /usr/lib/inet ] &amp;&amp; exit 1

case "$1" in
'start')
        [ -f /etc/inet/ntp.conf ] || exit 0

        ARGS=`/usr/bin/cat /etc/inet/ntp.conf | /usr/bin/nawk '
        BEGIN {
            first = 1
        }
        /^#/ {
            next
        }
        /^multicastclient/ {
            if (first) {
                first = 0
                printf("-s -w -m")
            }
            if (NF == 1)
                printf(" 224.0.1.1")
            else
                printf(" %s", $2)
            next
        }
        /^server 127.127/ {
            next
        }
        /^server|^peer/ {
            if (first) {
                first = 0
                printf("-s -w")
            }
            printf(" %s", $2)
            next
        }
        '`
        if [ -n "$ARGS" ]; then
                # Wait until date is close before starting xntpd
                (/usr/sbin/ntpdate $ARGS; sleep 2; /usr/lib/inet/xntpd) &amp;
        else
                /usr/lib/inet/xntpd &amp;
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 '(ntpdate|xntpd)'
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S75cron ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997-1998 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)cron       1.13    98/04/19 SMI"

case "$1" in
'start')
        if [ -p /etc/cron.d/FIFO ]; then
                if /usr/bin/pgrep -x -u 0 -P 1 cron &gt;/dev/null 2&gt;&amp;1; then
                        echo "$0: cron is already running"
                        exit 0
                fi
        fi

        if [ -x /usr/sbin/cron ]; then
                /usr/bin/rm -f /etc/cron.d/FIFO
                /usr/sbin/cron &amp;
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 -P 1 cron
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S75flashprom ]=------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1998 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)flashprom  1.1     98/04/15 SMI"

PROG="/usr/platform/sun4u/lib/flash-update.sh"
[ -x $PROG ] &amp;&amp; $PROG


---=[ /etc/rc2.d/S75savecore ]=-------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1998 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)savecore   1.5     98/06/15 SMI"

#
# mksavedir
# Make sure that $DUMPADM_SAVDIR is set and exists.
#
mksavedir ()
{
        [ -z "$DUMPADM_SAVDIR" ] &amp;&amp; DUMPADM_SAVDIR=/var/crash/`uname -n`
        [ -d "$DUMPADM_SAVDIR" ] || /usr/bin/mkdir -m 0700 -p $DUMPADM_SAVDIR
}

#
# We haven't run savecore on a dump device yet
#
savedev=none

#
# If we previously crashed early in boot before dumpadm was used to configure
# an alternate dump device, then the dump is in the primary swap partition,
# which was configured as the dump device by the first swapadd early in boot.
# Thus before we run dumpadm to configure the dump device, we first run
# savecore to check the swap partition for a dump.
#
if [ -x /usr/bin/savecore ]; then
        [ -r /etc/dumpadm.conf ] &amp;&amp; . /etc/dumpadm.conf

        if [ "x$DUMPADM_ENABLE" != xno ] &amp;&amp; mksavedir; then
                /usr/bin/savecore $DUMPADM_SAVDIR
                shift $#
                set -- `/usr/sbin/dumpadm 2&gt;/dev/null | /usr/bin/grep 'device:'`
                savedev=${3:-none}
        fi
else
        echo "WARNING: /usr/bin/savecore is missing or not executable" &gt;&amp; 2
fi

#
# Now run dumpadm to configure the dump device based on the settings
# previously saved by dumpadm.  See dumpadm(1m) for instructions on
# how to modify the dump settings.
#
if [ -x /usr/sbin/dumpadm ]; then
        /usr/sbin/dumpadm -u || exit 1
else
        echo "WARNING: /usr/sbin/dumpadm is missing or not executable" &gt;&amp; 2
        exit 1
fi

if [ -r /etc/dumpadm.conf ]; then
        . /etc/dumpadm.conf
else
        echo "WARNING: /etc/dumpadm.conf is missing or unreadable" &gt;&amp; 2
        exit 1
fi

#
# Now that dumpadm has reconfigured /dev/dump, we need to run savecore again
# because the dump device may have changed.  If the earlier savecore had
# saved the dump, savecore will just exit immediately.
#
if [ "x$DUMPADM_ENABLE" != xno ]; then
        if /usr/sbin/swap -l | grep "^${DUMPADM_DEVICE} " &gt;/dev/null 2&gt;&amp;1; then
                #
                # If the dump device is part of swap, savecore in foreground
                # so that swap activity does not overwrite the dump.  Only run
                # savecore a second time if the device is different from the
                # swap device on which we initially ran savecore.
                #
                [ "x$savedev" != "x$DUMPADM_DEVICE" ] &amp;&amp; &#92;
                    mksavedir &amp;&amp; /usr/bin/savecore $DUMPADM_SAVDIR
        else
                #
                # Otherwise savecore in background so we come up faster.
                # The dump device couldn't have been dedicated before we
                # ran dumpadm, so we must execute savecore again.
                #
                mksavedir &amp;&amp; /usr/bin/savecore $DUMPADM_SAVDIR &gt;/dev/null 2&gt;&amp;1 &amp;
        fi
fi


---=[ /etc/rc2.d/S75vasd ]=-----------------------------------------------

#!/bin/sh
#
# /etc/init.d/vasd
#
# vascd    Start/Stop the VAS daemon (vasd).
#
# description: VAS daemon
# processname: vasd

NAME=vasd
PS_GREP_NAME="$NAME"

# We don't do anything here...
START_REQUIRED_SERVICES=0
START_DEPENDENT_SERVICES=0

if [ -z "$1" ] ; then
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}"
    exit 1
fi

if [ -x /usr/sbin/svcadm ] &amp;&amp; [ $1 != "status" ] &amp;&amp; [ "t$VAS_SMF_SERVICE" = "t" ] ; then
    case "$1" in
        start)
            echo "starting $NAME"
            /usr/sbin/svcadm enable -ts quest/vas/$NAME
            RESULT=$?
            if [ "$RESULT" -ne 0 ] ; then
                echo "Error $RESULT starting $NAME"
            fi
            ;;
        stop)
            echo "stopping $NAME"
            /usr/sbin/svcadm disable -ts quest/vas/$NAME
            ;;
        restart)
            echo "restarting $NAME"
            /usr/sbin/svcadm disable -ts quest/vas/$NAME
            /usr/sbin/svcadm enable -ts quest/vas/$NAME
            RESULT=$?
            if [ "$RESULT" -ne 0 ] ; then
                echo "Error $RESULT starting $NAME"
            fi
            ;;
        *)
            echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}"
            exit 1
    esac
    exit 0
fi

DAEMON=/opt/quest/sbin/$NAME  

# Return values:
# 0: The $NAME process is running properly. 
# 1: The $NAME process is not running.
# 2: The $NAME process is running without a pid file for control.
# NOTE: #2 can happen if the user running this script doesn't have read rights to 
# the pid file. 

# Set a path, just in case we are in the boot-up process, and it isn't set yet. 
# Specifically for HP-UX, but shouldn't hurt anything else.
PATH=/usr/bin:$PATH

# Change to root
OLDDIR=`pwd`
cd /

# The file where the PID is stored- in the the daemon state 
# directory by default
PIDFILE="/var/opt/quest/vas/$NAME/.$NAME.pid"

# The command line options to pass to the daemon
OPTIONS="-p $PIDFILE"

# 0: Not running.
# 1: Running normally
# 2: Running, but no PID file.
# 3: Running, but PID file doesn't match running processes.
# If the PID file is found but no process, the file is removed and 0 is returned.
DAEMON_RUNNING=0
# NOTE: This is not the returned value. 


PROCESSES=

# Test if we can use the faster -o options the don't require uid-&gt;name translation.
# Put in a filler uid field so field 2 is always the pid.
ps -o pid,args&gt;/dev/null 2&gt;&amp;1
if [ $? -eq 0 ] ; then
    PS_CMD="ps -e -o pid,args"
    PID_PARSE=1
else    
    ps -ex &gt;/dev/null 2&gt;&amp;1
    if [ $? -eq 0 ] ; then
        PS_CMD="ps -ex"
        PID_PARSE=1
    else
        PS_CMD="ps -ef"
        PID_PARSE=2
    fi
fi    

check_daemon_running() {
    DAEMON_RUNNING=0
        
    if [ $PID_PARSE = 1 ] ; then
        PROCESSES="`eval $PS_CMD | grep $DAEMON | grep -v grep | awk '{print $1}'`"
    else
        PROCESSES="`eval $PS_CMD | grep $DAEMON | grep -v grep | awk '{print $2}'`"
    fi
    if [ -f $PIDFILE ]; then
        if [ ! -z "$PROCESSES" ] ; then
            # Potential race condition on slow(busy) systems
            PARENT_PID=`cat $PIDFILE 2&gt;/dev/null`
            if [ $? -ne 0 ]; then
                DAEMON_RUNNING=0
            else
                PPROCESS=`echo $PROCESSES | grep $PARENT_PID 2&gt;/dev/null`    
                if [ $? -eq 0 ] ; then
                    DAEMON_RUNNING=1
                else 
                    DAEMON_RUNNING=3
                fi        
            fi
        else
            rm -f $PIDFILE
        fi
    else
        if [ ! -z "$PROCESSES" ] ; then
            DAEMON_RUNNING=2
        fi        
    fi
}

# Kills process $1. 
# First a sigterm, then wait up to 10 seconds 
# before issuing a sig kill. 
kill_proc() {
    if [ -z "$1" ] ; then
        # Hmm... No pid, meaning no $PIDFILE. Use the list from check_daemon_running()
        kill $PROCESSES 2&gt;/dev/null
    else
        kill $1 2&gt;/dev/null
    fi
    count=1

    while [ $count -le 10 ] ; do
        sleep 1
        check_daemon_running
        if [ $DAEMON_RUNNING -eq 0 ] ; then
            break
        fi        
        if [ $count -eq 1 ] ; then
            # Maybe some processes aren't attached to the one with in the pid file.
            # Kill everything.
            kill $PROCESSES 2&gt;/dev/null
        fi        
        count=`expr $count + 1`
    done
    # Use value from last check
    if [ $DAEMON_RUNNING -ne 0 ] ; then
        # Since we are kill killing, kill everything from check_daemon_running()
        kill -9 $PROCESSES 2&gt;/dev/null
    fi
    rm -f $PIDFILE
}

check_root() 
{
    if [ "`id | sed 's/uid=&#92;([0-9]*&#92;).*/&#92;1/'`" -ne 0 ] ; then
        echo "This option must be run as root."
        exit
    fi
}

# make sure the binary exists
if test ! -x $DAEMON; then
  echo "$DAEMON does not exist"
  exit 1
fi

# our return value
RETVAL=0

# process the command line
case "$1" in
    start)
        check_root
        check_daemon_running
        if [ $DAEMON_RUNNING -eq 0 ]; then
            if [ "t$START_REQUIRED_SERVICES" != "t" ] &amp;&amp; [ $START_REQUIRED_SERVICES -eq 1 ]; then
                start_required_services
            fi

            $DAEMON $OPTIONS &gt; /dev/null 
            RETVAL=$?
            if [ $RETVAL -eq 0 ]; then
                echo "$NAME started"
                if [ "t$START_DEPENDENT_SERVICES" != "t" ] &amp;&amp; [ $START_DEPENDENT_SERVICES  -eq 1 ] ; then
                    start_dependent_services
                fi
            else
                echo "$NAME failed to start"
            fi
        else
                echo "$NAME appears to be running already"
        fi
        ;;

    stop)
        check_root
        check_daemon_running

        if [ $DAEMON_RUNNING -ne 0 ]; then
            kill_proc `cat $PIDFILE 2&gt;/dev/null`
            if [ "t$STOP_DEPENDENT_SERVICES" != "t" ] &amp;&amp; [ $STOP_DEPENDENT_SERVICES -eq 1 ]; then
                stop_dependent_services
            fi
            echo "$NAME stopped"
        else
            echo "$NAME does not appear to be running"
        fi
        ;;

    restart)
        check_root
        cd $OLDDIR
        $0 stop
        $0 start
        RETVAL=$?
        cd /
        ;;
    status)
        check_daemon_running
        if [ $DAEMON_RUNNING -eq 1 ]; then
            echo "$NAME is running"
            RETVAL=0
        else
            if [ $DAEMON_RUNNING -eq 0 ] ; then
                echo "$NAME is not running"
                RETVAL=1
            else
                echo "$NAME is running without a pid file"
                RETVAL=2
            fi
        fi
        ;;
    *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}"
        exit 1
esac

exit $RETVAL


---=[ /etc/rc2.d/S76nscd ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1994, 1997, 1999, 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)nscd       1.10    01/10/29 SMI"

case "$1" in
start)
        [ -f /etc/nscd.conf ] &amp;&amp; [ -f /usr/sbin/nscd ] || exit 0
        secure=""

                
        if egrep -s "^(passwd|passwd_compat):.*nisplus" /etc/nsswitch.conf
        then
                /usr/lib/nscd_nischeck passwd || secure="$secure -S passwd,yes"
        fi

        /usr/sbin/nscd$secure &lt; /dev/null &gt; /dev/msglog 2&gt;&amp;1 &amp;
        ;;

stop)
        [ -f /usr/sbin/nscd ] &amp;&amp; /usr/sbin/nscd -K
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S77sf880dr ]=--------------------------------------------

#!/sbin/sh
#
# Copyright 2000,2003 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)sf880dr    1.2     03/08/11 SMI"

platform=${_INIT_UTS_PLATFORM:=`/sbin/uname -i`}
if [ $platform = "SUNW,Sun-Fire-880" -o $platform = "SUNW,Sun-Fire-V890" ]
then
        case "$1" in
        'start')
                if [ -f /usr/platform/$platform/lib/sf880drd ]; then
                        /usr/platform/$platform/lib/sf880drd &#92;
                                &gt;/dev/msglog 2&gt;&amp;1 &amp;
                fi
                ;;
        'stop')
                /usr/bin/pkill -x -u 0 sf880drd
                ;;
        *)
                echo "Usage: $0 { start | stop }"
                exit 1
                ;;
        esac
fi
exit 0


---=[ /etc/rc2.d/S80lp ]=-------------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997, 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)lp 1.10    01/11/04 SMI"

case "$1" in
'start')
        if [ -z "$_INIT_PREV_LEVEL" ]; then
                set -- `/usr/bin/who -r`
                _INIT_PREV_LEVEL="$9"
        fi

        [ $_INIT_PREV_LEVEL = 2 -o $_INIT_PREV_LEVEL = 3 ] &amp;&amp; exit 0

        PRINTERS=/etc/lp/printers
        CONFIG=configuration

        printers_configured=`echo $PRINTERS/*/$CONFIG`
        case "$printers_configured" in
        "$PRINTERS/*/$CONFIG") exit 0;;         # no local printers
        esac

        [ -f /usr/lib/lpsched ] &amp;&amp; /usr/lib/lpsched
        ;;

'stop')
        [ -f /usr/lib/lpshut ] &amp;&amp; /usr/lib/lpshut
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
esac
exit 0


---=[ /etc/rc2.d/S80spc ]=------------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1996-1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)spc        1.9     97/12/08 SMI"

PATH=/usr/bin:/usr/sbin; export PATH

case "$1" in
'start')
        [ -f /usr/lib/print/printd ] || exit 0

        if [ -z "$_INIT_PREV_LEVEL" ]; then
                set -- `/usr/bin/who -r`
                _INIT_PREV_LEVEL="$9"
        fi

        if [ $_INIT_PREV_LEVEL != 2 -a $_INIT_PREV_LEVEL != 3 ]; then
                rm -f /var/spool/print/tf* &gt;/dev/null 2&gt;&amp;1
                /usr/lib/print/printd &amp;
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 printd
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S81ipp ]=------------------------------------------------

#!/sbin/sh
#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
# $Id$
# 
# "@(#)ipp      1.2     04/02/06 SMI"
#

APACHE_HOME=/usr/apache
CONF_FILE=/etc/apache/httpd-standalone-ipp.conf
PIDFILE=/var/run/httpd-standalone-ipp.pid
LOGFILE=/var/lp/logs/ipp-errors

if [ ! -f ${CONF_FILE} ]; then
        exit 0
fi

case "$1" in
start)
        PRINTERS=/etc/lp/printers
        CONFIG=configuration

        printers_configured=`echo $PRINTERS/*/$CONFIG`
        case "$printers_configured" in
        "$PRINTERS/*/$CONFIG") exit 0;;         # no local printers
        esac

        /bin/rm -f ${PIDFILE}
        /bin/touch ${LOGFILE}
        $APACHE_HOME/bin/httpd -f $CONF_FILE &gt;/dev/null 2&gt;&amp;1
        ;;
restart)
        ;;
stop)
        pkill -f httpd-standalone-ipp
        ;;
*)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
        ;;
esac

exit 0


---=[ /etc/rc2.d/S85power ]=----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1993-1999, 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#pragma ident   "@(#)power      1.12    01/03/07 SMI"
#
# If the /etc/power.conf file does not have a "statefile" entry
# to specify the pathname of the cpr statefile, build one and
# add the line.  We choose the largest of the standard Sun partitions.

init_statefile_entry() {
        [ ! -f /etc/power.conf -o ! -w /etc/power.conf ] &amp;&amp; return

        # Whitespace regular expression below is [&lt;TAB&gt;&lt;SPACE&gt;]

        pattern="^[     ]*statefile[     ][      ]*/"
        [ `/usr/bin/grep -c "$pattern" /etc/power.conf` -ge 1 ] &amp;&amp; return

        avail=0                 # Free blocks in current filesystem
        max_avail=0             # Most available free blocks encountered so far
        statefile=.CPR          # Default cpr statefile name

        # Remove old statefile (if any) from root
        [ -f /$statefile ] &amp;&amp; /usr/bin/rm -f /$statefile

        /usr/bin/df -k -F ufs |
        (
                read line       # Skip past the header line of the df output

                while read device kbytes used avail capacity filesys; do
                        case $filesys in
                        /|/usr|/var|/export/home)
                                if [ $avail -gt $max_avail ]; then
                                        max_avail=$avail
                                        winner=$filesys
                                fi
                                ;;
                        esac
                done

                if [ $max_avail -gt 0 ]; then
                        echo "statefile         ${winner}/${statefile}" &#92;
                            &gt;&gt;/etc/power.conf
                fi

                return
        )
}

case "$1" in
'start')
        [ -z "$_INIT_UTS_ISA" ] &amp;&amp; _INIT_UTS_ISA=`/usr/bin/uname -p`

        if [ $_INIT_UTS_ISA = sparc ]; then
                init_statefile_entry
        fi

        if [ -x /usr/sbin/pmconfig -a -r /etc/power.conf ]; then
                /usr/sbin/pmconfig &gt;/dev/console 2&gt;&amp;1
        fi
        ;;

'stop')
        if [ -x /usr/sbin/pmconfig ]; then 
                /usr/sbin/pmconfig -r &gt;/dev/null 2&gt;/dev/null
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S88sendmail ]=-------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1992 - 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)sendmail   1.19    01/12/05 SMI"

ERRMSG1='WARNING: /var/mail is NFS-mounted without setting actimeo=0,'
ERRMSG2='this can cause mailbox locking and access problems.'
SERVER_PID_FILE="/var/run/sendmail.pid"
CLIENT_PID_FILE="/var/spool/clientmqueue/sm-client.pid"
DEFAULT_FILE="/etc/default/sendmail"
ALIASES_FILE="/etc/mail/aliases"

check_queue_interval_syntax()
{
        default="15m"
        if [ $# -lt 1 ]; then
                answer=$default
                return
        fi
        if echo $1 | egrep '^([0-9]*[1-9][0-9]*[smhdw])+$' &gt;/dev/null 2&gt;&amp;1; then
                answer=$1
        else
                answer=$default
        fi
}

case "$1" in 
'restart')
        [ -f $SERVER_PID_FILE ] &amp;&amp; kill -1 `head -1 $SERVER_PID_FILE`
        [ -f $CLIENT_PID_FILE ] &amp;&amp; kill -1 `head -1 $CLIENT_PID_FILE`
        ;;

'start')
        if [ -f /usr/lib/sendmail -a -f /etc/mail/sendmail.cf ]; then
                if [ ! -d /var/spool/mqueue ]; then
                        /usr/bin/mkdir -m 0750 /var/spool/mqueue
                        /usr/bin/chown root:bin /var/spool/mqueue
                fi
                if [ ! -f $ALIASES_FILE.db ] &amp;&amp; [ ! -f $ALIASES_FILE.dir ] &#92;
                    &amp;&amp; [ ! -f $ALIASES_FILE.pag ]; then
                        /usr/sbin/newaliases
                fi
                MODE="-bd -OdaemonPortOPtions=Addr=localhost"
                [ -f $DEFAULT_FILE ] &amp;&amp; . $DEFAULT_FILE
                #
                # * MODE should be "-bd" or null (MODE= or MODE="") or
                #   left alone.  Anything else and you're on your own.
                # * QUEUEOPTION should be "p" or null (as above).
                # * [CLIENT]QUEUEINTERVAL should be set to some legal value;
                #   sanity checks are done below.
                # * [CLIENT]OPTIONS are catch-alls; set with care.
                #
                if [ -n "$QUEUEOPTION" -a "$QUEUEOPTION" != "p" ]; then
                        QUEUEOPTION=""
                fi
                if [ -z "$QUEUEOPTION" -o -n "$QUEUEINTERVAL" ]; then
                        check_queue_interval_syntax $QUEUEINTERVAL
                        QUEUEINTERVAL=$answer
                fi
                check_queue_interval_syntax $CLIENTQUEUEINTERVAL
                CLIENTQUEUEINTERVAL=$answer
                #/usr/lib/sendmail $MODE -q$QUEUEOPTION$QUEUEINTERVAL $OPTIONS &amp;
                /usr/lib/sendmail -bd -q$CLIENTQUEUEINTERVAL $CLIENTOPTIONS &amp;
                #
                # ETRN_HOSTS should be of the form
                # "s1:c1.1,c1.2        s2:c2.1 s3:c3.1,c3.2,c3.3"
                # i.e., white-space separated groups of server:client where
                # client can be one or more comma-separated names; N.B. that
                # the :client part is optional; see etrn(1M) for details.
                # server is the name of the server to prod; a mail queue run
                # is requested for each client name.  This is comparable to
                # running "/usr/lib/sendmail -qRclient" on the host server.
                #
                # See RFC 1985 for more information.
                #
                for i in $ETRN_HOSTS; do
                        SERVER=`echo $i | /usr/bin/sed -e 's/:.*$//'`
                        CLIENTS=`echo $i | /usr/bin/sed -n -e 's/,/ /g' &#92;
                            -e '/:/s/^.*://p'`
                        /usr/sbin/etrn $SERVER $CLIENTS &gt;/dev/null 2&gt;&amp;1 &amp;
                done
        fi      

        if /usr/bin/nawk 'BEGIN{s = 1}
            $2 == "/var/mail" &amp;&amp; $3 == "nfs" &amp;&amp; $4 !~ /actimeo=0/ &amp;&amp;
            $4 !~ /noac/{s = 0} END{exit s}' /etc/mnttab; then

                /usr/bin/logger -p mail.crit "$ERRMSG1"
                /usr/bin/logger -p mail.crit "$ERRMSG2"
        fi
        ;;

'stop')
        [ -f $SERVER_PID_FILE ] &amp;&amp; kill `head -1 $SERVER_PID_FILE`
        if [ -f $CLIENT_PID_FILE ]; then
                kill `head -1 $CLIENT_PID_FILE`
                rm -f $CLIENT_PID_FILE
        fi
        /usr/bin/pkill -x -u 0 sendmail
        ;;

*)
        echo "Usage: $0 { start | stop | restart }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S88utmpd ]=----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997-1998 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)utmpd      1.6     98/04/19 SMI"

case "$1" in
'start')
        [ ! -x /usr/lib/utmpd ] &amp;&amp; exit 0

        # If a utmppipe exists, check for a utmpd process and exit
        # if the daemon is already running.

        if [ -p /etc/utmppipe ]; then
                if /usr/bin/pgrep -x -u 0 -P 1 utmpd &gt;/dev/null 2&gt;&amp;1; then
                        echo "$0: utmpd is already running"
                        exit 0
                fi
        fi

        /usr/bin/rm -f /etc/utmppipe
        /usr/lib/utmpd &amp;
        ;;

'stop')
        /usr/bin/pkill -x -u 0 -P 1 utmpd
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S89PRESERVE ]=-------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)PRESERVE   1.7     97/12/08 SMI"

#
# Move editing files into /usr/preserve
#

exfiles=`echo /var/tmp/Ex*`
[ "$exfiles" != '/var/tmp/Ex*' ] &amp;&amp; /usr/lib/expreserve -


---=[ /etc/rc2.d/S89bdconfig ]=-------------------------------------------

#ident  "@(#)buttons_n_dials-setup      6.2     01/11/14 SMI"   /* SunOS 5.0 */
#
# Copyright (c) 1992 by Sun Microsystems, Inc.
#
# /etc/init.d/buttons_n_dials-setup - Configure the bd stream.
#
if [ -c /dev/bd -a -x /usr/sbin/bdconfig ]; then
        /usr/sbin/bdconfig startup
fi

#
# Optional status message:
#
# /usr/sbin/bdconfig status


---=[ /etc/rc2.d/S90wbem ]=-----------------------------------------------

#!/sbin/sh
#
#ident  "@(#)init.wbem.sh       1.66    03/04/22 SMI"
#
# Copyright 2000-2003 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

if [ -x /usr/sadm/lib/smc/bin/smcboot ]; then
        VIPER_HOME=/usr/sadm/lib/smc
        export VIPER_HOME

        SMC_PORT=`getent services smc | awk '{print $2}' | cut -d'/' -f1`
        if [ "$SMC_PORT" = "" ]; then
            SMC_PORT=898
        fi

fi

stopCimom () {
    for daemon in cimbootserver cimomserver ; do
            pidfile=/var/sadm/wbem/logr/$daemon.pid
            if [ -f $pidfile ]; then
                    pid=`/usr/bin/cat $pidfile`
                    [ "$pid" -gt 0 ] &amp;&amp; kill $pid &gt;/dev/null 2&gt;&amp;1
                    rm -f $pidfile
            fi
    done
}

case "$1" in
'start')
        if [ -n "$VIPER_HOME" ]; then
                # We try to be intelligent about when this script is run.
                # If started during system boot (as evidenced by /etc/rc
                # included in the path AND the script isn't referred to
                # to as "init.wbem"), then we start using smcboot, which
                # will delay SMC server startup until the 1st connection
                # from the SMC console.
                #
                # Otherwise, it is safe to assume that system boot is 
                # completed, and we can force the server to start immediately.
                #
                rcDir=`/usr/bin/dirname $0 | grep "/etc/rc"`
                file=`basename $0`
                if [ "${file}" = "init.wbem" -a "${rcDir}" = "" ]; then

                        # If smcboot is running, stop it first, otherwise
                        # you get collision on the same port.
                        smcboot=`/bin/pgrep smcboot`
                        if [ -n "$smcboot" ]; then
                                $0 stop
                        fi

                        # Start server
                        $VIPER_HOME/bin/smcwbemserver -p $SMC_PORT start &gt;/dev/msglog 2&gt;&amp;1 &amp;
                else
                        $VIPER_HOME/bin/smcboot &gt;/dev/msglog 2&gt;&amp;1 &amp;
                fi
        else
                # Stop and start the CIMOM.
                stopCimom
                umask 066; /usr/sadm/lib/wbem/cimomboot "$@" &gt;/dev/msglog 2&gt;&amp;1 &amp;
                echo $! &gt;/var/sadm/wbem/logr/cimbootserver.pid
        fi
        ;;

'stop')
        if [ -n "$VIPER_HOME" ]; then
                if [ -f /var/run/smc$SMC_PORT/boot.pid ]; then
                        kill -TERM `cat /var/run/smc$SMC_PORT/boot.pid`

                        # Need to give the killed process enough time
                        # to catch the TERM signal and clean up
                        sleep 1
                else
                        $VIPER_HOME/bin/smcserver -p $SMC_PORT stop
                fi

                # Directory containing socket information could still be 
                # around if server died unexpectedly or user killed it manually.
                # So it's important to delete it, otherwise there will be 
                # problems on the next start.  The SMC server scripts should
                # take care of this, so it's unlikely the directory will exist
                # at this time.  But just in case...
                #
                if [ -d /var/run/smc${SMC_PORT} ]; then
                        rm -rf /var/run/smc${SMC_PORT}
                        echo "Server found to be unstable."
                        echo "It has been repaired and can now be restarted."
                fi
        else
                stopCimom
        fi
        ;;

status)
        if [ -n "$VIPER_HOME" ]; then
                $VIPER_HOME/bin/smcserver -p $SMC_PORT status
        fi
        ;;

*)
        echo "Usage: $0 { start | stop | status }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S91afbinit ]=--------------------------------------------

#!/bin/sh
#ident  "@(#)afbinit  1.4 98/04/22 SMI"
#
# Copyright (c) 1997 by Sun Microsystems, Inc.
#
# /etc/rc2.d/S91afbinit - UNIX initialization of AFB

PATH=/usr/bin:/bin:/usr/sbin:/sbin

#
# Find out how many AFB cards are installed on the system.
#
afb_count=`prtconf | grep -c afb`
if [ ${afb_count} -eq 0 ]
then
        exit 0
fi              

# 
# Check the $devpath directory for any afb devices
#
devpath=/dev
test -d /dev/fbs &amp;&amp; devpath=/dev/fbs
devs=`/bin/ls $devpath | grep afb`

#
# If there aren't any around, there's no need to load
# the driver, so quit.
#
if [ "$devs" = "" ]
then
        exit 0
fi

#
# We have a afb, so modload the driver and make sure that it was successful.  
# First try to locate the driver in the uname -i directory.  Otherwise 
# look in uname -m.
#
plat=`uname -i`
if [ ! -f /platform/$plat/kernel/drv/afb ]
then
        plat=`uname -m`
        if [ ! -f /platform/$plat/kernel/drv/afb ]
        then
                echo "afbinit: cannot find the afb driver module."
                exit 1
        fi
fi

err=`modload /platform/$plat/kernel/drv/afb 2&gt;&amp;1`
if [ $? -ne 0 ]
then
        echo "afbinit: Problems loading AFB driver: $err"
        exit 1
fi

#
#  ucode download error flag - a non-zero flag means there was a failure
#
err_flag=0

#
#  If we can find the binary, then download the microcode to each
#  instance of the afb device present in the system.
#
if [ -f /usr/sbin/afbdaemon ]
then
        #
        #  Now download the microcode to each afb. Note any failures but
        #  continue to attempt to download ucode to other afbs.
        #
        for inst in $devs
        do
                /usr/sbin/afbdaemon /dev/fbs/${inst} &gt;/dev/console  2&gt;&amp;1 &amp;
        done
else
        err_flag=1
fi

#
#  Check to see if ucode download succeeded for all devices
#
if [ $err_flag -ne 0 ] 
then
        exit 1
fi
exit 0


---=[ /etc/rc2.d/S91gfbinit ]=--------------------------------------------

#!/bin/sh
#ident  "@(#)gfbinit  1.6 02/02/26 SMI"
#
# Copyright (c) 2001 by Sun Microsystems, Inc.
# All rights reserved.

# /etc/rc2.d/S91gfbinit - Solaris  initialization of GFB

PATH=/usr/bin:/bin:/usr/sbin:/sbin

#
# Find out how many GFB cards are installed on the system.
#
gfb_count=`prtconf | grep -c gfb`
if [ ${gfb_count} -eq 0 ]
then
        exit 0
fi              

# 
# Check the $devpath directory for any gfb devices
#
devpath=/dev
test -d /dev/fbs &amp;&amp; devpath=/dev/fbs
devs=`/bin/ls $devpath | grep gfb.$`

#
# If there aren't any around, there's no need to load
# the driver, so quit.
#
if [ "$devs" = "" ]
then
        exit 0
fi

#
# We have a gfb, so modload the 32- or 64-bit driver and make sure that it
# was successful.  
# Try to locate the driver in the uname -i directory.  Otherwise look in
# uname -m.
#
isainfo=`isalist`
case "$isainfo" in
        *v9*)   drvdir="drv/sparcv9"
                ;;
        *)      drvdir="drv"
                ;;
esac

plat=`uname -i`
if [ ! -f /platform/$plat/kernel/$drvdir/gfb ]
then
        plat=`uname -m`
        if [ ! -f /platform/$plat/kernel/$drvdir/gfb ]
        then
                echo "gfbinit: cannot find the gfb driver module."
                exit 1
        fi
fi

err=`modload /platform/$plat/kernel/$drvdir/gfb 2&gt;&amp;1`
if [ $? -ne 0 ]
then
        echo "gfbinit: Problems loading GFB driver: $err"
        exit 1
fi

#
#  ucode download error flag - a non-zero flag means there was a failure
#
err_flag=0


#
#  If we can find the binary, then download the microcode to each
#  instance of the gfb device present in the system.
#
if [ -f /usr/sbin/gfbdaemon ]
then
        #
        #  Now download the microcode to each gfb. Note any failures but
        #  continue to attempt to download ucode to other gfbs.
        #
        for inst in $devs
        do
                /usr/sbin/gfbdaemon -dev /dev/fbs/${inst} &gt;/dev/console  2&gt;&amp;1 &amp;
        done
else
        err_flag=1
fi

#
#  Check to see if ucode download succeeded for all devices
#
if [ $err_flag -ne 0 ] 
then
        exit 1
fi
exit 0


---=[ /etc/rc2.d/S91ifbinit ]=--------------------------------------------

#!/bin/sh
#
# Copyright (c) 1999 by Sun Microsystems, Inc.
#
# /etc/rc2.d/S91ifbinit - UNIX initialization of IFB

PATH=/usr/bin:/bin:/usr/sbin:/sbin

case $1 in 
'start')

#
# Find out how many IFB cards are installed on the system.
#
ifb_count=`prtconf -vp | egrep -c "&#92;'(pci1091,108|pci1091,7a0|SUNW,Expert3D|pci1091,140|SUNW,Expert3D-Lite|SUNW,XV-500|SUNW,XVR-500)&#92;'"`
        if [ ${ifb_count} -eq 0 ]
        then
                exit 0
        fi              

# 
# Check the $devpath directory for any ifb devices
#
        devpath=/dev
        test -d /dev/fbs &amp;&amp; devpath=/dev/fbs
        devs=`/bin/ls $devpath | grep ifb`

#
# If there aren't any around, there's no need to load
# the driver, so quit.
#
        if [ "$devs" = "" ]
        then
                exit 0
        fi

#
# We have a ifb, so modload the driver and make sure that it was successful.  
# Determine if we are running on a 64-bit boot and should load the 64-bit driver.
# First try to locate the driver in the uname -i directory.  Otherwise 
# look in uname -m.
#
        isainfo=`isalist`
        case "$isainfo" in
                *v9*)   drvdir="drv/sparcv9"
                        ;;
                *)      drvdir="drv"
                        ;;
        esac

        plat=`uname -i`
        if [ ! -f /platform/$plat/kernel/$drvdir/ifb ]
        then
                plat=`uname -m`
                if [ ! -f /platform/$plat/kernel/$drvdir/ifb ]
                then
                        echo "ifbinit: cannot find the ifb driver module."
                        exit 1
                fi
        fi

        err=`modload /platform/$plat/kernel/$drvdir/ifb 2&gt;&amp;1`
        if [ $? -ne 0 ]
        then
                echo "ifbinit: Problems loading IFB driver: $err"
                exit 1
        fi

#
#  ucode download error flag - a non-zero flag means there was a failure
#
        err_flag=0

#
#  If we can find the binary, then download the microcode to each
#  instance of the ifb device present in the system.
#
        if [ -f /usr/sbin/ifbdaemon ]
        then
                #
                #  Now download the microcode to each ifb. Note any failures but
                #  continue to attempt to download ucode to other ifbs.
                #
                for inst in $devs
                do
                        /usr/sbin/ifbdaemon /dev/fbs/${inst} &gt;/dev/console  2&gt;&amp;1 &amp;
                done
        else
                err_flag=1
        fi

#
#  Check to see if ucode download succeeded for all devices
#
        if [ $err_flag -ne 0 ] 
        then
                exit 1
        fi
        exit 0
        ;;
'stop')
        pid=`/usr/bin/ps -eo pid,comm | /usr/bin/awk '{ if ($2 == "/usr/sbin/ifbdaemon") print $1 }'`
        if test "$pid"
        then
                kill $pid
        fi
        exit 0
        ;;
*)
        echo "Usage: /etc/init.d/ifbdaemon { start | stop }"
        ;;
esac
exit 0


---=[ /etc/rc2.d/S91jfbinit ]=--------------------------------------------

#!/bin/sh
#
# Copyright (c) 1999-2002 by Sun Microsystems, Inc.
#
# /etc/rc2.d/S91jfbinit - UNIX initialization of JFB

PATH=/usr/bin:/bin:/usr/sbin:/sbin

JFBS="pci3d3d,1044|SUNW,XVR-1200|pci3d3d,1047|SUNW,XVR-600"


case $1 in 
'start')

        #
        # Find out how many JFB cards are installed on the system.
        # If there aren't any, exit.
        #
        jfb_count=`prtconf -vp | egrep -c "&#92;'(${JFBS})&#92;'"`

        devpath=/dev
        test -d /dev/fbs &amp;&amp; devpath=/dev/fbs
        devs=`/bin/ls -1 $devpath | /bin/grep 'jfb[0-9]*[0-9]$'`

        if [ ${jfb_count} -eq 0 -o "$devs" = "" ]
        then
                exit 0
        fi

        #
        #  Download the microcode to each jfb.
        #
        for inst in $devs
        do
                /usr/sbin/jfbdaemon /dev/fbs/${inst} &gt;/dev/console  2&gt;&amp;1 &amp;
        done

        exit 0
        ;;

'stop')
        pid=`/usr/bin/ps -eo pid,comm | /usr/bin/awk '{ if ($2 == "/usr/sbin/jfbdaemon") print $1 }'`
        if test "$pid"
        then
                kill $pid
        fi
        exit 0
        ;;

*)
        echo "Usage: /etc/init.d/jfbdaemon { start | stop }"
        ;;
esac
exit 0


---=[ /etc/rc2.d/S91kfbinit ]=--------------------------------------------

#!/bin/sh
#
# @(#)kfbinit  1.13 05/07/22 SMI
#
# Copyright (c) 2004 by Sun Microsystems, Inc.
# All rights reserved.
#
# /etc/rc2.d/S91kfbinit 
#
# kfbdaemon is needed for the XVR-2500 and XVR-2600
# Graphics Accelerators (kfb).
#

PATH=/usr/bin:/bin:/usr/sbin:/sbin

case $1 in 
'start')

#
# Find out how many KFB cards are installed on the system.
#
kfb_count=`prtconf -vp | egrep -c "&#92;'(pci3d3d,176|SUNW,XVR-2400|SUNW,XVR-2200|pci3d3d,171|pci3d3d,170|pci3d3d,178|pci3d3d,177|pci3d3d,1052|pci3d3d,105
        if [ ${kfb_count} -eq 0 ]
        then
                exit 0
        fi              

# 
# Check the $devpath directory for any kfb devices
#
        devpath=/dev
        test -d /dev/fbs &amp;&amp; devpath=/dev/fbs
        devs=`/bin/ls $devpath | grep 'kfb[0-9]*[0-9]$'`

#
# If there aren't any around, there's no need to load
# the driver, so quit.
#
        if [ "$devs" = "" ]
        then
                exit 0
        fi

#
# We have a kfb, so modload the driver and make sure that it was successful.  
# Determine if we are running on a 64-bit boot and should load the 64-bit driver.
# First try to locate the driver in the uname -i directory.  Otherwise 
# look in uname -m.
#
        isainfo=`isalist`
        case "$isainfo" in
                *v9*)   drvdir="drv/sparcv9"
                        ;;
        esac

        plat=`uname -i`
        if [ ! -f /platform/$plat/kernel/$drvdir/kfb ]
        then
                plat=`uname -m`
                if [ ! -f /platform/$plat/kernel/$drvdir/kfb ]
                then
                        echo "kfbinit: cannot find the kfb driver module."
                        exit 1
                fi
        fi

        err=`modload /platform/$plat/kernel/$drvdir/kfb 2&gt;&amp;1`
        if [ $? -ne 0 ]
        then
                echo "kfbinit: Problems loading KFB driver: $err"
                exit 1
        fi

#
#  initialization error flag - a non-zero flag means there was a failure
#
        err_flag=0

if [ -f /usr/sbin/kfbdaemon ]
then
        #
        #  Start kfbdaemon on each kfb device
        #
        for inst in $devs
        do
                /usr/sbin/kfbdaemon -dev /dev/fbs/${inst} &gt;/dev/console  2&gt;&amp;1 &amp;
        done
else
        err_flag=1
fi

#
#  Check to see if initialization succeeded for all devices
#
        if [ $err_flag -ne 0 ] 
        then
                echo "There was an error in starting kfbdaemon"
                exit 1
        fi
        exit 0
        ;;
'stop')
        #
        #  Stop kfbdaemon on each kfb device
        #
        if [ -x /usr/sbin/kfbdaemon ]
        then
            devpath=/dev
            test -d /dev/fbs &amp;&amp; devpath=/dev/fbs
            devs=`/bin/ls $devpath | grep 'kfb[0-9]*[0-9]$'`
            for inst in $devs
            do
                    /usr/sbin/kfbdaemon -shutdown -dev /dev/fbs/${inst} &gt;/dev/console  2&gt;&amp;1 &amp;
            done
        fi
        /usr/sbin/modinfo | awk '/kfb/ {print "modunload -i",$1}' | /bin/sh
        exit 0
        ;;
*)
        echo "Usage: /etc/init.d/kfbinit { start | stop }"
        ;;
esac
exit 0


---=[ /etc/rc2.d/S91zuluinit ]=-------------------------------------------

#!/bin/sh
#ident  "@(#)zuluinit   1.3     02/04/23 SMI"
#
# Copyright (c) 2002 by Sun Microsystems, Inc.
# All rights reserved.

# /etc/rc2.d/S91zuluinit - Solaris initialization of zulu

PATH=/usr/bin:/bin:/usr/sbin:/sbin

#
# Find out how many zulu cards are installed on the system.
#
zulu_count=`prtconf | grep -c zulu`
if [ ${zulu_count} -eq 0 ]
then
        exit 0
fi              

# 
# Check the $devpath directory for any Zulu devices
#
devpath=/dev
test -d /dev/fbs &amp;&amp; devpath=/dev/fbs
devs=`/bin/ls $devpath | grep zulu.$`

#
# If there aren't any around, there's no need to load
# the driver, so quit.
#
if [ "$devs" = "" ]
then
        exit 0
fi

#
# We have a zulu, so modload the 64-bit driver and make sure that it
# was successful.
# Try to locate the driver in the uname -i directory.  Otherwise look in
# uname -m.
#
isainfo=`isalist`
case "$isainfo" in
        *v9*)   drvdir="drv/sparcv9"
                ;;
        *)      drvdir="drv"
                ;;
esac

plat=`uname -i`
if [ ! -f /platform/$plat/kernel/$drvdir/zulu ]
then
        plat=`uname -m`
        if [ ! -f /platform/$plat/kernel/$drvdir/zulu ]
        then
                echo "zuluinit: cannot find the zulu driver module."
                exit 1
        fi
fi

err=`modload /platform/$plat/kernel/$drvdir/zulu 2&gt;&amp;1`
if [ $? -ne 0 ]
then
        echo "zuluinit: Problems loading zulu driver: $err"
        exit 1
fi

#
#  ucode download error flag - a non-zero flag means there was a failure
#
err_flag=0

#
#  Perform device initialization if the Fcode PROM is not
#  able to do it (i.e. "zulu-idprom-mode" property is present)
#  NOTE: This assumes that all Zulus are at the same Fcode rev level
#
#  Assume that Fcode does not do initialization, since "zulu-idprom-mode"
#  is not published yet.
#
if [ -f /usr/sbin/zuludaemon ] ; then

        for inst in $devs ; do
                #
                # TEMPORARILY use zulu_init as a surrogate for the FCode
                # PROM.  This code should be yanked when all machines
                # have an FCode PROM
                #
                prtconf -vp | grep convolve-id &gt; /dev/null 2&gt;&amp;1
                if [ $? -ne 0 ] ; then
                        zulu_init -dev /dev/fbs/${inst} -no_ucode &gt; &#92;
                            /var/tmp/zulu_init.log
                fi

                /usr/sbin/zuludaemon -dev /dev/fbs/${inst} &gt;/dev/console  2&gt;&amp;1 &amp;
        done
else
        err_flag=1
fi

#
#  Check to see if ucode download succeeded for all devices
#
if [ $err_flag -ne 0 ] 
then
        exit 1
fi
exit 0


---=[ /etc/rc2.d/S93cacheos.finish ]=-------------------------------------

#!/sbin/sh
#
# Copyright (c) 1996-1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)cacheos.finish     1.9     97/12/08 SMI"

if [ "x`/usr/lib/fs/cachefs/cfsfstype -r 2&gt;/dev/null`" = xcachefs ]; then
        if [ -f /.autoinstall/postinstall ]; then
                mv /.autoinstall/postinstall /.autoinstall/postinstall.done
                /sbin/sh /.autoinstall/postinstall.done
        fi
fi


---=[ /etc/rc2.d/S94ncalogd ]=--------------------------------------------

#!/sbin/sh 
#
# Copyright (c) 1998-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)ncalogd    1.3     01/11/30 SMI"

# Default location for script
ncalogd=/etc/init.d/ncalogd
success=1

# Default config values used by script
ncalogdconf=/etc/nca/ncalogd.conf
ncakmodconf=/etc/nca/ncakmod.conf

isValidFile() {
        # Check if file exists
        if [ ! -f $1 ]
        then
                # Create subdirectories
                logd_dir=`/usr/bin/dirname $1`
                if [ ! -d "$logd_dir" ]; then
                        /usr/bin/mkdir -m 0755 -p $logd_dir &gt; /dev/null 2&gt;&amp;1
                        if [ $? != 0 ]; then
                                echo "Error: $ncalogd: unable to" &#92;
                                    "create directory $logd_dir"
                                return 1
                        fi
                fi
                # Create the log file
                touch $1
                if [ $? != 0 ]; then
                        echo "Error: ${ncalogd}: unable to create file $1"
                        return 1
                fi
        fi

        # test if valid local file
        df -l $1 &gt; /dev/null 2&gt;&amp;1
        if [ $? != 0 ]; then
                echo "Error: $ncalogd: $1 is not a local file system"
                return 1
        fi
        return 0
}

isValidDev() {
        # Check if device is valid
        fsck -m $1 &gt; /dev/null 2&gt;&amp;1
        case $? in
        36 | 39 )
                return 0
                ;;
        0 | 32 | 33 | 40 )
                echo "Error: $ncalogd: refusing to overwrite filesystem on $1"
                return 1
                ;;
        * )
                echo "Error: $ncalogd: $1 is an invalid device"
                return 1
                ;;
        esac
}

case "$1" in
'start')
        if [ ! -f $ncalogdconf ]; then
                # If configuration file is missing, just exit
                exit 0
        fi

        . $ncalogdconf

        # Default is "disabled" so we want to exit
        [ "x$status" != "xenabled" ] &amp;&amp; exit 0

        . $ncakmodconf

        # Default is "disabled" so we want to exit
        [ "x$status" != "xenabled" ] &amp;&amp; exit 0

        for i in $logd_path_name; do
                # make sure that specified logfile is not a directory
                if [ -d $i ]; then
                        echo "Error: $ncalogd: $i is a directory"
                        continue
                elif [ -b $i -o -c $i ]; then
                # Check if file is a device
                        isValidDev $i || continue
                else
                        isValidFile $i || continue
                fi

                # Finally, set the specified file as a NCA log file
                /usr/sbin/ndd -set /dev/nca nca_log_file $i
                success=0
        done

        if [ $success = 0 ]; then
                [ "x$logd_file_size" != "x" ] &amp;&amp; &#92;
                    /usr/sbin/ndd -set /dev/nca nca_log_size $logd_file_size
                /usr/sbin/ndd -set /dev/nca nca_logging_on 1
        fi
        ;;

'stop')
        . $ncakmodconf

        if [ "x$status" = "xenabled" ]; then
                /usr/sbin/ndd -set /dev/nca nca_logging_on 0
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S95IIim ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1999 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)IIim       1.10    03/09/04 SMI"

case "$1" in
'start')
        is_priv_port=`/usr/sbin/ndd /dev/tcp tcp_extra_priv_ports | /usr/bin/grep -w 9010`
        if [ ! -n "$is_priv_port" ]; then
           /usr/sbin/ndd -set /dev/tcp tcp_extra_priv_ports_add 9010
        fi
        if [ -x /usr/lib/im/htt ]; then
                /usr/lib/im/htt -port 9010 -syslog -message_locale C &gt;/dev/null 2&gt;&amp;1 &amp;
        fi
        ;;

'stop')
        /usr/bin/pkill -TERM -x -u 0 htt
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S95lwact ]=----------------------------------------------

#!/sbin/sh
#
#  lwact_init -- rc file to start the logtime process
#
#######################################################################
# Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.
#######################################################################
#
# "@(#)lwact_init $Revision: 337 $ $Date: 2010-06-29 09:11:30 -0600 (Tue, 29 Jun 2010) $"

BASEDIR=`pkginfo -l SUNWlwact | grep "BASEDIR:" | awk '{print $2}'`
PATH=/usr/sbin:/usr/bin:/sbin:$BASEDIR/bin:.

# &lt;CR:6666025&gt;,&lt;CR:6667726&gt;
strings /proc/$$/psinfo| egrep "^lwact$" &gt; /dev/null 2&gt;&amp;1
ISMANUAL=$?

case "$1" in
'start')
        if [ "$ISMANUAL" -ne 0 ]; then
          logtime -B
          STATUS=$?
          if [ -f /var/spool/locks/.LCK.tictimed ]; then
            rm -f /var/spool/locks/.LCK.tictimed
          fi
          if [ "$STATUS" -eq 0 ]; then
            /usr/sbin/init q
          fi
        else
          # lets check if we already have tictimed running
          # and print the message accordingly
          ps -eaf | grep tictimed | grep -v grep &gt;/dev/null 2&gt;&amp;1
          if [ $? -ne 0 ];then
                echo "Attempting to start LWACT.Respawning inittab."
          else 
                echo "LWACT is already running."
          fi
          /usr/sbin/init q
        fi
        exit 0
        ;;

'stop')
        if [ -f /var/spool/locks/.LCK.tictimed ]; then
          spid=`/usr/bin/cat /var/spool/locks/.LCK.tictimed`
          rm -f /var/spool/locks/.LCK.tictimed
          if [ "$spid" -gt 0 ]; then
            kill -TERM $spid
          fi
        fi
        if [ "$ISMANUAL" -ne 0 ]; then
          logtime -H
        else
                echo "LWACT is going down."
        fi
        exit 0
        ;;

*)
        echo "usage: /etc/init.d/lwact {start|stop}"
        exit 1
        ;;
esac


---=[ /etc/rc2.d/S95networker ]=------------------------------------------

#!/bin/sh
# installed by postinstall on Mon Feb  5 23:39:26 GMT 2007
case $1 in
'start')
(echo 'starting NetWorker daemons:') &gt; /dev/console
if [ -f /usr/sbin/nsrexecd ]; then
        (/usr/sbin/nsrexecd; /bin/sleep 15) &gt; /dev/console 2&gt;&amp;1
        (echo ' nsrexecd') &gt; /dev/console
fi
if [ -f /usr/sbin/lgtolmd ]; then
        (/usr/sbin/lgtolmd -p /nsr/lic -n 1) &gt; /dev/console 2&gt;&amp;1
        (echo ' lgtolmd') &gt; /dev/console
fi
if [ -f /usr/sbin/nsrd -a ! -f /usr/sbin/NetWorker.clustersvr ]; then
        (/usr/sbin/nsrd) &gt; /dev/console 2&gt;&amp;1
        (echo ' nsrd') &gt; /dev/console
fi
        ;;
'stop')
(echo 'stopping NetWorker daemons:') &gt; /dev/console
if [ -f /usr/sbin/nsr_shutdown ]; then
        if [ -f /usr/sbin/NetWorker.clustersvr ]; then
                (/usr/sbin/nsr_shutdown -c -a -q) &gt; /dev/console 2&gt;&amp;1
                (echo ' nsr_shutdown -c -a -q') &gt; /dev/console
        else
                (/usr/sbin/nsr_shutdown -a -q) &gt; /dev/console 2&gt;&amp;1
                (echo ' nsr_shutdown -a -q') &gt; /dev/console
        fi
fi
        ;;
*)
echo "usage: `basename $0` {start|stop}"
        ;;
esac


---=[ /etc/rc2.d/S95svm.sync ]=-------------------------------------------

#!/bin/sh
#
#pragma ident   "@(#)svm.sync.sh        1.5     04/03/12 SMI"
#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# SUNWmd.sync
#
#       Metadisk driver run-level 2 startup/shutdown.

DEVFSADM=/usr/sbin/devfsadm
METADEVADM=/usr/sbin/metadevadm
METASYNC=/usr/sbin/metasync
METADEV=/dev/md/admin
MDMONITORD=/usr/sbin/mdmonitord
METASET=/usr/sbin/metaset
TMPFILE=/var/run/metaset.$$

print_verbose()
{
        echo "Unable to resolve unnamed devices for volume management."
        echo "Please refer to the Solaris Volume Manager documentation,"
        echo "Troubleshooting section, at http://docs.sun.com or from"
        echo "your local copy."
}

resolve_auto_take_sets()
{
        if [ -x $METASET ]; then
                # Fixing up of the ctd names for devices in auto take
                # sets relies heavily on the output of the metaset
                # command. Any change to the output of the metaset command
                # should modify this script as well in order ensure nothing
                # breaks
                #
                # The following command saves all of the auto-take set names
                # into the TMPFILE
                name_str=`gettext "Set name"`
                mn_str=`gettext "Multi-owner"` 
                $METASET | /bin/nawk -F ' |&#92;t|,' -v snm="$name_str" &#92;
                    -v mstr="$mn_str" '$0 ~ snm { &#92;
                    if (index($0, mstr) == 0) print $4 &#92;
                }' &gt; $TMPFILE 2&gt;&amp;1

                if [ -s "$TMPFILE" ]; then
                        localised_string=`gettext "Yes (auto)"`
                        for i in `cat $TMPFILE`; do
                                $METASET -s $i | grep "$localised_string" &#92;
                                    &gt; /dev/null 2&gt;&amp;1
                                if [ $? -eq 0 ]; then
                                        $METADEVADM -l -r -s $i
                                        error=$?    
                                        case $error in
                                        0|2)    ;;
                                        3)      print_verbose
                                                ;;
                                        *)      echo "$METADEVADM &#92;
                                                -r failure $error."
                                                ;;
                                        esac
                                fi
                        done
                        /usr/bin/rm -f $TMPFILE
                fi
        fi
}

case "$1" in

'start')
        if [ -s /kernel/drv/md.conf ] &amp;&amp; &#92;
            grep '^mddb_bootlist' /kernel/drv/md.conf &gt;/dev/null 2&gt;&amp;1; then
                if [ -x $METADEVADM -a -x $METASYNC -a -c $METADEV ]; then
                        $METADEVADM -l -r
                        error=$?
                        case $error in
                        0|2)    ;;
                        3)      echo "Executing devfsadm"
                                $DEVFSADM
                                devfsadmerror=$?
                                if [ $devfsadmerror = 0 ]; then
                                        echo "Executing metadevadm -r"
                                        $METADEVADM -l -r
                                        error=$?
                                fi
                                if [ $devfsadmerror != 0 -o $error = 3 ]; then
                                        print_verbose
                                elif [ $error != 0 -a $error != 2 ]; then
                                        echo "$METADEVADM -r failure $error."
                                fi      
                                ;;
                        *)      echo "$METADEVADM -r failure $error."
                                ;;
                        esac

                        resolve_auto_take_sets

                        $METASYNC -r
                        error=$?
                        case $error in
                        0)      ;;
                        *)      echo "Unknown $METASYNC -r failure $error."
                                ;;
                        esac
                        if [ -x $MDMONITORD ]; then
                                $MDMONITORD 
                                error=$?
                                case $error in
                                0)      ;;
                                *)      echo "Could not start $MDMONITORD. &#92;c"
                                        echo "Error $error."
                                ;;
                                esac
                        fi
                fi
        fi
        ;;

'stop') 
        /usr/bin/pkill -HUP -u 0 'mdmonitord'
        ;;

*)      echo "Usage: $0 { start | stop }"
        ;;

esac


---=[ /etc/rc2.d/S98efcode ]=---------------------------------------------

#!/sbin/sh
#
# Copyright 2000-2003 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)efcode     1.5     03/08/11 SMI"

case "$1" in
'start')
        if /usr/bin/pgrep -x -u 0 -P 1 efdaemon &gt;/dev/null 2&gt;&amp;1; then
                echo "$0: EFCode Interpreter is already running"
                exit 0
        fi
        if [ -x /usr/lib/efcode/sparcv9/efdaemon ]; then
                PLATFORM=`uname -i`
                if [ $PLATFORM = "SUNW,UltraSPARC-IIi-Netract" -o &#92;
                     $PLATFORM = "SUNW,UltraSPARC-IIe-NetraCT-40" -o &#92;
                     $PLATFORM = "SUNW,UltraSPARC-IIe-NetraCT-60" -o &#92;
                     $PLATFORM = "SUNW,Sun-Fire" -o &#92;
                     $PLATFORM = "SUNW,Sun-Fire-15000" -o &#92;
                     $PLATFORM = "SUNW,Sun-Fire-880" -o &#92;
                     $PLATFORM = "SUNW,Sun-Fire-V890" -o &#92;
                     $PLATFORM = "FJSV,GPUZC-L" -o &#92;
                     $PLATFORM = "FJSV,GPUZC-M" ]; then
                        /usr/lib/efcode/sparcv9/efdaemon 2&gt; /dev/null
                fi
        fi

        ;;

'stop')
        /usr/bin/pkill -x -u 0 -P 1 efdaemon
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S98fc-cache ]=-------------------------------------------

#!/sbin/sh
#
# ident "@(#)fc-cache.init      1.2     04/06/10 SMI"
#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

# Build cache files for fontconfig to speed startup of fontconfig
# clients such as J2SE 1.5 and GNOME 2.4 and later versions

case "$1" in
'start')
    if [ -x /usr/bin/fc-cache ] ; then
        /usr/bin/fc-cache &amp;
    fi
    if [ ! -f /var/tmp/stsf/stsf.pfc -a -x /usr/lib/ST/stfontserverd ] ; then
        /usr/lib/ST/stfontserverd
    fi
    ;;

'stop')
    exit 0
    ;;
*)
    echo "Usage: $0 { start | stop }"
    exit 1
    ;;
esac
exit 0


---=[ /etc/rc2.d/S98sshd-quest ]=-----------------------------------------

#! /sbin/sh
#-- This service init file generated by polypkg

        pidfile="/var/tmp/sshd-quest.pid"
        stop_signal="15"
        svc="sshd-quest"

        # generated command to run sshd-quest as a daemon process
        pp_exec () { /opt/quest/sbin/sshd -D &amp; echo $! &gt; $pidfile; }

        # returns true if $svc is running
        pp_running () {
            test -r "$pidfile" &amp;&amp;
            read pid junk &lt; "$pidfile" &amp;&amp;
            test ${pid:-0} -gt 1 &amp;&amp;
            kill -0 "$pid" 2&gt;/dev/null
        }

        # prints a message describing $svc's running state
        pp_status () {
            if pp_running; then
                echo "service $svc is running (pid $pid)"
                return 0
            elif test -f "$pidfile"; then
                echo "service $svc is not running, but pid file exists" 
                return 2
            else
                echo "service $svc is not running" 
                return 1
            fi
        }

        # starts $svc
        pp_start () {
            if pp_running; then
                echo "service $svc already running" &gt;&amp;2
                return 0
            fi
            echo "starting $svc... &#92;c"
            if pp_exec; then
                echo "done."
            else
                echo "ERROR."
                exit 1
            fi
        }

        # stops $svc
        pp_stop () {
            if pp_running; then
                echo "stopping $svc... &#92;c"
                if kill -$stop_signal $pid; then
                    rm -f "$pidfile"
                    echo "done."
                else
                    echo "ERROR."
                    return 1
                fi
            else
                echo "service $svc already stopped" &gt;&amp;2
                return 0
            fi
        }

        umask 022
        case "$1" in
            start)   pp_start;;
            stop)    pp_stop;;
            status)  pp_status;;
            restart) pp_stop &amp;&amp; pp_start;;
            *)       echo "usage: $0 {start|stop|restart|status}" &gt;&amp;2; exit 1;;
        esac


---=[ /etc/rc2.d/S99audit ]=----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)audit      1.6     01/03/27 SMI"

case "$1" in
'start')
        if [ -f /etc/security/audit_startup ]; then
                /etc/security/audit_startup
                /usr/sbin/auditd &amp;
        fi
        ;;
 
'stop')
        if [ -f /etc/security/audit_startup ]; then
                /usr/sbin/audit -T
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S99dtlogin ]=--------------------------------------------

#!/bin/sh
#
# "@(#)dtlogin.rc.src 1.4 94/08/11
#
# This version of the dtlogin.rc script can be used on the Solaris(TM) 
# operating system to initiate CDE tasks such as starting the dtlogin 
# process. 
#
#  Common Desktop Environment
#
#  (c) Copyright 1993, 1994 Hewlett-Packard Company
#  (c) Copyright 1993, 1994 International Business Machines Corp.
#  (c) Copyright 1993, 1994 Sun Microsystems, Inc.
#  (c) Copyright 1993, 1994 Novell, Inc.
#
# When placed in the /etc/rc2.d directory and named appropriately, such as 
# "S99dtlogin", this script will automatically start the dtlogin window 
# after the Solaris(TM) system boots to its multi-user level.
#
# This script is also called indirectly by the CDE dtconfig command.

mode=$1

usage_error() {
      echo "  $0 start             (start dtlogin process)"
      echo "  $0 stop              (stop dtlogin process)"
      echo "  $0 reset             (reset dtlogin process)"
      echo "  $0 update_printers   (update print actions)"
      echo " "
}

if [ ! -d /usr/bin ]
then                    # /usr not mounted
        exit 1
fi

set `/usr/bin/id`
if [ $1 != "uid=0(root)" ]; then
        echo "$0: must be run as root"
        exit 1
fi


# update_printers() 
#
# Add print actions to workstation's database for all printer's known
# to this workstation if action is not already present in the database.

update_printers() {
   if [ -x /usr/dt/bin/dtprintinfo ] ; then
            /usr/dt/bin/dtprintinfo -populate &amp;
   fi
}

#
# Find login server pid from the process tree
#
login_server_pid()
{
  grep=/usr/bin/grep
  ps=/usr/bin/ps
  cut=/usr/bin/cut
  awk=/usr/bin/awk

# In following grep for "dtlogin" processes, explictly exclude any matches 
# on this shell file named "dtlogin.rc"

  $ps -u 0 -l | $grep -v dtlogin. | $grep dtlogin | $cut -c1-24 | $awk '{print $4 " " $5}' |
  while read pid ppid; do
    parent_login_ps=`$ps -p $ppid | $grep dtlogin`
    if [ -z "$parent_login_ps" ]; then
      echo "$pid"
      break
    fi
  done
}

get_login_server_pid()
{
        if [ -x /usr/bin/pgrep ]
        then
                /usr/bin/pgrep -u 0 -P 1 -x dtlogin
        else
                login_server_pid
        fi
}

kill_dtlogin()
{
        if [ "$1" != "" ]
        then
                SIGNAL=-$1
        fi

        if [ -x /usr/bin/pkill ]
        then
                /usr/bin/pkill $SIGNAL -u 0 -P 1 -x dtlogin
        else
#               get dtlogin pid

                dtlogin_pid=`login_server_pid`

#               kill dtlogin process

                if [ "$dtlogin_pid" != "" ] ; then
                        /usr/bin/kill $SIGNAL $dtlogin_pid
                fi
        fi
}

case "$mode" in

'start')
        update_printers

        if [ -x /usr/dt/bin/dtlogin ] ; then
                /usr/dt/bin/dtlogin -daemon &amp;
        fi
        ;;


'stop')         
        kill_dtlogin
        ;;

'reset')        
        kill_dtlogin HUP
        ;;

'update_printers')      
        update_printers
        ;;

'get_server_pid')       
        get_login_server_pid
        ;;

*)
        usage_error
        exit 1
        ;;
esac

exit 0


---=[ /etc/rc2.d/S99rcapd ]=----------------------------------------------

#!/sbin/sh
#
# Copyright 2003 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Start or stop the Resource Capping Daemon.
#
#ident  "@(#)rcapd      1.1     03/05/12 SMI"

case "$1" in
start)
        [ -x /usr/lib/rcap/rcapd -a -f /etc/rcap.conf ] || exit 0
        /usr/lib/rcap/rcapd
        ;;

stop)
        /usr/bin/pkill -x -u 0 rcapd
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc2.d/S99sneep ]=----------------------------------------------

#!/bin/sh 

# Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.

# @(#) sneep $Revision: 623 $ $Date: 2011-02-15 13:19:36 -0700 (Tue, 15 Feb 2011) $

# Set and retrieve platform (chassis) serial number 
# using system EEPROM.
# Can also be used to store and retrieve other things from EEPROM
# such as asset tags, contact information, and serial numbers
# for attached storage.
#
# Also attempts to use other sources for serial number
# including hardware-based mechanisms such as "prtdiag" and "smbios",
# configuration-based mechanisms such as the "explorer" and "CST"
# configurations, and (potentially) hybrid mechanisms
# such as serial data pulled from ILOM or System Controllers and stored
# in "explorer" output archives.
#
# Updates the serial number in the explorer and/or CST
# configuration file(s) if possible to simplify maintenance of
# these configuration items.

# Optionally allows the use of a simulation of the
# SMS command line interface
# on systems which do not have SMS or FRUID .
#
#   The "native" interface
#       sneep -s serialnumber   # put serial number in EEPROM
#       sneep                   # retrieve serial numnber
#       sneep -t tag -s setting # save entry in eeprom for "tag" with "value"
#       sneep -t tag            # retrieve "value" from eeprom for "tag"
#
#  The SMS 1.4 interface for serial numbers
#       showplatform -p csn     # print serial number
#       setcsn -c serial        # put serial number in EEPROM
#
# Stores the system serial number in the nvramrc as a FORTH "print" command :  
#       ." ChassisSerialNumber 1234ABCD " cr
# Note: this does not require OBP variable use-nvramrc? to be "true"
#       but if true, OBP will print the serial number while booting
#
FullProg=$0             # save program pathname
Prog=`basename $0`      # save program name

# External version used in package, docs, usage
# note: the makefile alters the release_version keyword below
# which is the release used in the package and docs.
# The Revision is the internal file revision from SCCS
version="Release 2.11"

#               %A% %G% %U%
#               michael.shon@sun.com    2004/01

#       Use of FORTH "print" to store values:
#               bob.hilliard@sun.com   jacob.kirsch@sun.com

NULLFILE=/dev/null

# enable tracing within functions
tracing=false

# Indicator that tells if an attempt was made to update eeprom
# It is the deciding factor for updating the current boot archive
#       call bootadm update-archive if the indicator is true
#       do not call bootadm update-archive if it is false.
eeupdated=false

case "$-" in    # check command-line options
        *x*)    tracing=true            # check for tracing flag "x"
                traceflag="-x"          # used when sneep is called from sneep
                NULLFILE=/dev/tty       # see stderr when tracing
                ;;
esac

                
errmsg()        # emit error message on stderr
{
        echo "$@" 1&gt;&amp;2
}


# support for testing and simulation



show_dataflow() # when tracing, we can see the data flow 
{               # into the variable before it gets passed on

        $tracing &amp;&amp; set -x

        sd_dataflow=`cat`
        echo "$sd_dataflow"
}

        

: SIMULATION=$SIMULATION  SIMBASE=$BASE EXPLO_BASE=$EXPLO_BASE
SIMULATION=${SIMULATION:-false}

case "$SIMULATION" in
        true ) 
                # ZONESIM allows us to test code paths for non-global zones
                case "$ZONESIM" in
                        "" ) ZONEPATH="" ;;     # null: not simulating a zone
                        */ ) ;;                     # have trailing "/"
                        * )  ZONESIM="$ZONESIM"/ ;; # add trailing "/"
                esac

                if test -z "$EXPLO_BASE" ; then
                        # simulation for this domain
                        explorer_sim=false
                        SIMBASE=${SIMBASE:-sim} # use known simulation data
                        ZONEPATH="$ZONESIM"     # use separate zone data
                else
                        explorer_sim=true
                        # get simulation data from expanded exlorer 
                        # at $EXPLO_BASE
                        SIMBASE=$EXPLO_BASE
                        ZONEPATH=""     # use same explorer data for zone sim
                fi

                # zone data goes in hierarchy for zone under base
                # e.g.  sim/zonename/etc/default/SUNWsneep

                SIMBASE=$SIMBASE$ZONEPATH
                if test ! -d $SIMBASE ; then
                        errmsg Cannot locate directory for simulation data &#92;
                                &#92;""$SIMBASE"&#92;"
                        exit 1
                fi

                : ZONESIM=$ZONESIM  # note any simulated zone
                : ; :  NOTE: SIMULATION ... zone=$ZONESIM 

                export SIMULATION
                # want to see things normally junked
                test -t 0 &amp;&amp; NULLFILE=/dev/tty || NULLFILE=/dev/fd/2
                ;;

        false ) 
                SIMBASE=""      # use real data based at filesystem root
                explorer_sim=false
                ;;      # nothing else special to do

        * ) errmsg SIMULATION must be true or false ; exit 1 ;;
esac


BACKUP=$SIMBASE/etc/default/SUNWsneep   # backup of sneep data in the filesystem
BACKUP_USER=root:other          # owner:group for $BACKUP
BACKUP_PERMS=u=rw,go=r          # permissions on $BACKUP
                                # must be writable for owner

# be sure of what we are getting by putting system directories first
#       especially for finding eeprom
PATH=/sbin:/usr/bin:/usr/sbin:$PATH
export PATH


get_hostid()    # return hostid for the current host or simulation
{
        if $SIMULATION ; then
                gh_rval=unknown_hostid
                expreadme=$SIMBASE/README
                if test -f $expreadme ; then
                        gh_info=`awk ' /^Hostid:/ {print $2}' $expreadme `
                        test ! -z "$gh_info" &amp;&amp; gh_rval=$gh_info
                fi
                echo ${HOSTID:-$gh_rval}        # environmental override
        else
                hostid
        fi
}

get_hostname()  # return hostname for the current host or simulation
{
        if $SIMULATION ; then
                gh_rval=unknown_hostname
                expreadme=$SIMBASE/README
                if test -f $expreadme ; then
                        gh_info=`awk ' /^Hostname:/ {print $2}' $expreadme `
                        test ! -z "$gh_info" &amp;&amp; gh_rval=$gh_info
                fi
                echo ${HOSTNAME:-$gh_rval}      # environmental override
        else
                hostname
        fi
}



get_uname()     # return uname option desired or simulation
{               # simulation is way too much work !

        if $SIMULATION ; then
                : simulation follows
        else
                uname "$@"
                return 
        fi

        # simulate uname and various options
        # get much of it from README
        expfile=$SIMBASE/README
        if test -r "$expfile" ; then
                gu_platforms=`  # need uname -i
                        # explorer contains drv/platform/uname -i
                        # and maybe kernel/dev/uname -m 
                        kd=$SIMBASE/sysconfig/drv/platform
                        test -d $kd &amp;&amp; (cd $kd; echo *) 
                        # pass this to nawk later in variable
                `
                gu_all=`        
                        # get full uname -a for passing to nawk in variable
                        test -r $SIMBASE/sysconfig/uname-a.out &amp;&amp;
                                cat $SIMBASE/sysconfig/uname-a.out
                `
                # find uname values in README and output as several lines of
                # -&lt;option&gt; &lt;value&gt;
                gu_vals=` nawk -F:      -v platforms="$gu_platforms" &#92;
                                        -v uname_a="$gu_all" &#92;
                        '
                        /^Release/ { r = $2 ; print "-r " r}
                        /Kernel architecture/ {m = $2; print "-m" m}
                        /Application archite/ {p = $2; print "-p" p}
                        /System Type/ { type = $2 ; if (type=="")type="unknown"}
                        END {
                                sub(m, "", platforms); # remove uname -m
                                print "-i " platforms;
                                print "-a " uname_a;
                        }
                        ' $expfile  
                ` # end of gu_vals=
        fi

        # extract desired uname option from gu_vals
        echo "$gu_vals" | sed -n "s/^$1 //p"
}

                                        


# important info about this machine
#       can be overridden for testing or simulation
#       by setting the appropriate environment variables
UNAME_I=${UNAME_I:-`get_uname -i`}      # platform name
UNAME_P=${UNAME_P:-`get_uname -p`}      # ISA or processor type
UNAME_A=${UNAME_A:-`get_uname -a`}      # items including some model  info
UNAME_M=${UNAME_M:-`get_uname -m`}      # hardware type (discouraged)

eeprom=eeprom           # use $eeprom to find standard eeprom program
pkginfo=/usr/bin/pkginfo

if $SIMULATION ; then

eeprom=eeprom_sim       #  use $eeprom to find  eeprom simulation

eeprom_sim()    # simulate eeprom
{
        ee_var="$1"     # variable to get or set


        ee_dir=$SIMBASE/sysconfig/
        ee_stdfile=$SIMBASE/sysconfig/eeprom.out        # standard eeprom file

        ee_sims=$SIMBASE/sysconfig/eeprom       # dir for variable files

        case "$ee_var" in
        *=*)    # set eeprom variable.
                # extract value - minor issue is that it loses
                #       trailing blanks and trailing blank lines 
                #       because of the backquoting
                ee_val=`echo "$ee_var" | 
                        sed -n -e '1s/^[0-9a-zA-Z_&#92;?&#92;-]*=//p' &#92;
                                -e '2,$p' `
                # extract variable name
                ee_var=`echo "$ee_var" | sed -n '1s/=.*//p' `

                #echo _________ eeprom variable is "$ee_var" 1&gt;&amp;2
                #echo _________ eeprom value is &#92;""$ee_val"&#92;" 1&gt;&amp;2
                #echo "$ee_val"'&#92;c' &gt; eeprom.$ee_var  # no newline

                # we will store the value in a file just for this variable
                # make sure there is a directory to keep the variable/file in.
                test -d $ee_sims || mkdir -p $ee_sims 

                # save the value into the file for this variable
                echo "$ee_val" &gt; $ee_sims/$ee_var
                ;;

        *)      # get eeprom variable
                ee_file=$ee_sims/$ee_var  # name of data file for this variable

                if test -s $ee_file ; then
                        : have a file for this variable: return the value
                        # returned string starts with &lt;var&gt;=
                        echo "${ee_var}=&#92;&#92;c"    
                        cat $ee_file
                        echo ""         # output always ends with newline
                else
                        : no file for $ee_var variable 
                        # look in standard eeprom.out file
                        ee_file=$ee_stdfile
                        if test ! -r $ee_file ; then
                                # no eeprom.out, so all data is unavailable
                                echo $ee_var: data not available.
                                return 0
                        fi

                        # Get the value from the eeprom.out file
                        # Allow for multiple lines of data.
                        ee_val=` nawk   -v eqpat="^$ee_var="  &#92;
                                        -v nopat="^$ee_var: data" &#92;
                        '
                                done == 1 { next }      # consume all data

                                # look for variable with "no data" message
                                $0 ~ nopat { print ; done = 1; next }

                                # look for &lt;variable&gt;=&lt;whatever&gt;
                                #       print first line and look for more
                                $0 ~ eqpat {
                                        print ; # print line of target variable
                                        printed = 1;
                                        next
                                }

                                # entry ends at next var with no data
                                # or next &lt;variable&gt;=&lt;value&gt;
                                printed &amp;&amp; $0 ~ ": data not av" { 
                                        done = 1 ; next 
                                }
                                printed &amp;&amp; $0 ~ "="     { done = 1 ; next }
                                
                                # print another line of desired variable
                                printed { print }
                                        
                        ' $ee_file `

                        if test ! -z "$ee_val" ; then
                                echo "$ee_val"
                        else
                                # didnt find line for variable in file
                                echo $ee_var: data not available.
                        fi
                fi
                return 0
                ;;
        esac
}




prtconf_sim()
{
        pf_file=$SIMBASE/sysconfig/prtconf-vp.out
        test -f $pf_file &amp;&amp; cat $pf_file
        return $?  # 0 if file, 1 if no file
}


prtdiag_sim()
{
        pd_file=$SIMBASE/sysconfig/prtdiag-v.out
        pd_statusfile=$pd_file.status

        test -f $pd_file &amp;&amp; cat $pd_file
        # normally would return $?  # 0 if file, 1 if no file

        # if there is an status file to go with the data file,
        # get the exit status code from the file and return it
        # as an exit value from prtdiag.
        #    Status file overrides default status of $PRTDIAG_STATUS

        if test -s $pd_statusfile ; then
              # we allow comments in the status file
              # numeric status code must start at the beginning of a line
              pd_status=`sed -n -e 's/#.*//'  -e '/^[0-9]/p' $pd_statusfile`
              pd_status=`echo $pd_status`       # remove extra whitespace
              test ! -z "$pd_status" &amp;&amp; return $pd_status
        fi

        # if there is a default status value for prtdiag, return it
        test ! -z "$PRTDIAG_STATUS" &amp;&amp; return $PRTDIAG_STATUS

        return 0 # otherwise always succeed                              
                 # so that caller does not wait forever for  success
}

smbios_sim()
{
        sm_file=$SIMBASE/sysconfig/smbios.out
        test -f $sm_file &amp;&amp; cat $sm_file
        return $?  # 0 if file, 1 if no file
}


ipmi_sim()
{
        ip_file=$SIMBASE/ipmi/ipmitool_fru.out
        test -f $ip_file  &amp;&amp; cat $ip_file 
        return $?  # 0 if file, 1 if no file
}


pkginfo=pkginfo_sim
pkginfo_sim()   # explorer-based simulation needs its own pkginfo
{
        if test $explorer_sim = false ; then
                : not from explorer files, so we can use real domain info
                /usr/bin/pkginfo "$@"
                return $?
        fi

        : simulate from explorer files
        ps_files=""
        ps_option=""    # main option to pkginfo
        ps_pkg=""       # package name, if any
        ps_quiet=false

                        # assume files for all pkgs
        ps_files="      $SIMBASE/patch+pkg/pkginfo-i.out 
                        $SIMBASE/patch+pkg/pkginfo-p.out "

        case "$1" in    # see if there is an option and/or package
                -* )    ps_option="$1" ; ps_pkg="$2" ;;
                *  )    ps_option="" ; ps_pkg="$1" ;;
        esac

        # set pattern to match based on  package name
        ps_pattern="$ps_pkg"
        test -z "$ps_pattern" &amp;&amp; ps_pattern='.*'        # any package matches
                                                # if none specified

        case "$ps_option" in
        -p ) ps_files=$SIMBASE/patch+pkg/pkginfo-p.out ;; # partial
        -i ) ps_files=$SIMBASE/patch+pkg/pkginfo-i.out ;; # full

        -q ) # want status : is the package installed
                test -z "$ps_pkg" &amp;&amp; return 1   # -q needs package
                ps_quiet=true
                ;;

        -r )    # want installation base for relocatable package
                ps_files=$SIMBASE/patch+pkg/pkginfo-l.out
                ps_hits=`nawk -v pat="^$ps_pattern&#92;$" '
                        /^[     ]*$/    { searching=0 ; next } 
                        $1 == "PKGINST:" &amp;&amp; $2 ~ pat {
                                searching = 1
                                next
                        }
                        searching &amp;&amp; $1 == "BASEDIR:" {
                                print $2
                                searching = 0
                        }
                        ' $ps_files 2&gt; $NULLFILE
                `  # end ps_hits=
                if test -z "$ps_hits" ; then
                        echo ERROR: information for &#92;"$ps_pkg&#92;" &#92;
                                        was not found 1&gt;&amp;2
                        return 1
                fi
                echo "$ps_hits"
                return 0

                ;;
        * ) echo ERROR: pkginfo_sim does not simulate "$ps_option" $ps_pkg
                return 1
                ;;
        esac

        : see if we can match some package info
        # first 2 lines of files are probably noise
        ps_hits=` nawk -v pat="^$ps_pattern&#92;$" '
                FNR == 1 &amp;&amp; /pkg/ { next } # noise
                FNR == 2 &amp;&amp; /[=]/ { next } # noise
                $2 ~ pat {print}' $ps_files &#92;
                        2&gt; $NULLFILE | sort -k 2,2
        ` # end ps_hits=

        test -z "$ps_pkg" &amp;&amp; ps_pkg="&lt;any package&gt;"

        if test ! -z "$ps_hits" ; then
                : found something
                $ps_quiet || echo "$ps_hits"    # show hits
                return 0
        else
                : no matches found for pkginfo $ps_option 
                case "$ps_option" in
                -p ) if test ! -z "$ps_pkg" ; then
                        echo ERROR: no partial information for &#92;
                                &#92;"$ps_pkg&#92;" was found
                        return 1
                     fi 
                     return 0   # not sure if this is right
                        ;;
                -i | -q )
                        $ps_quiet || echo ERROR: information &#92;
                                for &#92;"$ps_pkg&#92;" was not found 1&gt;&amp;2
                        return 1
                        ;;
                esac
        fi
        return 0
}

sms_showplatform_sim()
{
        test -r $SIMBASE/sf15k/showplatform.out &amp;&amp; 
                cat $SIMBASE/sf15k/showplatform.out &amp;&amp; return 0
        test -f $SIMBASE/sf15k/showplatform-p_csn.out &amp;&amp;
                cat $SIMBASE/sf15k/showplatform-p_csn.out
        return $?  # 0 if file, 1 if no file
}

sms_platforminfo_sim()
{
        # we need the SMS "PCD" platform_info file
        sps_info=$SIMBASE/sf15k/pcd/platform_info

        test -r $sps_info &amp;&amp; cat $sps_info
        return $?  # 0 if file, 1 if no file
}

logger()        # dont really send the message to syslog
{
        errmsg logger "$@"
}


fi      # end SIMULATION code block




# sneep uses 'tr' for several data format checks,
# but /usr/bin/tr does not work properly for UTF-8 locales .
# the XPG4 or XPG6 versions of tr are required for those locales.

# set $tr to a suitable version if possible
for tr in /usr/xpg6/bin/tr /usr/xpg4/bin/tr /usr/bin/tr
do
        test -x $tr &amp;&amp; break
done

# warn of possible problems with tr and locale
case "$tr" in
        /usr/bin/tr )   # have to use default version : check for problems

                trout=`echo abc | $tr '[:lower:]' '[:upper:]' 2&gt;&amp;1 `
                if echo "$trout" | grep -i "bad string" &gt; /dev/null ; then
                        errmsg NOTE: $tr does not support your locale,
                        errmsg "     " and no XPG4 alternative is available &#92;
                                        on this system. 
                        errmsg "  " Using locale C for sneep entries
                        LC_ALL="C"      export LC_ALL
                        LANG=C          export LANG
                fi
                ;;
esac


tab=`echo @ | $tr @ '&#92;t' `      # create a real tab character

# Get the current username.
# Hope that id in this locale returns something like
#       uid=0(root) gid=1(other)
# and split on the parenthesis
thisuser=`id | ( IFS="()" ; read x name y ; echo $name) `


log()   # send the command line parameters to syslog() with user details
{       # desirable for traceability of changes in audits
        # when invoked with -e option, logs the message to STDERR 
        # in addition of sending it to syslog().

        $tracing &amp;&amp; set -x
        case "$1" in -e) shift ; errmsg $Prog: "$@" ; esac 

        l_message="$@"  # the message to log is passed on the command line

        # syslog facility.level
        # This is not a daemon, but we need to be as sure as possible 
        # that this log data is saved, and facility user.* is often ignored.
        # User can override in environment variable SNEEP_SYSLOG
        SYSLOG_FAC_LEVEL=${SNEEP_SYSLOG:-daemon.notice}

        # figure out who is using the program if possible
        l_idprog=/usr/xpg4/bin/id
        if test -x $l_idprog ; then
                l_user=`$l_idprog -u -r -n`     # get real user as a word
        else
                l_user=$thisuser
        fi
        
        # since this program is generally run by root (often via sudo)
        # see if we can find out if we were someone else before we became root
        #       check SUDO_USER, USER, and LOGNAME

        l_moreuser=${SUDO_USER:-${USER:-$LOGNAME}}
        if test "$l_moreuser" = "$l_user" ; then
                l_userval="$l_user"
        else
                l_userval="$l_user:$l_moreuser"
        fi
        
        logger -p $SYSLOG_FAC_LEVEL $Prog:$l_userval "$l_message"
}


usage()
{
        usage_full=${1:-false}  # pass "true" for full usage

        cat 1&gt;&amp;2 &lt;&lt; ENDUSAGE

        Save and retrieve Chassis Serial Number  ( CSN ) using EEPROM.

 usage:

   $Prog [-aFhlTvVx] [-t tag] [-s setting ] [-P ds1:ds2...] &#92;&#92;
                                [-d default] [-o separator]
   setcsn -c serialnumber
   showplatform -p csn

        -h              This help message
        For detailed information, consult the man page. Try
                man -M /opt/SUNWsneep/man  $Prog

ENDUSAGE


}





# example of eeprom nvramrc output
#       |$ eeprom nvramrc
#       |nvramrc=devalias vx-rootdisk /sbus@3,0/SUNW,fas@3,8800000/sd@0,0:a
#       |devalias vx-rootmir /sbus@3,0/SUNW,fas@3,8800000/sd@1,0:a
#       |." ChassisSerialNumber FW02110044 " cr
#
# Note that if someone creates this entry without this script,
#       there may or may not be spaces before Chassis and after the serialnumber
#


# example of output format (from actual SC running SMS 1.4) :
#       |sc0:sms-user:&gt; showplatform -p csn
#       |     CSN:
#       |     ====
#       |     Chassis Serial Number: 353A00053
#
# This is the de-facto API .
# for something simpler, use the "native" command usage . See the usage()


PATH=/sbin:/usr/sbin:/usr/bin:$PATH     # find eeprom, avoid other PATH pollution
export PATH


# Solaris 10 has Zones.  Non-global zones have read-only eeprom access.
# This causes some problems, so figure out if this is running in a 
# non-global zone.  
# Succeed if running in a non-global zone, fail on anything else

ngzone()
{
        $tracing &amp;&amp; set -x

        # allow for simulation of non-global zone : claim to be a zone
        $SIMULATION &amp;&amp; test ! -z "$ZONESIM" &amp;&amp; return 0

        # use remembered return status $ngz_return after the first call
        # so that we dont have to call pkginfo repeatedly
        test ! -z "$ngz_return" &amp;&amp; return $ngz_return

        # all zones should have the zonename command; fail if missing
        test -f /sbin/zonename || return 1

        # if the command is present, make sure that it is the real thing
        # and we have the package SUNWzoneu

        ngz_return=1
        $pkginfo -q SUNWzoneu || return 1   # fail if no zone package
        
        ngz_name=`/sbin/zonename`
        : zone name is &#92;""$ngz_name"&#92;"
        case "$ngz_name" in
        global)         return 1 ;;     # fail on global zone
        "")             return 1 ;;     # something wrong or fake command
        *)              ngz_return=0 ;; # some other zone name : non-global !
        esac

        return $ngz_return
}


# nvramrc_internal : reformat nvramrc contents to multi-line format
# with simple formatting of sneep entries .
# This helps to deal with a Veritas VxVm 4.x change 
# which puts everything on one line in the nvramrc.
#       (changed back in VxVM Maintenance Patch 2 on sparc 
#        but (I think) not on Solaris x86) 
# The FORTH in OBP seems to deal with this OK, 
# but it is hard to read and make changes to,
# and seriously messes up customer nvramrc  programs.
#
# The multiline internal format makes it much easier to
# find, extract,  and generate sneep entries

nvramrc_internal()      # generate internal format for nvramrc
{
        # We insert tab characters as needed where we want a newline,
        # and convert those tabs to newlines later with "tr" .

        # Remove "nvramc=" leader, empty warning,
        # Change sequences of whitespace into single space
        # Put devalias entries on separate lines
        # Put "cd" commands on separate lines
        # Put sneep entries in standard form:
        #  &lt;startline&gt;&lt;TaGwOrD&gt;tag&lt;VaLuE&gt;value&lt;EnDvAlUe&gt;&lt;endofline&gt;
        # Putting each sneep entry on its own line allows us
        # to match the maximum length strings using .*

        $eeprom nvramrc 2&gt; $NULLFILE | show_dataflow |
                sed -e 's/^nvramrc=//' &#92;
                -e "/nvramrc:.*data not avail.*/d" &#92;
                -e "s/[ $tab][ $tab]*/ /g" &#92;
                -e "s/ *devalias/${tab}devalias/g" &#92;
                -e "s/&#92;.&#92;" */$tab&lt;TaGwOrD&gt;/g" &#92;
                -e "s/ *&#92;" cr */&lt;EnDvAlUe&gt;$tab/g"  &#92;
                -e "s/&#92;(&lt;TaGwOrD&gt;[^ ]*&#92;) /&#92;1&lt;VaLuE&gt;/g" &#92;
                -e "s/ cd /${tab}cd /g" &#92;
                        | tr '&#92;t'  '&#92;n' |
                        sed -e "/^[ $tab]*&#92;$/d"

}

nvramrc_external()      # put nvramrc data into external format
{                       # (encoding sneep data in comments)
                        # and clean up noise and extras

        # convert internal format to external format
        show_dataflow | 
        sed     -e 's/^nvramrc=//'      &#92;
                -e "/nvramrc:.*data not avail.*/d"  &#92;
                -e "s/[ $tab][ $tab]*/ /g" &#92;
                -e "/^[ $tab]*&#92;$/d"     &#92;
                -e 's/&lt;TaGwOrD&gt;/." /g'  &#92;
                -e 's/&lt;VaLuE&gt;/ /g'      &#92;
                -e 's/&lt;EnDvAlUe&gt;/ " cr/g' &#92;
                -e "s/[ $tab][ $tab]*/ /g" &#92;
        | case $UNAME_P in

        i386 | *86* )   
                # Solaris x86 / x64 platform
                # has simulated eeprom with only one line of nvramrc.
                # We will allow multiple things on one line
                # by changing newlines to spaces

                tr -s '&#92;n'    ' '       # convert newlines to spaces
                echo ""                 # end with newline
                ;;
        
        * )     # presumably sparc

                # Although for the most part, the OBP FORTH
                # seems to handle everything all on one line,
                # it is hard to read and maintain that way.
                # We prefer to leave entries on separate lines.
                
                cat -
                ;;
        esac
        return 0
}



get_eeprom_value()      # retrieve tag or value number from eeprom 
{                       #   - or return null if tag is missing
        $tracing &amp;&amp; set -x

        gev_tag=${1:-"$DESIREDTAG"}     # optional tag to look for
        gev_getval=${2:-true}           # default is to get value
                                        #       otherwise get tags
        gev_limit1=${3:-true}           # 1 line returned, unless false
        gev_eeonly=${4:-false}          # if true, use real eeprom only


        # Non-Global zones cannot write the eeprom, 
        # but we allow them to use the backup file 
        # to override the global eeprom or 
        # to save zone-specific data.

        # As a result, when asked for eeprom data,
        # we have to consult the backup file first,
        # unless the "eeonly" parameter says to use the real eeprom only.
        #       (this is used when called from the backup file manager)

        if ngzone &amp;&amp; test $gev_eeonly = false ; then

                # We have to look in the backup file first, 
                # and if we do not find the desired data, 
                # check the real eeprom.

                : zone : look in backup file first
                if $gev_getval ; then
                        backup get "$gev_tag" &amp;&amp; return 0
                else
                        backup gettags "$gev_tag" &amp;&amp; return 0
                fi

                # data not found in backup - check real eeprom
        fi

        # Real eeprom -
        #  whatever the "eeprom" command says is real,
        #       although actually simulated on x86


        # extract VALUE (or TAG) from &lt;." TAG VALUE " cr&gt;  
        # keep the last one if there are more than one (manual entry mistake?)
        #       We try to allow for some flexibility for whitespace 
        #       in  manually-entered tags.
        #

        if $gev_getval ; then
                # value is the substring between &lt;VaLuE&gt; and &lt;EnDvAlUe&gt;
                # in "internal form"
                gev_tagmatch='&lt;TaGwOrD&gt;'"$gev_tag"'&lt;VaLuE&gt;&#92;(.*&#92;)&lt;EnDvAlUe&gt;'
        else
                # tag is the substring between &lt;TaGwOrD&gt; and &lt;VaLuE&gt;
                # in "internal form"
                gev_tagmatch='&lt;TaGwOrD&gt;&#92;('"$gev_tag"'&#92;)&lt;VaLuE&gt;.*'
        fi

        if $gev_limit1 ; then
                gev_limiter="sed -n '&#92;$p' " # limit to final entry if duplicates
        else
                gev_limiter="cat"       # no limit on number of entries
        fi

        gev_val=`
                nvramrc_internal | show_dataflow |
                sed -n &#92;
                -e "s/$gev_tagmatch/&#92;1/p" &#92;
                        | eval $gev_limiter
        `

        test -z "$gev_val"  &amp;&amp; return 1 # no such tag in eeprom

        echo "$gev_val"                 # output value from eeprom
        return 0
}


set_eeprom_value()      # update eeprom with tag and value embedded in nvramrc
{
        $tracing &amp;&amp; set -x

        se_value="$1"           # value to set
        se_tag=${2:-$DESIREDTAG}  # eeprom tag with which to associate value
        se_inform=${3:-true}    # if "quiet", prevents informational messages
                                # (but still outputs critical errors)

        test "$se_inform" = quiet &amp;&amp; se_inform=false  # translate to boolean
        

        # make sure the new value can be used
        #       should not contain control characters (including tabs)
        #       cannot contain double quotes
        #         convert others to double quotes, look for double quotes
        #         (need '&#92;c' to prevent newline, which would become quote)
        #          '["*0]' means "a string of quotes of the proper length"

        se_tst=`echo "$se_value"'&#92;c' | $tr '[:cntrl:]'   '["*0]'  `
        if echo "$se_tst" | grep '"' &gt; /dev/null ; then
                errmsg The value for nvramrc cannot contain double quotes &#92;
                        or control characters .
                return 1
        fi

        # before we set it, get the current value for this tag 
        # making sure that we get only true eeprom data
        se_oldval=`get_eeprom_value "$se_tag" true true true`

        : set eeprom to &#92;"$se_val&#92;" , was &#92;"$se_oldval&#92;" 

        # If the new value is null, the value is to be removed.
        # If the old value is also null, (absent) this could indicate
        #       a mistake (incorrect tag)
        if test -z "$se_value" -a -z "$se_oldval" ; then
                $se_inform &amp;&amp; errmsg &#92;""$se_tag"&#92;" was not present in nvram .

                : no need to go on with setting the eeprom:
                # might even eliminate potential problems
                return 0        # success: tag has been "removed"
        fi

        # non-global zone cannot write eeprom: 
        # pretend that setting it succeeds,
        # both to reduce unhelpful error messages,
        # and to permit other changes to proceed (e.g. explorer and CST)
        #       Note that to properly virtualize the eeprom  for zones
        #       using the backup file, we should call "backup set" here,
        #       but backup set is always called anyway if set_eeprom succeeds

        ngzone &amp;&amp; : pretend that ngzone eeprom was set &amp;&amp; return 0


        # Real eeprom update

        # save full nvram contents in case of changes to format
        se_oldintern=`nvramrc_internal`  # save in internal form
                # save cleaned-up external form too
        se_oldextern=`$eeprom nvramrc 2&gt; $NULLFILE | nvramrc_external `

        # sneep entries in internal form:
        #  &lt;startline&gt;&lt;TaGwOrD&gt;tag&lt;VaLuE&gt;value&lt;EnDvAlUe&gt;&lt;endofline&gt;


        # remove the entry if it has changed, and
        # add it back in later (if necessary).
        #       This allows us to delete entries 
        #       by giving a null value.
        #
        #       Only remove if changed so that we
        #       can tell the difference between
        #       content changes and format changes,
        #       and optimize them.

        se_oldnvram="$se_oldintern"
        if test "$se_value" != "$se_oldval" ; then
                # remove old entry from nvramrc (if present)
                se_oldnvram=`echo "$se_oldintern" |
                        sed     -e "/^&lt;TaGwOrD&gt;$se_tag&lt;VaLuE&gt;/d" `
        fi


        # start building the new nvramrc contents
        # from the remaining old contents 

        se_newnvram="$se_oldnvram"

        # Only add the value to nvramrc if new value is non-null
        # and if the value changed.


        if test ! -z "$se_value" -a "$se_value" != "$se_oldval" ; then
                # The new, changed value is not null. replace it

                if test  -z "$se_oldnvram" ; then
                        # nvramrc was empty; put tag/value in as only entry

                        # instead of simple assignment, use same backquote
                        # method used for non-empty case for consistency
                        #    se_newnvram=".&#92;" $se_tag $se_value &#92;" cr"
                        se_newnvram=`
                           echo "&lt;TaGwOrD&gt;$se_tag&lt;VaLuE&gt;$se_value&lt;EnDvAlUe&gt;"
                        `
                else
                        # nvramrc was not empty ;
                        # add new serial entry to what was already there
                        se_newnvram=`   
                           echo "$se_oldnvram"
                           echo "&lt;TaGwOrD&gt;$se_tag&lt;VaLuE&gt;$se_value&lt;EnDvAlUe&gt;"
                        `
                fi
        fi

        # put nvramrc data into external format
        se_newnvram=`echo "$se_newnvram" | nvramrc_external `


        # If the old and new data is the same, dont bother.
        #
        #       We prefer to check the full eeprom contents
        #       rather than just the value for this tag,
        #       because conversion between internal and external
        #       formats may have had other desirable side effects
        #       like putting devalias entries on separate lines.
        
        if test "$se_newnvram" = "$se_oldextern" ; then
                $se_inform &amp;&amp; errmsg &#92;""$se_tag"&#92;" no change to eeprom.

                # no need to go on with setting the eeprom:
                # might even eliminate potential problems
                return 0        # no change, no failure
        fi


        # ready to update the eeprom:
        # perform safety checks

        if check_nvramrc_limits "$se_newnvram" ; then
                : reasonable entry for this eeprom
        else
                errmsg New entry exceeds eeprom nvramrc limitations .
                return 1
        fi


        # we are attempting a change in eeprom.
        # lets mark this attempt,immaterial of its success.
        # we will later refer to this indicator to decide on updating 
        # the current boot archive.
        eeupdated=true
        # 
        # update the eeprom
        #
        if $eeprom nvramrc="$se_newnvram" 2&gt; $NULLFILE
        then
                if test "$se_value" != "$se_oldval" ; then
                        log Changed $se_tag in EEPROM nvramrc &#92;
                        from &#92;"$se_oldval&#92;" to &#92;"$se_value&#92;"
                else
                        log Changed EEPROM nvramrc format &#92;
                          without changing $se_tag value
                fi
                        

                #
                # seems to have been successful: double-check result
                #

                se_newval=`get_eeprom_value "$se_tag" true true true `
                : v=&#92;""$se_value"&#92;"  nv=&#92;""$se_newval"&#92;"
                if test "$se_value" != "$se_newval" ; then
                        return 1        # old and new value dont match
                fi                      # fail
        else
                return 1        # failed to set nvramrc
        fi

        return 0                # successfully updated nvramrc
}


check_nvramrc_limits()
{
        $tracing &amp;&amp; set -x

        cnl_newentry="$1"

        cnl_rval=0              # return value: assume success
        cnl_checkoverride=false # check safety override true

        # set default value for maximum size of nvram contents
        cnl_maxsize=500         # by default, this is the most nvramrc we allow.
                                # Slightly more than 512 is available on Sparc2.
                                # Newer platforms generally provide more.
                                # overflow causes a drop into OBP, 
                                # or corruption of other EEPROM variables,
                                # and extreme cases can cause failure to boot

        # find out how big the given entry will be
        cnl_nsize=`echo "$cnl_newentry" | wc -c`

        # check for hardware platform limitations
        # uname -i returns something like "SUNW,Ultra-250" or "i86pc"
        case $UNAME_I in
        *)      # assume defaults are OK for any platform which we
                # do not specifically know of another restriction
                ;;
        esac

        # check for limitations of current host's ISA or processor type
        # uname -p returns something like "sparc" or "i386"
        case $UNAME_P in
        i386 | *386* | *x86* )
                # x86 platform has multiple restrictions (and no true eeprom)
                # The system won't boot if the emulated eeprom is too large, so
                cnl_maxsize=500         # this has tested OK on solaris10

                # Solaris 10 x86 at FCS could only accept one line for nvramrc .
                #  we assume that prior versions were just as restrictive
                cnl_nlines=`echo "$cnl_newentry" | wc -l`
                if test $cnl_nlines -gt 1 ; then
                        errmsg This platform is limited to one &#92;
                                entry in EEPROM nvramrc.
                        errmsg To store this entry, remove any others first .
                        cnl_rval=1
                fi
                ;;

        sparc)
                # Need more details on the hardware for sparc.
                # "uname -m", "arch", and "mach" are all discouraged,
                # but uname is preferred.

                case $UNAME_M in
                sun4 | sun4c | sun4d )
                        cnl_maxsize=500 ;;      # just over 500 available
                sun4u | sun4m ) 
                        cnl_maxsize=4000 ;;     # somewhat over 5000 available
                esac

                # V1280 and E2900 both use an EEPROM which is rather small
                #  system type is on first line, consume the rest
                case `prtdiagf -v |  sed -n 1p ` in
                        *1280 | *2900 )         cnl_maxsize=275 ;;
                esac

                case $UNAME_A in
                        *SUNW,Netra-T12 )       cnl_maxsize=275 ;; # V1280/E2900
                esac

                ;;

        *)      cnl_isa=$UNAME_P
                errmsg $cnl_isa : Unknown platform ISA or &#92;
                                        processor type "(from uname -p)" .
                cnl_errmsg=`echo Cannot know eeprom limitations from &#92;
                        uname -p of $cnl_isa .`

                cnl_checkoverride=true  # check for safety override
                cnl_rval=1              # otherwise fail
                ;;
        esac

        # make sure that the entry will safely fit in nvram

        # As the current size could already be more than the default,
        # we will allow as much as we already have.
        cnl_cursize=`$eeprom nvramrc 2&gt; $NULLFILE | 
                                sed 's/nvramrc=//' | wc -c`
        test $cnl_cursize -gt $cnl_maxsize &amp;&amp; 
                                cnl_maxsize=$cnl_cursize

        # make sure it doesnt exceed the maximum, 
        #       unless overridden by user
        if test $cnl_nsize -gt $cnl_maxsize ; then
                # new value is larger than the supposed maximum.
                errmsg EEPROM nvramrc may not be large enough .
                cnl_errmsg=`echo Overriding nvramrc size limit of &#92;
                        $cnl_maxsize to save $cnl_nsize characters .`

                cnl_checkoverride=true  # check for safety override
                cnl_rval=1              # otherwise fail
        fi
        
        if $cnl_checkoverride ; then
                # allow user to override, but log it if they do.
                if $override ; then
                        log -e Safety override option has been used:
                        log -e "$cnl_errmsg"
                        sleep 1 # allow syslog to process the messages
                        sync    # save any outstanding IO in case of crash
                        sleep 5 # let the IO complete

                        cnl_rval=0      # override chosen: must be OK
                fi
        fi

        return $cnl_rval
}
# Restart psncollector each time you set serial number to make PSN data consistent with Sneep
# CR 6726919 : restart SUNWpsn after updating serial
restart_psn()
{
        # Restart psncollector each time you set serial number to make PSN data consistent with Sneep
        # In solaris 10 and above restart psn service by using svcadm command
        # while in lower solaris version run the psncollector command

        OS_VER=`uname -r | nawk -F'.' '{print $2}'`
        PSNPATH="/usr/lib/inet/psncollector"    # psncollector path in solaris 8 and 9
        if pkginfo -q SUNWpsn ; then
                if [ "$OS_VER" -ge 10 ]; then
                         svcadm restart psncollector
                else
                         if [ ! -x "$PSNPATH" ]; then
                                PSN_BASEDIR=`pkgparam SUNWpsn BASEDIR`
                         fi
                         if [ -x $PSN_BASEDIR/$PSNPATH ]; then
                                # PSN 1.1.2 and higher gives  following output on success:
                                # Using /var/run
                                # Storing "serial"  to /var/run/psn
                                # While PSN 1.1.3 and higher outputs an emptyline on success.
                                # Ignore these success messages
                                $PSN_BASEDIR/$PSNPATH 2&gt;&amp;1 | egrep -v  'Using|Storing|^$'
                         fi
               fi
       fi
}

get_explorerconfig_serial()     # print serial entry from explorer config
{
        myid=`get_hostid`

        # look for EXP_SERIAL_&lt;hostid&gt;="&lt;serial&gt;"
        for expfile in  $explorer_configs
        do
                test -r $expfile || continue
                sed -n -e 's/"//g' -e "s/^EXP_SERIAL_${myid}=//p" $expfile
        done | tail -1          # keep only the last one if multiple
}

# Message included in explorer defaults file if created by sneep (RFE 00058)
new_explorer_message='
# Created by SUNWsneep so that explorer can obtain the Chassis Serial Number.
# Note that in order for explorer to execute successfully, several settings
# are necessary, which SUNWsneep does not provide.
# Be sure to run "explorer -g" to configure this file properly.
'

set_explorerconfig_serial()     # update explorer config files with serialnumber
{                               # return success if all existing files updated
                                # (still success if no files exist)

        ses_serial="$1"         

        myid=`get_hostid`
        ses_stat=0      # assume success: still OK if no explorer files present

        ses_hasexplorer=false   # assume that explorer is not installed
        $pkginfo -q SUNWexplo &amp;&amp; ses_hasexplorer=true   # for RFE 00058

        # set SERIAL config parameter in any and all explorer config files
        for expfile in  $explorer_configs
        do
                if test ! -f $expfile ; then
                        # No explorer defaults file present.

                        # RFE 00058: allow update even if no defaults file
                        # as long as explorer is installed.

                        if $ses_hasexplorer ; then
                                # make dir for defaults file if necessary
                                ses_expdir=`dirname $expfile`
                                mkdir -p -m 0755 $ses_expdir 2&gt; $NULLFILE

                                # try to create empty explorer defaults file
                                if touch $expfile 2&gt; $NULLFILE ; then
                                        # created explorer defaults file,

                                        # Provide initial comment.
                                        echo "$new_explorer_message" &gt; $expfile

                                        # fix permissions on file and dirs
                                        (
                                          chmod 0644 $expfile 
                                          chmod 0555 $ses_expdir $ses_expdir/..
                                          chown root:bin $ses_expdir &#92;
                                                                $ses_expdir/..
                                        ) 2&gt; $NULLFILE

                                        # continue as though $expfile
                                        # had already been present:
                                        # update with serial
                                else
                                        # file missing and cannot create it
                                        continue        # skip missing file
                                fi
                        else
                                continue        # missing file and explorer
                        fi
                fi

                # format of entry is 
                #       EXP_SERIAL_&lt;hostid&gt;="&lt;serial&gt;"
                ses_protoentry="EXP_SERIAL_${myid}="
                ses_newentry="$ses_protoentry&#92;"$ses_serial&#92;""

                ses_contents=`cat $expfile`     # capture entire file contents

                if grep "^$ses_newentry" $expfile &gt; $NULLFILE ; then
                        : entry already present: no need to update file
                        continue
                fi

                # check file for update by writing to it
                # ( "touch" is not enough as it may only change timestamp)
                if ( echo "$ses_contents" &gt; $expfile ) 2&gt; $NULLFILE ; then
                        : OK - we should be able to update the file
                else
                        errmsg Cannot update $expfile as $thisuser .
                        ses_stat=1
                        continue
                fi

                # get desired contents into $ses_contents

                if grep "^$ses_protoentry" $expfile &gt; $NULLFILE ; then
                        : different entry present
                        # get the old value, dropping any quotes
                        ses_oldserial=` 
                                sed -n  -e 's/"//g' &#92;
                                        -e "s/^$ses_protoentry//p" $expfile `

                        # change entry
                        ses_contents=`sed -e &#92;
                                  "s/^$ses_protoentry.*/$ses_newentry/" $expfile `
                else
                        : no entry present : append a new one to contents
                        ses_oldserial=""
                        ses_contents=`  echo "$ses_contents" ;
                                        echo ""
                                        echo &#92;# Serial number for hostid $myid
                                        echo "$ses_newentry" `
                fi

                # update the explorer config file
                if (echo "$ses_contents" &gt; $expfile)  2&gt; $NULLFILE ; then
                        : no problem updating
                else
                        ses_stat=1      # could not update $expfile
                fi
                log Changed Serial Number in $expfile &#92;
                        from &#92;"$ses_oldserial&#92;" to &#92;"$ses_serial&#92;"
        done 
        
        return $ses_stat
}


##########################################################
#
# Backup file interface
#


backup()        # save/retrieve tag and value from backup file
{               # if calling recursively, do it in subshell
                # to keep from reassigning "local" variables

        $tracing &amp;&amp; set -x 

        : backup "&lt;$1&gt; &lt;$2&gt; &lt;$3&gt;"
        bup_action="$1" # action is first parameter

        bup_tag="$2"            # this arg is notmally the tag
        bup_option1="$2"        # but some actions may have option passed here
                                # note that is is SAME arg as tag

        bup_val="$3"            # value for tag
        bup_option2="$3"        # possible additional argument
                                # SAME arg as bup_val


        # backup file format has (potentially) multi-line entries
        # each of the form :
        #       &lt;tag&gt;&lt;tab&gt;&lt;value&gt;
        #
        # Note that may be more flexible than the eeprom,
        # so the backup file may accept things which cannot be
        # put in the eeprom.  ( Avoid this )
        #
        # Note that because of this
        #   ****the eeprom and the backup may not match****
        #
        # but the backup will always have the "best" information.
        # Getting it from backup and putting back in eeprom will
        # put the best possible thing in eeprom that it can handle.

        case "$bup_action" in
        "")     errmsg Internal error: no directions for backup .
                return 1
                ;;
        
        setup)  
                #
                # Set up the backup file: take care with owner and perms
                #

                if touch $BACKUP 2&gt; $NULLFILE ; then
                        : $BACKUP is writable
                else
                        : Cannot update $BACKUP as $thisuser .
                        return 1
                fi

                # set permissions on existing file before 
                # we try to write it.
                test -f $BACKUP &amp;&amp; (
                        chown $BACKUP_USER $BACKUP
                        chmod $BACKUP_PERMS $BACKUP
                ) 2&gt; $NULLFILE
                return 0
                ;;

        init)   # set up initial contents of backup file
                if ( backup setup ) &amp;&amp; cp /dev/null $BACKUP 2&gt; $NULLFILE ; then

                        # put the hostid of this host in the backup file
                        # as check for valid file
                        echo "sneep hostid$tab`get_hostid`" &gt; $BACKUP

                        log $BACKUP successfully '(re)'initialized
                        return 0
                else
                        log -e $BACKUP : unable to initialize as user $thisuser
                        return 1
                fi
                ;;

        validate)       # make sure that $BACKUP is for this system
                        # NOTE: includes code from "get" below

                # if we know it is OK, save a lot of work
                test "$backup_status" = "backup_valid" &amp;&amp; return 0

                # validate has optional "fix" argument (true/false)
                #       true means attempt to fix any problem
                #               by reinitializing backup file
                #       false means return 1 quietly if problem found

                bup_fix=${bup_option1:-true}    # fix problems by default

                if test ! -r $BACKUP ; then
                        : missing or unreadable backup file
                        # return 1 if no fix wanted, OR fix unsuccessful
                        $bup_fix || return 1

                        ( backup init ) || return 1

                        backup_status=backup_valid
                        return 0        # backup now valid, even if empty
                fi

                # Backup file exists...
                # Retrieve value for hostid tag from the backup file
                #

                # return the value by stripping the tag and tab
                # from the relevant lines of the backup file

                bup_val=` sed -n "s/^sneep hostid$tab//p" $BACKUP `

                if test -z "$bup_val" ; then
                        : no hostid in backup
                        $bup_fix || return 1

                        log $BACKUP is incomplete 
                        bup_copy=$BACKUP.incomplete
                        if cp $BACKUP $bup_copy 2&gt; $NULLFILE ; then
                                log saved $BACKUP as $bup_copy
                        else
                                log -e unable to copy $BACKUP to $bup_copy &#92;
                                        as user $thisuser
                        fi

                        (backup init) || return 1

                        backup_status=backup_valid
                        return 0        # backup is OK now
                fi

                # got some hostid - is it the right one?
                if test "$bup_val" != `get_hostid` ; then

                        $bup_fix || return 1

                        log $BACKUP is from a system with ID &#92;"$bup_val&#92;"
                        # save original backup (from another system)
                        # in case we have to sort it out later
                        bup_copy=$BACKUP.$bup_val
                        if cp -p $BACKUP $bup_copy ; then
                                log saved $BACKUP as $bup_copy
                        else
                                log -e unable to save $BACKUP as $bup_copy&#92;
                                        as user $thisuser
                        fi

                        (backup init) || return 1 

                        backup_status=backup_valid
                        return 0        # backup is OK now
                fi
                : existing backup file seems to be valid
                backup_status=backup_valid
                return 0

                ;;

        invalidate )    # mark backup file invalid in this shell
                        # to avoid repeated log messages as we try to
                        # get various sneep parameters from backup file

                backup_status=backup_invalid

                        # have to do it this way because the problem is
                        # usually discovered in a subshell and setting
                        # the status variable when it is discovered
                        # has no effect when we return to the caller

                return 0
                ;;

        get)
                # silently fail if we know the backup cant be used
                test "$backup_status" = "backup_invalid" &amp;&amp;  return 1 

                # check the validity , be willing to hear about it and fix it
                if ( backup validate ) ; then
                        backup_status=backup_valid
                else
                        backup_status=backup_invalid    # avoid repeated checks
                        return 1
                fi

                #
                # Retrieve value for tag from the backup file
                #

                # return the value by stripping the tag and tab
                # from the relevant lines of the backup file

                bup_val=` sed -n "s/^$bup_tag$tab//p" $BACKUP `

                test -z "$bup_val" &amp;&amp; return 1          # fail if no value

                echo "$bup_val"         # return value
                return 0                # return success
                ;;

        gettags)
                # silently fail if we know the backup cant be used
                test "$backup_status" = "backup_invalid" &amp;&amp;  return 1 

                # check the validity , be willing to hear about it and fix it
                if ( backup validate ) ; then
                        backup_status=backup_valid
                else
                        backup_status=backup_invalid    # avoid repeated checks
                        return 1
                fi

        
                # return the tags by stripping the tab and value from 
                # the relevant lines.
                #       do NOT return tags like "sneep hostid"
                sed -n -e '/^sneep /d' -e "s/$tab.*//p" $BACKUP # return value
                return 0
                ;;

        set)
                if ( backup setup ) ; then
                        : should be able to update backup file
                else
                        errmsg Cannot update $BACKUP as $thisuser .
                        return 1
                fi

                # check for and repair any problems
                #       knowing from having already done successful setup
                #       that we can write the file
                if ( backup validate ) ; then
                        backup_status=backup_valid
                else
                        backup_status=backup_invalid    # avoid repeated checks
                        return 1
                fi


                bup_oldval=`(backup get "$bup_tag" )`

                # null values we always want to set (to erase the entry)
                # but non-null values we have to think about

                # think about whether to set value in non-global zone
                if test ! -z "$bup_val" &amp;&amp; ngzone ; then
                        # Non-global zones have readonly nvram access
                        # and we allow them to override the system eeprom
                        # by use of the backup file.
                        #
                        # However, we want to use the eeprom as much as
                        # possible, (particularly for Chassis Serial)
                        # so that most things only have to be saved 
                        # in the global zone  once to be seen in all zones.
                        #
                        # We only override when absolutely necessary
                        # so that there are fewer problems with redundancy.
                        # (The global zone's backup file serves as
                        #  full backup for the eeprom)
                        #
                        # To facilitate this, we do not put anything 
                        # in a zone's backup file which is 
                        # the same as the data in eeprom.

                        # In typical and rational use, this is fine.
                        # Still, it is possible for a zone to
                        # find that something has changed unexpectedly
                        # because it changed in the global zone after
                        # we chose NOT to save it in the local zone backup file.
                
                        # get value from eeprom and check for value match
                        # so that we dont have to save it redundantly.
                        # final "true" param makes sure that get_eeprom_value
                        # uses the real eeprom  only

                        bup_eeval=`get_eeprom_value "$bup_tag" &#92;
                                                        true true true  `
                        if test ! -z "$bup_eeval" -a "$bup_eeval" = "$bup_val" 
                        then
                                : no need to save $bup_tag data in eeprom
                                : because it is already in eeprom
                                : so we shall remove it from backup
                                bup_val=""      # null value removes
                        fi
                fi
                
                # dont update backup file if data has not changed
                test "$bup_val" = "$bup_oldval" &amp;&amp; return 0


                #
                # Update the backup file
                #


                # get all lines except those for $bup_tag and hostid
                # this deletes the old entry for $bup_tag, if any
                bup_other=`sed  -e '/^sneep hostid/d' &#92;
                                -e "/^$bup_tag$tab/d" $BACKUP`
                
                # empty the backup file
                cp /dev/null $BACKUP 2&gt; $NULLFILE || return 1

                # put the hostid of this host in the backup file
                # for boot-time autoload check
                echo "sneep hostid$tab`get_hostid`" &gt; $BACKUP

                # if there is a new value, put it in the backup file
                # as the first entry.
                # Each line of the value starts with &lt;tag&gt;&lt;tab&gt; .
                test ! -z "$bup_val" &amp;&amp; 
                        echo "$bup_val" | sed "s/^/$bup_tag$tab/" &gt;&gt; $BACKUP

                # put any other stuff back into the backup file
                test ! -z "$bup_other" &amp;&amp; echo "$bup_other" &gt;&gt; $BACKUP

                return 0        # update succeeded
                ;;
        esac
}

# This module is used to retrieve CSN from FUJITSU PRIMEPOWER devices, if available
# CSN in FUJITSU PRIMEPOWER machine is generally the output of command /opt/FJSVmadm/sbin/serialid
fserial_info()
{
        fs_action="$1"                  # get/set action
        fs_tag="${2:-$SERIAL_TAG}"      # optional tag
        fs_val="$3"     # value for tag  # optional value
        fs_name="fserial_info"          # name of the function
        FSERIAL_FILE="/opt/FJSVmadm/sbin/serialid" # Default path to run serialid command 


        case "$fs_action" in
        "")     errmsg Internal error: no action defined for $fs_name
                return 1
                ;;
        set)
                # cannot set value - read-only
                # but they dont have to know that
                return 0        # update succeeded
                ;;
        get)
                #
                # Retrieve value for fserial from the serialid command
                # only  SERIAL_TAG is possible

                test "$fs_tag" = $SERIAL_TAG || return 1

                # The default path for serialid command is /opt/FJSVmadm/sbin/serialid
                # We will also look into alternate path if it is not found in the default path

                if [ ! -x $FSERIAL_FILE ]; then
                        FSERIAL_BASEDIR=`pkgparam FJSVmadm BASEDIR 2&gt;$NULLFILE`
                        test -z "$FSERIAL_BASEDIR" || return 1
                        FSERIAL_FILE="$FSERIAL_BASEDIR/FJSVmadm/sbin/serialid"
                fi
                
                # sample output of the serialid command
                # /opt/FJSVmadm/sbin/serialid
                # serialid: 010061

                
                if [ -x $FSERIAL_FILE ]; then           # Check again to be sure in case of alternate path
                        if [ "$thisuser" = "root" ];then
                                fserial_out=`$FSERIAL_FILE 2&gt;$NULLFILE` #store the output of fserialid command 
                                if [ $? -ne 0 -o -z "$fserial_out" ]; then      
                                        log -e Unable to fetch serial number from fserial data source
                                        return 1
                                fi

                                # make sure we only take serial number from the line containing serialid
                                get_fserial=`echo "$fserial_out" | nawk '/serialid/  {print $2}'`       
                                if [ -n "$get_fserial" ]; then
                                        echo $get_fserial
                                        return 0        # success
                                else
                                        log -e serial number missing from output of $FSERIAL_FILE
                                fi
                        else
                                errmsg Please run $Prog as root to ensure correct serial number &#92;
                                                from fserial data source
                                return 1
                        fi
                fi
                return 1        #serialid command not present
                ;;
          *)
                errmsg Invalid action &#92;""$fs_action"&#92;" in $fs_name
                return 1
        esac
        return 1        
}

##########################################################
#
# SMS (System Management Services) interface for chassis serial data
#       works for SF12000 / SF15000  System controllers
#       Software-assisted "hardware" support
#               initially set by installer using SMS  setcsn -c &lt;serialnumber&gt;

sms_info()              # CSN from SMS if possible
{
        sms_action="$1"                 # get/set action
        sms_tag="${2:-$SERIAL_TAG}"     # optional tag
        sms_val="$3"    # value for tag  # optional value

        case "$sms_action" in
        "")     errmsg Internal error: no action for SMS .
                return 1
                ;;
        set)
                # cannot set value in SMS - read-only
                # but they dont have to know that
                #
                # We could pass this change along to SMS and setcsn,
                # but we treat CSN as if it was true hardware
                # because it should only be set once, at installation time.
                #
                # If it gets done again, it should be done deliberately
                # using SMS procedures.

                return 0        # update succeeded
                ;;
        get)
                #
                # Retrieve value for tag from the SMS
                #

                # only  SERIAL_TAG is possible
                test "$sms_tag" = $SERIAL_TAG || return 1

                sms_showplatform_serial
                return $?       # return status of sms_showplatform
                ;;
        esac
        return 0        # should never get here
}


sms_showplatform_serial()      # collect Chassis serial from SMS showplatform
{
        #root@SC0 # su sms-svc -c "/opt/SUNWSMS/bin/showplatform -p csn"
        #
        #CSN:
        #====
        #Chassis Serial Number: 226A20B7


        sms_csn=`

        if $SIMULATION ; then
                sms_showplatform_sim    # simulate showplatform output
        else
                sms_user=$thisuser

                # we need the SMS executable
                sms_exec=/opt/SUNWSMS/bin/showplatform
                test -x $sms_exec || sms_user=nobody

                # we need the sms-svc user on the system
                getent passwd sms-svc &gt; $NULLFILE 2&gt;&amp;1 || sms_user=nobody

                # we need to know who we are
                case $sms_user in
                nobody )        # signal that showplatform will not work
                        ;;      # output nothing
                root )
                        # run showplatform as sms-svc user
                        su sms-svc -c "$sms_exec -p csn" 2&gt; $NULLFILE
                        ;;
                sms-* )
                        # run showplatform as current SMS user
                        $sms_exec -p csn 2&gt; $NULLFILE
                        ;;
                esac
        fi | show_dataflow |
                 nawk '/^Chassis Serial Number/  {print $NF} {next}' -

        `       # end of code to gather $sms_csn

       if test -n "$sms_csn" ; then
                echo "$sms_csn"                   # got SMS serial
                return 0
        fi

        ##### gather SMS CSN from platform_info file

        sms_csn=`

        if $SIMULATION ; then
                sms_platforminfo_sim    # simulate platform_info data
        else
                sms_user=$thisuser

                # we need the SMS "PCD" platform_info file
                sms_info=/var/opt/SUNWSMS/SMS/.pcd/platform_info

                # data format usable with this code
                #   same format from SMS 1.4 - 1.6
                # "!" denotes beginning of line
                # note empty field at beginning of data line
#       !# version 3 field count 14
#       !
#       ! |&lt;PlatName&gt;|&lt;digits&gt;|&lt;digits&gt;|&lt;digits&gt;|1|&lt;IP&gt;| | |&lt;IP&gt;|&lt;IP&gt;|&lt;mask&gt;|0|&lt;SERIAL&gt;

                # permissions for the file:
                #-rw-------   1 sms-pcd  sms   170 Feb 26 19:09 platform_info

                # if we cannot find file, use username as an error signal
                test -f $sms_info || sms_user=nobody


                # we need to know who we are
                case $sms_user in
                nobody )        # signal that showplatform will not work
                        ;;      # output nothing
                root | sms-pcd )
                        # run showplatform as sms-pcd and current SMS user
                         cat $sms_info 2&gt; $NULLFILE
                        ;;
                * )
                        # error, with explanation
                        errmsg SMS : unable to gather platform serial as user $thisuser
                        errmsg SMS : use &#92;"sms-pcd&#92;" or &#92;"root&#92;" for platform_info
                        ;;

                esac
        fi | show_dataflow | nawk -F'|'  '
                /version [124-9]/ {exit} # only does version 3 file format
                NF &gt; 1 { print $NF }     # print final data field
        ' - 

        `       # end of code to gather $sms_csn from platform_info

        if test -n "$sms_csn" ; then
                echo "$sms_csn"                   # got SMS serial
                return 0
        fi

        return 1 # no serial number. Fail


}

##########################################################
#
# prtdiag interface for chassis serial data
#



# prtdiag on Solaris 10 and certain platforms has been
# observed to be quite slow.
# As we might need the data more than once, cache it.
# prtdiag may also  have to wait for data from picld
# so do the waiting here.

# We have found that because the calls to this function
# are made from various subshells, using a variable for
# the cache is ineffective.
# We are forced to use a file for the cache.

# We should create the temporary cache file in user writable space
# with an unpredictable file name so that even non-root user
# can also create and use it temporarily
# As 'mkdir' is atomic, we attempt to create a directory and the
# cache file inside it, if and only if the directory does not exist
# In case, the directory exists, sneep will not attempt to create cache 
# Instead, sneep will probe prtdiag interface directly for data
mkdir -m 0700 /tmp/sneep_prtd.$$ &gt; $NULLFILE 2&gt;&amp;1
test "$?" -eq 0 &amp;&amp; prtdiag_cache=/tmp/sneep_prtd.$$/sneep_prtd.$$

# Just before termination of program,
# we should clean up temporary directory and file and exit
cleanup()
{
        /bin/rm -rf /tmp/sneep_prtd.$$
}

trap "cleanup; exit 0" 0 1 2 15 # clean up on exit

prtdiagf()      # caching prtdiag interface
{
        $tracing &amp;&amp; set -x

        pf_args="$*"    # args are generally "-v"
        
        # prtdiag doesnt work in a non-global zone
        # avoid a lot of errors and confusion by bailing out now.
        ngzone &amp;&amp; return 1


        # make sure that we have a path to an executable
        if $SIMULATION ; then
                prtdiag=prtdiag_sim
        else
                for prtdiag in /usr/sbin/prtdiag &#92;
                        /usr/platform/$UNAME_I/sbin/prtdiag 
                do
                        test -x $prtdiag &amp;&amp; break
                done
                test -x $prtdiag || return 0    # no prtdiag ?
                                        # return success above 
                                        # instead of failure so that 
                                        # caller does not think that
                                        # prtdiag is present, but failing
        fi


        # Get prtdiag data and cache it

        # check for repeated request for data

        #       convert args into simple string
        #       used as cache tag.
        #       ( avoid space and dash )
        #       This cache tag allows us to verify that
        #       the cache has the desired contents.
        #
        #       tag is stored in first line of cache.
        #       status is stored in second line of cache.
        #       data follows.

        pf_ctag=`echo x"$pf_args" | tr ' -' '@_' `

        # Make cache if necessary
        if [ -n "$prtdiag_cache" -a ! -r "$prtdiag_cache" ]; then
                # create empty cache with
                # non-matching tag "XXX"
                touch "$prtdiag_cache" 2&gt; $NULLFILE &amp;&amp;
                chmod 644 "$prtdiag_cache" 2&gt; $NULLFILE &amp;&amp;
                echo XXX &gt; "$prtdiag_cache" &amp;&amp;
                echo 0 &gt;&gt; "$prtdiag_cache"   &amp;&amp;
                echo "" &gt;&gt; "$prtdiag_cache"
        fi

        # get old arg tag from cache
        if test -f "$prtdiag_cache" ; then
                # get tag from line 1
                pf_oldtag=`sed -n 1p "$prtdiag_cache" `
        else
                # just in case cache didnt get created
                # make sure that we will not try to use it
                pf_oldtag="YYY"         # forced nonmatch
        fi

        # if old tag and new tag match, 
        # we should be able to re-use the cache contents
        if test "$pf_ctag" != "$pf_oldtag" ; then

                : no match on cache tag 

                # during system startup, sometimes picld is
                # too busy to respond to prtdiag for a while.
                # Allow for slow startup of picld by retrying.
                #
                # Note that we have seen that the first data
                # available when picld starts is not always
                # complete, but that is all we have unless
                # we wait unknown additional amount.
                # We do not know if this will affect the
                # serial data on platforms providing it 
                # in prtdiag.

                # At system startup we can at most have 9 tries to get picl ready.
                # For manual sneep or if picld already running we'll allow only
                # one try to get prtdiag output.
                max_retry=9
                if [ -t 0 ] || picld_running; then
                    max_retry=1
                fi

                pf_tries=1
                while [ "$pf_tries" -le "$max_retry" ]
                do
                    # Capture prtdiag output &amp; error message in pf_data
                    # and status in pf_status
                    pf_data=`$prtdiag "$@" 2&gt;&amp;1` 
                    pf_status=$?

                    # If prtdiag succeeds, no need of looping further
                    if [ "$pf_status" -eq 0 ]; then
                        break
                    fi
                    
                    # If prtdiag fails, try to find out root cause and log error message
                    # We assume that, if header "Chassis Serial Number" is present in prtdiag output,
                    # serial number is also present (based on testing of T5220)
                    pf_serial=`echo "$pf_data" | grep -i "Chassis Serial Number"`
                    pf_picl_err=`echo "$pf_data" | grep -i "picl_initialize failed:"`
                        
                    # If problem is due to picl initialization 
                    if [ -n "$pf_picl_err" ]; then 
                        log -e picl daemon unresponsive : attempt $pf_tries of $max_retry

                        # If serial no. is found, come out of loop
                        if [ -n "$pf_serial" ]; then
                            log $pf_picl_err
                            break
                        else
                            # At system start up, try at most 9 times
                            if [ "$pf_tries" -lt "$max_retry" ]; then
                                sleep `expr 8 &#92;* $pf_tries`
                            else
                                # All retries exhausted, picl is still not ready    
                                log -e Cannot get data from prtdiag because hardware platform information is not available
                                log -e Investigation of possible problem with picld or hardware platform is recommended
                            fi
                        fi
                    else
                        # Failure due to some cause other than picl initialization
                        # Check for hardware/system specific failure message found in prtdiag output
                        if echo "$pf_data" | egrep -i "No failures found in System|No Hardware failures found in System" &gt; $NULLFILE; then
                            log -e Unknown prtdiag error, no specific hardware failure indicated by prtdiag 
                        else
                            # Hardware/system specific failure message found in prtdiag output
                            log -e Prtdiag error, possible hardware or configuration problem 
                        fi
                        break 
                    fi 
                    pf_tries=`expr $pf_tries + 1`
                done
                
                # load the cache
                if test -w "$prtdiag_cache" ; then
                        echo "$pf_ctag" &gt; "$prtdiag_cache"     # tag
                        echo "$pf_status" &gt;&gt; "$prtdiag_cache"  # status
                        echo "$pf_data" &gt;&gt; "$prtdiag_cache"    # data
                fi
        fi

        if test -r "$prtdiag_cache" ; then
                : return cache file contents except tag and status
                pf_status=`sed -n 2p "$prtdiag_cache" ` # status from line 1
                sed 1,2d "$prtdiag_cache"                       # data starts @ line 3
                return $pf_status
        else
                : cannot read cache file,  try variables
                if test ! -z "$pf_data" ; then
                        echo "$pf_data"         # return data
                        return $pf_status       # and status
                fi
        fi
        return 1                # fail - no cache or data
}

picld_running()
{
        $SIMLUATION &amp;&amp; [ -n "$SIMULATION_PICLD_STATUS" ] &amp;&amp; return $SIMULATION_PICLD_STATUS
        if [ -x /usr/bin/svcs ]; then
                [ "`/usr/bin/svcs -Ho STA svc:/system/picl:default`" = ON ]
        else
                /usr/bin/ps -eo comm | /usr/bin/egrep -s '(^|/)picld$'
        fi
}


#
#       Main prtdiag module
#

prtdiag_info()          # CSN from prtdiag if possible
{
        pi_action="$1"                  # get/set action 
        pi_tag="${2:-$SERIAL_TAG}"      # optional tag
        pi_val="$3"     # value for tag  # optional value

        case "$pi_action" in
        "")     errmsg Internal error: no action for prtdiag .
                return 1
                ;;
        set)
                # cannot set value in prtdiag - read-only
                # but they dont have to know that
                return 0        # update succeeded
                ;;
        get)
                #
                # Retrieve value for tag from the prtdiag
                #

                # only  SERIAL_TAG is possible
                test "$pi_tag" = $SERIAL_TAG || return 1


                # A change was made for Solaris 10 which was intended for the 
                # Sun-Fire 445, and 215/245
                # but may be used on other platforms :

                # "The feature was integrated into Nevada snv_30. 
                #  It will also be backported to S10U2. "
                # It provides serial data from the ALOM 
                # in the output of "prtdiag"

                # # prtdiag -v | tail
                # /pci@1f,700000         pciex108e,80f0   okay               3 
                #
                # System PROM revisions:
                # ----------------------
                # OBP 4.x.seattle.bin 2005/12/21 02:47 Sun Fire V215/V245
                # POST 4.120.48 2005/12/19 16:40
                #
                # Chassis Serial Number:
                # ----------------------
                # 12345ABCDE    (or whatever it might really be)

                # get serial from prtdiag data
                #       look for serial number in prtdiag data
                #       on the second line after the heading
                #       heading.&gt;       |Chassis Serial Number:
                #       line 1-&gt;        |----------------------
                #       line 2-&gt;        |12345ABCDE


                pi_serial=` prtdiagf -v | 
                        nawk ' /Chassis Serial Number/ {
                                        getline ;       # skip "-----"
                                        getline ;       # line with serial
                                        print $1        # print serial
                                }
                                { next }        # consume extra input
                                                # to avoid broken pipe
                        '
                `   # end pi_serial=

                # fail if prtdiag has no serial data for platform
                test -z "$pi_serial" &amp;&amp; return 1

                echo "$pi_serial"       # return value
                return 0                # return success
                ;;
        esac
        return 0        # should never get here
}




##########################################################
#
# SMBIOS interface for chassis serial data
#

smbios_info()           # CSN from smbios if possible
{
        smb_action="$1"                 # get/set action 
        smb_tag="${2:-$SERIAL_TAG}"     # optional tag
        smb_val="$3"    # value for tag  # optional value

        case "$smb_action" in
        "")     errmsg Internal error: no action for smbios .
                return 1
                ;;
        set)
                # cannot set value in smbios - read-only
                # but they dont have to know that
                return 0        # update succeeded
                ;;
        get)
                #
                # Retrieve value for tag from the smbios
                #


                # *Some* X86 platforms support the SMBIOS standard
                # for detailed hardware information.

                # Even if serial data is present, it may not be
                # an accurate chassis serial
                # and the user may want to override it in eeprom


                # Select Chassis info using ID 1 or 3 from standard
                #   type 1 : SMB_TYPE_SYSTEM (system information)
                #   type 3 : SMB_TYPE_CHASSIS (system enclosure or chassis)

                #$ smbios -t 1
                #ID    SIZE TYPE
                #1     89   SMB_TYPE_SYSTEM (system information)
                #
                #  Manufacturer: TOSHIBA
                #  Product: TECRA M5
                #  Version: PTM51U-05W01P
                #  Serial Number: 86078428H
                #
                #  UUID: 6edcb700-2ab4-11db-8051-b05d86078428
                #  etc.

                #$ smbios -t 3
                #ID    SIZE TYPE
                #3     56   SMB_TYPE_CHASSIS (system enclosure or chassis)
                #
                #  Manufacturer: TOSHIBA
                #  Version: Version 1.0
                #  Serial Number: 00000000
                #  Asset Tag: 0000000000
                #
                #  OEM Data: 0x0
                #  Lock Present: N
                #  Chassis Type: 0xa (notebook)
                #  etc.


                if $SIMULATION ; then
                        smbios=smbios_sim  # use sim function above
                else
                        # set up $smbios to find a useful executable
                        for smbios in /usr/sbin/smbios &#92;
                                        /sbin/smbios /usr/bin/smbios
                        do
                                test -x $smbios &amp;&amp; break
                        done
                        test -x $smbios || return 1
                fi


                # look for different things depending on tag
                case "$smb_tag" in
                $SERIAL_TAG )
                        smb_pattern='Serial Number:'
                        ;;
                model )         # pseudo-tag to get system model
                        smb_pattern='Manufacturer:|Product:|Version:'
                        ;;
                * )     
                        return 1 ;;     # no other tags are useful
                esac

                        
                smb_val=` (
                        $smbios -t 1  2&gt;&amp;1      # try SMB_TYPE_SYSTEM first
                        $smbios -t 3  2&gt;&amp;1      # try SMB_TYPE_CHASSIS 2nd
                                                # just in case, try anything
                        $smbios 2&gt;&amp;1            # (have seen serial on type 256)

                        ) | show_dataflow | nawk -v pat="$smb_pattern" '

                                done ==1 { next }       # consume extra lines

                                #ID    SIZE TYPE
                                #nnn   nnn  SMB_SOMETHING (description)
                                /^ID.*SIZE/ { 
                                        # new section, 
                                        #   have not seen SMB_* line yest
                                        next_match = 0 ; 

                                        # if we printed something, then this
                                        # is the next section and there is 
                                        # no more to be gathered.  Done.

                                        if (printed) done=1 
                                }

                                # start looking when we have seen a useful TYPE
                                /SMB_TYPE_SYSTEM/       { next_match = 1 }
                                /SMB_TYPE_CHASSIS/      { next_match = 1 }

                                # if we are looking, and we find what we want,
                                # and its not just empty or zero or none,
                                # then print it and ignore everything else.
                                $0 ~ pat &amp;&amp; next_match == 1 {
                                        # remove the matched words from the line
                                        gsub(pat,"");

                                        # remove uninteresting results

                                        #       Not Available
                                        sub(/[Nn]ot [Aa]vail.*/, "", $0);
                                        #       To Be Filled By O.E.M.
                                        sub(/[Tt]o [Bb]e.*/, "", $0);
                                        #       None
                                        sub(/[Nn]one*/, "", $1);
                                        # ethernet MAC address
                                        #       00:14:4F:20:D3:48
                                        sub(/.*:.*:.*:.*:.*:.*/, "", $1);

                                        # print anything interesting
                                        if ($1 !~ /^$|^0$|^0[-0]*$/) {
                                                print $0

                                        # we want to exit now, but if we do
                                        # we get a Broken Pipe, so we have to
                                        # consume the remaining input
                                                printed = 1;
                                        
                                        }
                                }

                                { next }        # avoid printing every line
                        ' -  # end nawk
                `   # end smb_val= 
               # remove leading and trailing whitespace, join lines
               smb_val=`echo $smb_val`


                # fail if smbios has no data for this platform
                test -z "$smb_val" &amp;&amp; return 1

                # return value, converting whitespace to underline
                echo "$smb_val" | $tr -s '[:blank:]' '[_*]'
                return 0                # return success
                ;;

        esac
        return 0        # should never get here
}




##########################################################
#
# IPMI interface for product / chassis serial data
#

ipmi_info()             # PSN from ipmi if possible
{
        ipmi_action="$1"                        # get/set action 
        ipmi_tag="${2:-$SERIAL_TAG}"    # optional tag
        ipmi_val="$3"   # value for tag  # optional value

        case "$ipmi_action" in
        "")     errmsg Internal error: no action for ipmi .
                return 1
                ;;
        set)
                # cannot set value in ipmi - read-only
                # but they dont have to know that
                return 0        # update succeeded
                ;;
        get)
                #
                # Retrieve value for tag from ipmi
                #


                # *Some* X86 platforms support the IPMI standard
                # for detailed hardware information.

                # Even if serial data is present, it may not be
                # an accurate chassis serial
                # and the user may want to override it in eeprom


                if $SIMULATION ; then
                        ipmi=ipmi_sim  # use sim function above
                else
                        # set up $ipmi to find a useful executable
                        for ipmi in /usr/sfw/bin/ipmitool &#92;
                                        /usr/sbin/ipmitool &#92;
                                        /sbin/ipmitool /usr/bin/ipmitool
                        do
                                test -x $ipmi &amp;&amp; break
                        done
                        test -x $ipmi || return 1
                fi


                # look for different things depending on tag
                case "$ipmi_tag" in
                $SERIAL_TAG )
                        ipmi_pattern='Serial'
                        ;;
                model )         # pseudo-tag to get system model
                        ipmi_pattern='Name'
                        ;;
                * )     
                        return 1 ;;     # no other tags are useful
                esac

                ipmi_val=` (
                        $ipmi -I bmc fru 2&gt; $NULLFILE | show_dataflow |
                                nawk -F : -v pattern="$ipmi_pattern" '

                                BEGIN { 
                                        skipping = 1 
                                        chassispattern = "Chassis " pattern;
                                        productpattern = "Product " pattern;
                                        value = ""
                                }

                                # start looking when we see chassis
                                # or motherboard
                                skipping &amp;&amp; /Chassis Type/      {
                                        # Chassis info not preceeded by
                                        # recognized Product Description
                                        skipping = 0
                                        type="misc"
                                }

                                # Motherboard Device Description
                                #     FRU Device Description : MB (ID 2)
                                #     FRU Device Description : mb.fru (ID 2)
                                # Recent analysis showed that the ID for motherboard
                                # may not be 2 necessarily. Hence making the regular
                                # expression more generic
                                /FRU.*Desc.*: *[Mm][Bb].[Ff][Rr][Uu] |FRU.*Desc.*: *[Mm][Bb] / {
                                        skipping = 0
                                        type="motherboard"
                                }

                                # System Device Description 
                                # FRU Device Description : /SYS (ID 3)
                                # (System ID may be other than 3)
                                #   also 
                                #       FRU Device Description : System FRU (ID 1)
                                #        Product Manufacturer  : HP
                                #        Product Name          : ProLiant DL185 G5
                                #        Product Serial        : USE925N9KH
                                /FRU.*Desc.*:[ &#92;/]*SYS |FRU.*Desc.*: *System FRU / {
                                        skipping = 0
                                        type="system"
                                }

                                # Blade chassis
                                # FRU Device Description : MIDPLANE (ID 70)
                                # Chassis Type          : Rack Mount Chassis
                                # Product Manufacturer  : SUN MICROSYSTEMS
                                # Product Name          : SUN BLADE 6000 MODULAR SYSTEM
                                # Product Serial        : 0930BD16D3
                                /FRU.*Desc.*: *MIDPLANE .*ID/ {
                                        skipping = 0
                                        type = "midplane"
                                }
                
                                # blank line separates IPMI data blocks
                                /^$/            { skipping =1 } # end of block

                                skipping == 1   { next }  # skip this input line


                                $1 ~ productpattern {
                                        value = $2
                                        fulltype = type "_product";
                                }

                                $1 ~ chassispattern {
                                        value = $2
                                        fulltype = type "_chassis";
                                }

                                value != "" {
                                                # found something like what
                                                # we are looking for
                                        sub("^  *","", value); # remove leading white
                                        sub("  *$","", value); # remove trailing white


                                        # save anything interesting
                                        if (value !~ /^$|^0$|^0[-0]*$/) {
                                                if ( found[fulltype] == "") 
                                                        found[fulltype] = value; 
                                        }
                                        value = ""
                                }
                                END {
                                        # output highest priority data first
                                        if (found["midplane_product"])
                                                print found["midplane_product"];
                                        if (found["midplane_chassis"])
                                                print found["midplane_chassis"];
                                        if (found["system_product"])
                                                print found["system_product"];
                                        if (found["system_chassis"])
                                                print found["system_chassis"];
                                        if (found["motherboard_product"])
                                                print found["motherboard_product"];
                                        if (found["motherboard_chassis"])
                                                print found["motherboard_chassis"];
                                        if (found["misc_product"])
                                                print found["misc_product"];
                                        if (found["misc_chassis"])
                                                print found["misc_chassis"];
                                }
                          ' -
                        ) `   # end ipmi_val=

                # fail if ipmi has no data for this platform
                test -z "$ipmi_val" &amp;&amp; return 1

                # Clean up any known problems with IPMI serial
                        # blade servers especially may have prefix
                        #       prefix '0111APO-' sun_bt6320
                        #       prefix '1005LCB-' sun_bt6340

                        # some serials are really MAC address
                        #        Product Serial  : 00:14:4F:26:DD:9D
                        #    but only first octet (2 chars) gets through
                        #    from nawk -F : when value is from field 2 (above)
                        #    Drop serial which is just 2 hex digits
                ipmi_val=`echo "$ipmi_val" | 
                        sed     -e 's/^[0-9][0-9][0-9][0-9][A-Z][A-Z][A-Z]-//' &#92;
                                -e '/^[0-9A-Fa-f][0-9A-Fa-f]$/d'
                `


                # return value, converting squeezed whitespace to underline
                ipmi_val=`echo "$ipmi_val" | $tr -s '[:blank:]' '[_*]'`
                # ipmi may return multiple different serial number. 
                # Take the first and highest priority one.
                echo "$ipmi_val" | head -1
                return 0                # return success
                ;;

        esac
        return 0        # should never get here
}



##########################################################
#
# prtconf interface for chassis serial data
#

prtconf_info()          # CSN from prtconf if possible
{
 
        pcf_action="$1"                 # get/set action 
        pcf_tag="${2:-$SERIAL_TAG}"     # optional tag
        pcf_val="$3"    # value for tag  # optional value

        case "$pcf_action" in
        "")     errmsg Internal error: no action for prtconf .
                return 1
                ;;
        set)
                # cannot set value in prtconf - read-only
                # but they dont have to know that
                return 0        # update succeeded
                ;;
        get)
                #
                # Retrieve value for tag from prtconf
                #


                # only  SERIAL_TAG is possible
                test "$pcf_tag" = $SERIAL_TAG || return 1


                # make sure that we have a path to an executable
                if $SIMULATION ; then
                        prtconf=prtconf_sim  # use sim function above
                else
                        # set up $prtconf to find a useful executable
                        for prtconf in /usr/sbin/prtconf /sbin/prtconf 
                        do
                                test -x $prtconf &amp;&amp; break
                        done
                        test -x $prtconf || return 1    # no prtconf?
                fi


                #  explorer sysconfig/prtconf-vp.out
                #
                #    from 'Sun SPARC Enterprise M9000 Server'
                #       System Configuration:  Sun Microsystems  sun4u
                #       Memory size: 32768 Megabytes
                #       System Peripherals (PROM Nodes):
                #       
                #       Node 0xf002a074
                #           boot-retained-page:
                #           cpu-signature-ranges:  00004081.f132e000.000000..
                #           chassis-sn:  'AKD0736110'
                #           banner-name:  'Sun SPARC Enterprise M9000 Server'
                #           model:  'DC3'
                #           name:  'SUNW,SPARC-Enterprise'
                #           device_type:  'jupiter'
                

                #     from Enterprise 450
                #       (OBP variable)
                #       system-board-serial#:  '946M3222'
                #  Note: this is the chassis serial, 
                #       not the system-board-serial,
                #        no matter what it says.

                #       from Enterprise 250
                #       system-board-serial# '5014681011959'
                # Note:  this is as it says, the system-board-serial.
                #       Now we have to figure out which is which....
                

                # pull out second field of interesting line, drop quotes
                #       note that prtconf lines can be extremely long
                #       and can cause nawk to fail, so we fold them first.

                pcf_serial=`$prtconf -vp 2&gt; $NULLFILE | show_dataflow |
                    fold -w 255 |  nawk -v sqot="'"  '
                        $1 == "chassis-sn:" { ser = $2 }
                        $1 == "system-board-serial#:" { ser = $2 }
                        END {
                                gsub(sqot, "", ser);    # remove single quotes

                                # fail if no serial
                                if (ser == "") exit 1;
                        
                                # fail if string has strange contents
                                #       (anything not alphanumeric)
                                if (ser ~ /[^a-zA-Z0-9]/) exit 1;

                                # Might be a board serial
                                # Reject if it is long and starts with 501
                                #  501 starts many Sun501 part numbers
                                if (length(ser) &gt; 10 &amp;&amp; (ser ~ /^501/))
                                        exit 0;

                                # seems to be OK
                                print ser;
                        } '  -
                `  # end pcf_serial=

                # fail if prtconf has no serial data for platform
                test -z "$pcf_serial" &amp;&amp; return 1       # no serial found

                echo "$pcf_serial"      # return value
                return 0                # return success
                ;;
        esac
        return 0        # should never get here
                                
                        
}



##########################################################
#
# CST Configuration Service Tracker interface
#

# where to find CST data and config
CSTVAR=${CSTVAR:-$SIMBASE/var/opt/SUNWcst}
CSTUSERDATA=$CSTVAR/user_data           # Serial stored in this file by CST

cst_available()         # return 0 if CST is installed and usable
{                       # also return package install dir (generally /opt)

        for cst_pkg in SUNWcstu SUNWcstv SUNWcstr SUNWcst
        do
                if CSTBASE=`$pkginfo -r $cst_pkg 2&gt; $NULLFILE ` ; then
                        echo $CSTBASE
                        return 0        # assume CST is up -
                fi                      # app_event can tell if it is down later
        done

        return 1        # cannot find or use CST
}


: get_cst_serial

get_cst_serial()        # get serial from CST user data if possible
{

        # no real need to check for CST installed- just look for user_data
        # gcs_dir=`cst_available` || return 0   # Keep quiet if no CST
        

        test -r "$CSTUSERDATA" || return 1      # fail if we cannot read it

        # user_data file is tab separated,
        # serial number is on a line like this:
        #       Serial # of System&lt;tab&gt;819fc481

        if gcs_serline=`grep -i "serial.*system" $CSTUSERDATA ` ; then
                echo "$gcs_serline" | cut -sf 2 # return serial number
                return 0                        # and success
        fi

        return  1                               # failed to get serial from CST
}


: set_cst_serial

set_cst_serial()        # send CST event with serial number
{                       # to be picked up and used to set CST user data

        $tracing &amp;&amp; set -x

        scs_serial="$1"         # new serial number is pased in

        # if this is an explorer-based simulation, 
        # there will be no CST user data file, and we dont really want
        # to create one inside the explorer,
        # and we dont want to try sending a CST event.
        # We also dont want any unnecessary errors. 
        #       Bail out successfully

        $explorer_sim &amp;&amp; return 0

        # As of 200411, the only agent-side changes to user data 
        # which are propagated to the CST middleware are those made 
        # using the GUI.
        #
        # Note :  by using the the CST User Data Editor (uded)
        #       available from Sun Field Customer Advocacy,
        #       edits made to the user data on the agent CAN be propagated
        #       to the middleware.  uded will also automatically detect
        #       and leverage the application events described below.
        # 
        # As a result, without uded there is little value in 
        # editing the user_data file as we edit the explorer config file.
        #
        #       The "value" is that if the serial number is erased,
        #       and then requested again via sneep, it will be unknown.
        #       If we do not edit it out of the file, then the old
        #       serial is returned again. This can come as a surprise.
        #
        # Our most valuable CST activity then, is to create a special 
        # application event on the agent which is passed to the middleware
        # and can be processed later to create a simulated user_data edit
        # if desired. 
        # (this in handled in conjunction with the "uded" utility, not part
        #       of the standard CST installation)
        

        # first, update local cst user data file
        # whether or not CST is running

        update_cst_udata "$scs_serial"  # update local file with serial

        #
        # Send CST event to record serial locally, and on middleware server
        #

        # check for usable CST
        scs_dir=`cst_available` || return 0     # Keep quiet if no CST
                                                # complain if CST not working
        # check for CST app_event utility installed correctly
        scs_appev=$scs_dir/SUNWcstu/bin/app_event
        if test ! -x $scs_appev ; then
                errmsg CST app_event utility not found .
                return 1
        fi

        # send CST app_event of type "Serial Number" with new value.
        # Capture output, as we have found the app_event exit value unreliable.

        test -z "$scs_serial" &amp;&amp; scs_serial="deleted"
        scs_tmp=`$scs_appev "Serial Number" "&lt;CSN&gt;$scs_serial&lt;/CSN&gt;" 2&gt;&amp;1 `
        scs_stat=$?

        # check app_event output to see if all went OK
        if echo "$scs_tmp" | grep -i DONE &gt; $NULLFILE ; then
                : DONE seems to mean CST is OK
        else
                errmsg CST may be down .
                return 1
        fi
        return 0
}


#
# Update CST user_data file
#
update_cst_udata()      # upate the CST user_data file
{
        ucu_serial="$1" # pass in the serial number to update in the file

        # see set_cst_serial for why we bail on an explorer simulation
        $explorer_sim &amp;&amp; return 0

        if test ! -f $CSTUSERDATA ; then
                # There is no CST user file (perhaps no CST directory)
                # on this system.
                # If CST is installed, we will update the user file anyway.

                # if CST is not installed, return success anyway
                # because CST is completely optional. 
                $pkginfo -q SUNWcstu || return 0  # not installed, return
                
                # file missing, but CST is installed. 
                # create the missing file and set the serial in it
                # RFE 00056 (extension): update missing serial

                # create CST data directory if missing
                ucu_dir=`dirname $CSTUSERDATA`
                test -d $ucu_dir || mkdir -m 0755 -p $ucu_dir 2&gt; $NULLFILE

                # create empty user data file, or return
                #       return success because CST is not required
                touch $CSTUSERDATA || return 0

                chmod 644 $CSTUSERDATA 2&gt; /dev/null     # set safe permissions
        fi

        # if the old and new values are the same (even if null)
        # then no need to update
        ucu_oldserial=`get_cst_serial`
        test "$ucu_serial" = "$ucu_oldserial" &amp;&amp; return 0

        # user_data file is tab separated,
        # serial number is on a line like this:
        #       Serial # of System&lt;tab&gt;819fc481

        
        # save everything EXCEPT the line containing the Serial entry
        ucu_otherlines=`grep -v -i "serial.*system" $CSTUSERDATA `

        
        if touch $CSTUSERDATA 2&gt; $NULLFILE ; then
                : no problem 
        else
                errmsg Cannot write $CSTUSERDATA as $thisuser .
                return 1
        fi

        # Put new value (or null value) into tab-separated file
        echo 'Serial # of System'"$tab$ucu_serial" &gt; $CSTUSERDATA || return 1

        # Put the other entries into the file
        echo "$ucu_otherlines" &gt;&gt; $CSTUSERDATA || return 1

        log Changed Serial Number in CST user data $CSTUSERDATA &#92;
                from &#92;"$ucu_oldserial&#92;" to &#92;"$ucu_serial&#92;"

        return 0
}



##########################################################




: get_value 


get_value()     # get value from data source(s) and report on stdout
{
                        # first param is whether or not this is serial number
        gv_tag="${1:-$DESIREDTAG}"      # eeprom tag should be passed in
        gv_sources=${2:-$SNEEPPATH}     # sources to check in sequence

        gv_status=0     # assume success
        gv_found=false  # true if value has been found

        case "$gv_tag" in
                "$SERIAL_TAG" | serial | ser | csn | CSN | psn | PSN )
                
                        gv_tag="$SERIAL_TAG" # use standard tag
                        gv_serial=true          # processing a serial number:
                        ;;
                * )
                        gv_serial=false         # not the serial number
                        ;;
        esac

        for gv_src in `(IFS=: ; echo $gv_sources)` default
        do
                : ; : check $gv_src ; : ;

                gv_sourcename=$gv_src   # printable source name

                case "$gv_src" in
                fruid | FRUID | fru* | FRU* )
                        # check $gv_serial before lookup
                        : $gv_src not implemented yet
                        ;;
                prtdiag* | PRTDIAG* )
                        gv_value=`prtdiag_info get "$gv_tag" `
                        ;;

                prtconf* | PRTCONF* )
                        gv_value=`prtconf_info get "$gv_tag" `
                        ;;

                sms | SMS)
                        # check $gv_serial before lookup
                        gv_value=`sms_info get "$gv_tag" `
                        ;;

                eeprom | EEPROM | eep* | EEP* | nvram* | NVRAM* )
                        gv_value=`get_eeprom_value "$gv_tag" `
                        ;;

                backup | bac*)
                        gv_value=`backup get "$gv_tag" ""`
                        gv_sourcename="$gv_src : $BACKUP"
                        ;;

                explorer | exp* )
                        # check $gv_serial before lookup
                        $gv_serial &amp;&amp; gv_value=`get_explorerconfig_serial`
                        ;;
                cst | CST )
                        # check $gv_serial before lookup
                        $gv_serial &amp;&amp; gv_value=`get_cst_serial `
                        ;;

                smbios | SMBIOS )
                         # check $gv_serial before lookup
                        gv_value=`smbios_info get "$gv_tag" `
                        ;;

                ipmi | IPMI )
                         # check $gv_serial before lookup
                        gv_value=`ipmi_info get "$gv_tag" `
                        ;;

                fserial | FSERIAL )
                        # get value from fujitsu
                        $gv_serial &amp;&amp; gv_value=`fserial_info get "$gv_tag"`
                        ;;

                default | def* )
                        # provide default value
                        # (unless value has already been found
                        #  as it might be with -a option to report all sources )

                        if $gv_found ; then
                                : skipping default because already found
                        else
                                gv_value=$defaultval
                                gv_sourcename="default value"

                                # fail if serial cannot be determined
                                gv_status=1     
                        fi
                        ;;

                internal )      # internally fabricated pseudo-tags
                        case "$gv_tag" in
                        model )         gv_value=`get_model` 
                                ;;
                                # hostname and hostid probably never get past
                                # "get_multi", but are here just in case
                                #
                        hostid )        gv_value=`get_hostid` ;;
                        hostname )      gv_value=`get_hostname` ;;

                        esac
                        ;;

                * )     errmsg Unknown data source: &#92;""$gv_src"&#92;" .
                        ;;
                esac


                # do any required processing on 
                # the value returned from each data source

                case "$gv_tag" in
                        model )         # filter most "model" strings
                                case "$gv_src" in
                                eeprom | backup )  # stores overrides
                                        : user allowed control over model 
                                                ;;      

                                * )     : filter model returned from $gv_tag
                                        gv_value=` 
                                          echo "$gv_value" | model_filter2`
                                        ;;
                                esac
                                ;;
                esac

                # report when we find a value
                if test ! -z "$gv_value" ; then
                        gv_found=true

                        $verbose &amp;&amp; 
                                echo "   " "$gv_tag" from $gv_sourcename : 
                        echo "$gv_value"
                        gv_value=""

                        # stop looking as soon as we find a value
                        # unless we are reporting all sources
                        $allsources || break
                fi
        done

        return $gv_status
}


: showplat

showplat()      # emulate showplatform -p csn output
{
        serial="$@"     # pass in serial number

        cat &lt;&lt; END
     CSN:
     ====
     Chassis Serial Number: $serial
END
}

: set_value

set_value()     # set value in eeprom, explorer config files, CST
{               # we allow null serial so that it can be removed

        sv_tag="$1"     # eeprom tag to use
        sv_value="$2"   # value to set

        sane_tag "$sv_tag" || return 1          # reject illegal tags

        sv_serial=false         # assume tag is not for serial number
        sv_force_ucase=false    # assume no need to change value case

        # get the default value for this tag
        case "$sv_tag" in
                hostname )
                        sv_default=`get_hostname`  # default is true hostname
                        ;;
                hostid )
                        sv_default=`get_hostid`  # default is true hostid
                        ;;

                * )     # all other tags use the same default
                        # usually "unknown" but settable with -d

                        sv_default="$defaultval"
                        ;;
        esac


        # Any special handling or policy for this tag?

        case "$sv_tag" in
                "$SERIAL_TAG" | serial | ser | csn | CSN | psn | PSN )

                        sv_serial=true                  # setting serial number
                        sv_force_ucase=$force_ucase     # take user view of case
                        sv_tag=$SERIAL_TAG              # use standard tag
                        ;;


                # 6842161 Hostname and hostid need not have the "set" permission
                #
                # Setting hostname/hostid is no longer allowed,
                # but if an attempt is made
                # to set the default value (the true hostname/hostid)
                # we let it pass  to avoid an error message .
                # Because it is the default value, it gets erased later.
                # (See comment below)
                # Once erased, sneep start wont send it again.
                #
                # An attempt to set any other value is not allowed
                # and fails with an error.

                hostname | hostid )
                        case "$sv_value" in
                                "" )
                                        : user is deliberately erasing $sv_tag
                                        # erase tag, report error if missing
                                        ;;

                                "$sv_default" )
                                        : user is setting $sv_tag to default value $sv_default

                                        # When user try to set actual hostname or hostid ,
                                        # sneep tries to erase it from eeprom and/or backup.
                                        # If this tag is not already present sneep throws an error message,
                                        # so we will return from here if the tag is missing.

                                        # get_value allows us to check both eeprom and backup for tag
                                        #  but returns $defaultval if not found.  Use return status

                                        if get_value "$sv_tag" eeprom:backup &gt; /dev/null ; then
                                                : found the value in eeprom/backup, OK to erase
                                        else
                                                : $sv_tag not in eeprom/backup - dont try to erase
                                                                # a query for this tag will return this value
                                                return 0        # so pretend this attempt was successful
                                        fi
                                        ;;

                                * )     : user is setting $sv_tag to non-default value $sv_value

                                        errmsg To avoid inconsistencies, it is not &#92;
                                                possible to set the &#92;"$sv_tag&#92;" tag,
                                        errmsg but the &#92;"$sv_tag&#92;" tag can still &#92;
                                                be used to obtain this information
                                        errmsg from the system.
                                        return 1                # failed to set user value
                                        ;;
                        esac
                        ;;

                * )     # not a special tag - set specified user value
                        ;;
        esac

         
        # Do not allow setting the value for the tag to default value -
        #        the one which comes back when the value is not set
        #       (normally "unknown" but it can be set with -d )
        # This is sometimes attempted accidentally when using sneep -Tv | sh
        #       (as is done in startup/recovery mode)
        # because if the serial is not set, sneep -Tv will produce
        #       sneep -t ChassisSerialNumber -s unknown

        # Instead set value to null to remove the tag, and subsequent queries
        # will return the desired value if all else is the same.
        # (there are cases involving changes to SNEEPPATH or the default value
        #  in which subsequent queries might not return the default value,
        #  but the alternatives are probably worse:
        #  refusal to set the value, or setting it and getting UNKNOWN back)

        # convert setting of default value into erase
        if test "$sv_value" = "$sv_default" ; then
                : convert set with default value into erase for $sv_tag
                # eliminates old, potentially bad data,
                # saves space in eeprom,
                # query for $sv_tag still returns correct (default) value
                sv_value=""
        fi



        if $sv_force_ucase ; then
                # we need a standard to simplify comparisons everywhere else -
                # I choose upper case.  
                # hostids are different - they are hex numbers.

                #       so that leading whitespace goes away
                #       and multiple lines get joined  ]
                sv_value=`echo $sv_value | $tr '[:lower:]' '[:upper:]' `
        fi

        # if we are setting a serial number, sanity check the contents
        if $sv_serial ; then
                if sane_serial "$sv_value" ; then
                        : no problem
                else
                        errmsg Cannot use this value for serial number .
                        return 1
                fi
        else
                # not setting a serial number.

                # if the value is null, then we are deleting it
                # and that is always permissible

                if test -z "$sv_value" ; then
                        : deleting $sv_tag
                else
                        : setting a non-serial tag
                        # We used to 
                        #       Refuse to set value if Serial is not already set.
                        #       This policy is intended to help make certain 
                        #       that eeprom.out contains serial even on x86
                        #       where only 1 entry is allowed, and also ensures
                        #       that sneep serves its primary function first
                        #       rather than just being a handy utility 
                        #       that is used for other purposes.
                        #
                        #  However, the one-line problem in the x86 eeprom
                        #  has been overcome, and more importantly,
                        #  this causes difficult situations occur on occasion
                        #  when tags are being added or removed.
                        #  Better to overlook it now.
                fi
                
        fi
        
        if set_eeprom_value "$sv_value" "$sv_tag" ; then
                : no problem
                sv_eefailed=false       # eeprom update succeeded
                sv_stat=0
        else
                errmsg Could not save $sv_tag in system EEPROM as $thisuser .
                sv_stat=1
                sv_eefailed=true        # eeprom update failed
        fi

        # only update explorer and CST if this is for a serial number
        # and we were able to set it in EEPROM
        sv_restart_psn=false
        if $sv_serial &amp;&amp; test $sv_eefailed = false ; then
                sv_restart_psn=true
                for sv_source in `(IFS=: ; echo $SNEEPPATH)`
                do
                        case "$sv_source" in
                        explorer)
                                if set_explorerconfig_serial "$sv_value" ; then
                                        : no problem
                                else
                                        echo Could not save serial number in &#92;
                                                explorer configuration file 1&gt;&amp;2 
                                        sv_stat=1
                                fi
                                ;;
                        cst)
                                if set_cst_serial "$sv_value" ; then
                                        : no problem
                                else
                                        errmsg Could not send CST change event .
                                fi
                                ;;

                        default )
                                : no need to set "$sv_source"
                                ;;
                        esac
                done
        fi


        # Current policy is:
        # update backup file even if eeprom update failed
        # to overcome eeprom limitations.
        #       Could lead to surprises when values dont match,
        #       but mostly does what you would want it to do

        # Note: set_eeprom_value knows that backup will be set here,
        #       so it does not attempt to do it,
        #       which it would otherwise need to do in order
        #       to properly virtualize the eeprom

        # If eeprom update failed and backup did not,
        # then notify the user so there is less surprise later.

        if backup set "$sv_tag" "$sv_value" &amp;&amp; $sv_eefailed ; then
                errmsg ""
                errmsg Saved "$sv_tag" in backup .
                errmsg ""
        fi

        if test "$sv_restart_psn" = true ; then
                # CR 6726919 : restart SUNWpsn after updating serial
                # This will make serial number in PSN consistent with that in sneep
                restart_psn
        fi

        return $sv_stat
}

: update_archive

update_archive() # updates current boot archive
{
        $tracing &amp;&amp; set -x
        # Before we perform any update activity,
        # check if bootadm exists for this host
        # we need not proceed further if 
        # bootadm is not installed 
        if [ ! -x /usr/sbin/bootadm ]; then
                return 1
        fi
        # Check if there was any attempt made to update
        # eeprom contents before we update the current archive
        # Also, update the boot archive only if solaris/bootenv.rc
        # is listed in the boot archive
        if "$eeupdated" &amp;&amp; bootadm list-archive 2&gt;&amp;1 | grep bootenv.rc &gt;/dev/null;then                               
                # we have all the necessity to update
                # the current boot archive  
                bootadm update-archive &gt;/dev/null
                if [ $? -ne 0 ]; then
                        errmsg ""
                        log -e The boot archive MUST be updated because &#92;
                                 the serial number was updated.
                        log -e The boot archive update failed. Please run &#92;
                                &#92;'bootadm update-archive&#92;' manually.
                        log -e Failure to do this could result in failure &#92;
                                to boot cleanly later.
                        return 1
                fi
        fi
        return 0
}

: sane_serial

sane_serial()   # succeed if the string passed in seems reasonable for a serial
{
        $tracing &amp;&amp; set -x

        ss_value="$1"

        # Serial must be alphanumeric and fairly short
        # delete alphanumerics and see what is left: should be nothing left
        # (also allow hyphen and underscore)
        ss_other=`echo "$ss_value" | $tr  -d '[:alnum:]-_' `
        if test ! -z "$ss_other" -a $override = false ; then 
                errmsg Serial Number must contain only alphanumerics .
                errmsg "  " -F option can force override
                return 1
        fi


        # when it gets this long, warn user at a minimum
        ss_len=`echo "$ss_value"'&#92;c' | wc -c `
        if test $ss_len -gt 15 ; then
                if test $ss_len -gt 20 -a $override = false ; then
                case "$ss_value" in
                        VMware* | VMWARE* )
                                : valid VMware serial is very long
                                override=true
                                ;;
                        * )
                                : not a special case - reject long serial
                                errmsg Setting provided is &#92;
                                        too long for a serial number .
                                errmsg "  " -F option can force override
                                return 1
                                ;;
                esac
                fi
                $override || errmsg &#92;""$ss_value"&#92;" is unusually long &#92;
                                for a serial number .
        fi

        return 0
}

: sane_tag

sane_tag()      # succeed if the passed value is a reasonable tag value
{
        $tracing &amp;&amp; set -x

        st_tag="$1"     # get tag passed as argument

        st_special="@#_+=-"     # special characters allowed in tags


        # must be alphanumeric and fairly short,
        # with a few other characters allowed.
        # Delete the allowable characters and see if anything remains.

        st_other=`echo "$st_tag" | $tr  -d "[:alnum:]$st_special" `
        if test ! -z "$st_other" ; then
                if $override ; then
                        log -e Safety override option has been used &#92;
                                to permit special characters in tag &#92;"$st_tag&#92;"
                else
                        errmsg Only alphanumerics and &#92;"$st_special&#92;" &#92;
                                are allowed in the tag .
                        return 1
                fi
        fi
        return 0
}

: sneep_startup

# perform data integrity checks for system startup
# (assuming we have been called as a startup script)
sneep_startup()         # check serial integrity e.g. at system startup
{                       # and fix if possible

        # check (eeprom) serial against other sources and complain of mismatch
        # fix other sources if eeprom is OK.

        sneeppath=$FullProg     # default path to sneep is to this script
        sneepdir=`dirname $sneeppath`  # default path to related programs


        ssu_problems=false              # no problem so far
        ssu_attempt_repair=false        # if true when finished, update serial

        # find out if backup is valid for this system: 
        # validate backup file without fixing it ; get status (false==bad)
        ssu_goodbackup=false
        if backup validate false ; then
                ssu_goodbackup=true
        else
                ssu_goodbackup=false
                backup validate true    # report and fix the problem
                # at this point, there are no tags in the backup file
        fi


        # get serial from eeprom to check other sources against.
        #       virtual eeprom via backup file is OK, because if we 
        #       went straight to the real eeprom, then in an 
        #       x86 non-global zone (no eeprom access) we would 
        #       always fail to find it in eeprom, and then try to 
        #       recover it from backup, and fail that too

        # If it is set, then proceed to loop below to check other sources.
        # If it is not set, then load from backup if backup is valid

        if ssu_eeprom=`get_value $SERIAL_TAG eeprom ` ; then
                : serial is set in eeprom - check the remaining sources
        else
                : serial is not in eeprom - may have been reset or never set

                # if backup file has the hostid from this system,
                # and has the serial in it, then reload the eeprom from backup

                if $ssu_goodbackup ; then
                        : backup is from this system, check for serial
                        if ssu_bupserial=`backup get $SERIAL_TAG`  ; then
                                : serial is available from backup, load eeprom

                                # we choose to load all values, not just serial
                                log Restoring all sneep data using backup file

                                : start by restoring the serial from backup
                                # so that we do not accidentally 
                                # pick it up from another source
                                # when we do main recovery below
                                if set_value $SERIAL_TAG "$ssu_bupserial" ; then
                                        : serial back in eeprom 
                                        : can continue recovery now
                                else
                                        log -e Unable to restore $SERIAL_TAG &#92;
                                                to eeprom : aborting
                                        # avoids more pointless error messages
                                        exit 1
                                fi

                                # now we try to recover all tags

                                # Follow up with recovering all tags from
                                # backup, or wherever they may be found.

                                # Report commands to set values, send to shell,
                                # ignore stderr in case of complaints on x86
                                # about having room for only one eeprom entry
                                # (but that should no longer happen)

                                $sneeppath $traceflag -FTv | sh 2&gt; $NULLFILE

                                # continue with checks, just to be sure
                                ssu_eeprom=`get_value $SERIAL_TAG eeprom`
                                : after recovery, eeprom serial is $ssu_eeprom
                        else
                                : serial is not in backup, cannot load
                                # missing serial will be reported in loop below
                        fi
                else
                        : backup may not be from this system
                        log -e cannot use backup file to restore missing values &#92;
                                to eeprom
                        # missing serial will be reported in loop below
                fi
        fi


        # for every other serial source, check individually
        #       check eeprom first so that missing eeprom value will
        #       get us out of here early (see below).
        #       Also, we know that we can try to fix other sources      
        #       because eeprom was done first and must have been OK 
        #       or we wouldnt still be in this loop.

        for ssu_source in eeprom `(IFS=: ; echo $SNEEPPATH)`
        do
                : ; : check source $ssu_source against $ssu_eeprom ; : ;

                if ssu_val=`get_value $SERIAL_TAG $ssu_source` ; then
                        : got a value successfully from $ssu_source : $ssu_val
                        # convert lower case to upper case for serial numbers
                        # before checking hardware source against stored serial
                        ssu_val=`echo $ssu_val | $tr '[:lower:]' '[:upper:]' `

                        # see if it matches eeprom   value
                        if test "$ssu_val" != "$ssu_eeprom" ; then
                                log Serial in eeprom &#92;"$ssu_eeprom&#92;" &#92;
                                        does not match serial in &#92;
                                        $ssu_source &#92;"$ssu_val&#92;"
                                ssu_problems=true
                                ssu_attempt_repair=true  # try to fix it later
                        fi
                else
                        : could not get a serial value from $ssu_source
                        case "$ssu_source" in
                        eeprom )
                                log -e Chassis Serial not available &#92;
                                                        from system eeprom
                                ssu_problems=true
                                # cannot repair others from eeprom
                                # if csn in backup, it was repaired above.
                                # We will keep looking for some other source
                                # with data
                                ;;
                        backup )
                                if ngzone ; then
                                  : not expected to be in zone backup
                                else
                                  log Chassis Serial is not in backup file
                                  ssu_problems=true
                                  ssu_attempt_repair=true  # try to fix later
                                fi
                                ;;
                        explorer )
                                # RFE 00056: on startup, sneep should "fix" 
                                #       null serial in explorer
                                # update missing serial if explorer installed
                                $pkginfo -q SUNWexplo &amp;&amp; ssu_attempt_repair=true
                                # CR 6722819- update explorer default even if explorer is not installed
                                for expfile in $explorer_configs ; do
                                        test -f $expfile &amp;&amp; ssu_attempt_repair=true
                                done
                                ;;
                        cst )
                                # RFE 00056 (extension): update missing serial
                                # update missing serial if CST installed
                                $pkginfo -q SUNWcstu &amp;&amp; ssu_attempt_repair=true
                                ;;
                        esac
                fi
        done

        # if it looked like it was fixable, give it a try
        : eeprom valid .  attempt_repair=$ssu_attempt_repair
        if $ssu_attempt_repair ; then

                if $ssu_goodbackup ; then
                        : should go smoothly: eeprom and backup should align
                else
                        # We used to warn of possible introduction of
                        # bad tags from a foreign backup file.
                        # This should never happen now that we reinitialize
                        # the backup as soon as we find it is from another host
                        # After that, there are no tags in the backup.

                        log Warning: cannot use backup file for this recovery
                fi
                        

                # Recover from some data source.
                # Set all tags found in eeprom *and backup*
                # to recover backup and other sources from eeprom.
                # (settings only in the backup will be unchanged, but
                #  will be introduced into eeprom)

                # Report commands to set values, send to shell,
                # ignore stderr in case of complaints on x86
                # about having room for only one eeprom entry

                : get all tags and values
                $sneeppath $traceflag -FTv | sh 2&gt; $NULLFILE
        fi

        # As an additional defense against problems resulting from
        # the one-line nvramrc sometimes created on SPARC by VxVM,
        # we will set the serial number to its current value here.
        # This has the side effect of causing a one-line nvramrc on SPARC
        # to be reformatted into normal multi-line format
        # without changing anything else.
        # Fixes BUG 00039
        if ssu_eeprom=`get_value $SERIAL_TAG eeprom ` ; then
                : set serial again to current eeprom value of $ssu_eeprom
                set_eeprom_value "$ssu_eeprom" $SERIAL_TAG quiet
        fi

        # check and possibly update the explorer plugin
        check_plugin

        return 0        # everything went as well as could be expected
}

: check_plugin

check_plugin()  # check for and possibly update the explorer plugin
{
        cp_sneep_plug=chassis_serial    # sneep plugin name when installed

        # OK if we do not find the plugin installer
        # because some day the plugin may be part of explorer
        # and will be dropped from sneep
        plugindir=$sneepdir
        if [ ! -x $plugindir/install_explorer_plugin ];then

                # We will check if it is a symbolic link. If it is, store the actual to in linkpath
                # Actual path will be the last field in ls -l output
                # Now symbolic link  of /etc/rc2.d/S99sneep looks like ../../opt/SUNWsneep/bin/sneep
                # or symbolic link can be an absolute path like /opt/SUNWsneep/bin/sneep

                if [ -h  $FullProg ]; then   # check if it is a symbolic link
                        linkpath=`ls -l $FullProg | nawk '{print $NF}'`
                        linkpath=`dirname $linkpath`
                        case "$linkpath" in
                                /*)     # absolute path
                                        plugindir=$linkpath
                                        ;;
                                *)      # relative path
                                        plugindir=$sneepdir/$linkpath
                                        ;;
                        esac
                fi
                if [ ! -x $plugindir/install_explorer_plugin ]; then
                        # If you are still unable to find plugindir use this as last resort
                        pkg_path=`pkgparam SUNWsneep BASEDIR 2&gt;$NULLFILE`
                        plugindir=$pkg_path/bin
                        test -x $plugindir/install_explorer_plugin || return 0
               fi
        fi

        # Code will come here only when file install_explorer_plugin exist

        # OK if explorer is not installed
        $pkginfo -q SUNWexplo || return 0

        # explorer is installed.
        # fail if we cannot get the explorer base directory
        expbase=`pkgparam SUNWexplo BASEDIR` || return 1
        
        # find the plugin; BASEDIR has been /opt and /opt/SUNWexplo
        cp_plug=""      # path to sneep plugin for explorer
        for cp_dir in SUNWexplo/tools tools
        do
                cp_plug=$expbase/$cp_dir/$cp_sneep_plug
                test -x $cp_plug &amp;&amp; break
                cp_plug=""
        done
        
        # OK if the plugin was not installed
        #       cp_plug is the plugin path if found
        test -z "$cp_plug" &amp;&amp; return 0

        # plugin and explorer are both present
        # run the installer to update it if necessary
        # ignore the message saying that it is up to date.
        #       other messages might be worth seeing

        $plugindir/install_explorer_plugin 2&gt;&amp;1 | grep -v "is up to date"

        return 0        # cannot return $?, it is from grep
}


: report_tags

report_tags()   # report tags and values; for documentation and recovery
{
        rt_tag="$1"                     # optional tag passed in
        rt_specifictag=${2:-false}      # if true, just do that one tag
                                        # otherwise do them all

        verbose_output=$verbose         # remember whether we want verbose form

        verbose=false                   # turn verbose off to prevent
                                        # extra messages
        if $rt_specifictag ; then

                # tag could be a comma-separated list of tags.
                # split on commas and get unique members
                rt_tags=`( IFS=, ; echo $rt_tag ) `
                rt_alltags=`
                        for rt_t in $rt_tags
                        do
                                # if a short form of $SERIAL_TAG was used,
                                # convert to the full tag name

                                case "$rt_t" in
                                        serial | ser | csn | CSN | psn | PSN )  
                                                echo $SERIAL_TAG ;;
                                *)
                                        echo $rt_t ;;
                                esac
                        done | sort -u
                `
        else
                # No specific tags provided:
                # Collect unique tags from all selected data sources
                # (normally this is the full set, but it could be otherwise)

                # Most sources are just for serial, so we dont even ask.
                # We add serial to eeprom/backup even if it is not there,
                # because we want to report that undesirable condition.

                rt_sources=`(IFS=: ; echo $SNEEPPATH)`
                rt_alltags=`
                    echo "$SERIAL_TAG"  # we assume this for all sources
                    for rt_source in $rt_sources
                    do
                        : ; : collect tags from source $rt_source ; : ;
                        case  "$rt_source" in
                        eeprom )
                                # get any number of tags from eeprom
                                get_eeprom_value '.*' false false true
                                ;;

                        backup )
                                # get all tags from backup
                                backup gettags '.*' ""
                                ;;
                
                        SomethingNewAndVeryUseful )
                                # insert code for any sources which can 
                                # store more than $SERIAL_TAG here
                                :       should never get here
                                ;;

                        *       ) 
                                : assume $SERIAL_TAG for $rt_source
                                ;;
                        esac
                   done
                `  # end rt_alltags=

                # make list of unique tags
                rt_alltags=` echo "$rt_alltags" | sort -u `
        fi

        # if SERIAL_TAG is in the list, make sure that it is first in the output
        # because there is a rule that serial must be set before other tags.
        # If this is a recovery from backup, we have to put serial in eeprom
        # before we try anything else.

        case "$rt_alltags" in
        *${SERIAL_TAG}* )
                # remove serial tag
                rt_alltags=`echo "$rt_alltags" | 
                                grep -v "^$SERIAL_TAG&#92;$" `
                # insert serial tag at beginning of list
                rt_alltags="$SERIAL_TAG $rt_alltags"
                ;;
        esac


        # if the sneep priority path is not the default path,
        # include it in -Tv output  later, so that the sneep commands
        # obey the user's priorities and affect only desired data sources
        if test "$SNEEPPATH" != "$SNEEPPATHDEFAULT" ; then
                rt_prio="-P &#92;"$SNEEPPATH&#92;""
        else
                rt_prio=""
        fi

        # for each tag, print tag and value
        # for verbose printing, include command and parameters to set the value
        for rt_tag in $rt_alltags
        do
                : print value for &#92;""$rt_tag"&#92;"

                rt_val=`get_value "$rt_tag" `

                if $verbose_output ; then
                        # output sneep command in verbose mode

                        $erase &amp;&amp; rt_val=""     # erase value if directed

                        echo $FullProg $rt_prio &#92;
                                -t &#92;""$rt_tag"&#92;""$tab""-s &#92;"$rt_val&#92;""
                else
                        # output tags and values
                        echo &#92;""$rt_tag"&#92;""$tab"&#92;""$rt_val"&#92;"
                fi
        done
        return 0
}

: get_multi

get_multi()     # print list of values with field separator
{               # generally for CSV output to spreadsheet

        gm_tags="$1"    # comma-separated list of tags and keywords to get
        gm_fieldsep="$2"        # field separator; may be null

        : get multiple fields and print with field separator
        gm_fieldvalues=""
        for gm_field in `(IFS="," ; echo $gm_tags )`  # split tags on commas
        do
                : ; : get val for tag &#92;"$gm_field&#92;" ; : ;

                sane_tag "$gm_field" || continue        # skip bad tags

                # handle a few special keywords here
                case "$gm_field" in

                # handle special pseudo-tags for commonly needed information
                        # hostid and hostname we dont want to get from
                        # any other sources so we get them directly
                hostid)         gm_thisval=`get_hostid` ;;
                hostname)       gm_thisval=`get_hostname` ;;

                        # model might be found in smbios or something else
                        # so we use all of the normal sources,
                        # plus the "internal" source
                model)          # get model from data sources if possible,
                                # or by internal synthesis otherwise
                                gm_thisval=`get_value model &#92;
                                        "$SNEEPPATH:internal"  `
                        ;;

                        # handle aliases for serial number tag
                serial | ser |  csn | CSN | psn | PSN  | $SERIAL_TAG )
                                gm_thisval=`get_value "$SERIAL_TAG" ` ;;


                *)      # handle all other tags 
                                gm_thisval=`get_value "$gm_field" ` ;;

                esac

                if test -z "$gm_fieldvalues" ; then
                        gm_fieldvalues="$gm_thisval"
                else
                        gm_fieldvalues="$gm_fieldvalues$gm_fieldsep$gm_thisval"
                fi
        done
        echo "$gm_fieldvalues"
}


model_filter1()         # process model from something like uname -a
{
                sed     -e 's/(.*)/ /g' &#92;
                        -e 's/.*SUNW,//' &#92;
                        -e 's/.*sparc//' &#92;
                        -e 's/.*SPARC-*//' &#92;
                        -e 's/.*i86pc/PC/' &#92;
                        -e 's/.*i[345]86//' &#92;
                        -e 's/Sun //' &#92;
                        -e 's/Ultra-Enterprise[- ]*/E/' &#92;
                        -e 's/Enterprise[ &#92;-]/E/' &#92;
                        -e 's/Ultra-&#92;([1-9][0-9]&#92;)/E&#92;1/' &#92;
                        -e 's/Sun.Fire-* */SF/' &#92;
                        -e 's/SF&#92;([248]&#92;)/V&#92;1/' &#92;
                        -e 's/SFV/V/' &#92;
                        -e '/^E$/d' &#92;
                        -e '/^E[A-Za-z][0-9]/s/^E//'
}

model_filter2()         # process model from something like prtdiag line 1
{
                sed &#92;
                        -e 's/ *( *[Tt][Mm] *)/ /g' &#92;
                        -e 's/ *(.*)/ /g' &#92;
                        -e 's/System Configuration: //' &#92;
                        -e 's/SPARCstation/SS/' &#92;
                        -e 's/SPARC64 [A-Z]//' &#92;
                        -e 's/.*Microsystems[ _]*//' &#92;
                        -e 's/[ _]*Inc[. _]*//' &#92;
                        -e 's/ *[Ss]erver *$//' &#92;
                        -e 's/.*SUNW,//' &#92;
                        -e 's/.*sparc[- ]*//' &#92;
                        -e 's/.*SPARC[- ]*//' &#92;
                        -e 's/.*i86pc *//' &#92;
                        -e 's/,/_/g' &#92;
                        -e 's/.*sun4[a-z]*[ _]*//' &#92;
                        -e 's/Sun.Fire[- ]*/SF/' &#92;
                        -e 's/Sun //' &#92;
                        -e 's/Fujitsu //' &#92;
                        -e 's/Ultra-Enterprise[- ]*/E/' &#92;
                        -e 's/Enterprise[ &#92;-]&#92;([a-zA-Z]&#92;)/&#92;1/' &#92;
                        -e 's/Enterprise[ &#92;-]/E/' &#92;
                        -e 's/Ultra-&#92;([1-9][0-9]&#92;)/E&#92;1/' &#92;
                        -e 's/SF&#92;([248][89][0-9]&#92;)&#92;(R*&#92;)$/V&#92;1&#92;2/' &#92;
                        -e 's/SFV/V/' &#92;
                        -e 's/Netra t/Netra T/' &#92;
                        -e 's/[0-9][0-9]*[- ]slot *//' &#92;
                        -e 's/ model /_/' &#92;
                        -e 's/[ _]*[1-9][0-9]*[Xx][ _]*//' &#92;
                        -e 's/[Ss].*ngine.*CP/CP/' &#92;
                        -e 's/[Ee]ngine_*//' &#92;
                        -e 's/SUN_FIRE_/SF_/' &#92;
                        -e 's/^EE/E/' &#92;
                        -e 's/^SFE/SF/' &#92;
                        -e 's/^SFX/X/' &#92;
                        -e 's/^SFT/T/' &#92;
                        -e 's/^SF_*V/V/' &#92;
                        -e 's/^SF_*X/X/' &#92;
                        -e 's/_[Ww]orkstation//' &#92;
                        -e 's/_Server_Module//' &#92;
                        -e 's/_*UPA&#92;/PCI//' &#92;
                        -e 's/_UPA&#92;/*//' &#92;
                        -e 's/[_ ]*[Ss][Bb][Uu][Ss][- ]*//' &#92;
                        -e '/Ultra_[0-9]/s/tra_/tra/' &#92;
                        -e 's/_T_/_T/' &#92;
                        -e '/^_*/s///' &#92;
                        -e '/^E$/d' &#92;
                        -e 's/^ *//' &#92;
                        -e 's/[_ ]*$//' &#92;
                        -e 's/  */_/g' 
}



get_model()     # fabricate product "model" descriptor
{
        $tracing &amp;&amp; set -x

        # Pull model data from prtdiag 
        #       Take care to consume all prtdiag data with "sed -n 1p"
        #       to avoid "Broken Pipe" error.
        gmod_prtd=`prtdiagf -v | sed -n 1p `
        gmod_prtd=`echo $gmod_prtd | model_filter2 `

        # Pull model data from uname -a
        gmod_uname=`get_uname -a | model_filter1`


        case "$MODEL_SELECT" in
        "" )    # normal, default model processing

                # prtdiag generally gives good results
                gmod_model=$gmod_prtd   
                # if no model from prtdiag, use uname
                test -z "$gmod_model" &amp;&amp; 
                        gmod_model=$gmod_uname   # then uname
                # if no model at this point, fail
                test -z "$gmod_model" &amp;&amp; return 1
                ;;

        # remaining cases are primarily for 
        # testing and simulation

        prtdiag )       # return result from prtdiag
                test -z "$gmod_prtd" &amp;&amp; return 1
                gmod_model=$gmod_prtd
                ;;

        uname )         # return result from uname
                test -z "$gmod_uname" &amp;&amp; return 1
                gmod_model=$gmod_uname
                ;;

        error )         # return error
                return 1
                ;;

        * )             # return specified result
                gmod_model="$MODEL_SELECT"
                ;;
        esac

        test -z "$gmod_model" &amp;&amp; return 1 # no data : fail
        # return value, converting any whitespace to underline
        # and multiple lines to single line (by leaving $gmod_model unquoted below)
        echo $gmod_model | $tr -s '[:blank:]' '[_*]'
        return 0
}





: Begin MAIN

SERIAL_TAG="ChassisSerialNumber"        # tag for serial number in eeprom
DESIREDTAG="$SERIAL_TAG"                # tag to use by default
specified_tag=false                     # if true, tag option was used

serialin=""             # input serial number for setcsn


# If force_ucase is true then force serial numbers into upper case.
# This is the norm, but it can be overridden in the environment : $FORCE_UCASE
force_ucase=${FORCE_UCASE:-true}
test "$FORCE_UCASE" = true || FORCE_UCASE=false # make certain of true or false

defaultdflt=unknown     # what we get back if we cant find what we are after
                        # this can be changed on the command line
defaultval=$defaultdflt 

verbose=false           # if true, tell more about where the data comes from

settingvalue=false      # assume that we are NOT setting a value
override=false          # if true, user can override safety restrictions
                        
allsources=false        # if true, report from all sources

report_tags_too=false   # if true, do nothing but report tags and values

fieldsep=,              # output field separator

erase=false             # if true and used with -T -v, erase data





# before we do anything else, find out if the backup file is valid
# and mark it if it is not valid and cannot be fixed.
#       This avoids extra log messages when we get other backup parameters
backup validate false  || backup invalidate


# the search order for retrieving the data
SNEEPPATHDEFAULT="fserial:eeprom:ipmi:smbios:prtdiag:sms:fruid:prtconf:backup:explorer:cst"

# local override of default path can be stored in backup file as "sneep path"
sneeplocalpath=`backup get "sneep path" ` &amp;&amp; SNEEPPATHDEFAULT="$sneeplocalpath"

SNEEPPATH=${SNEEPPATH:-$SNEEPPATHDEFAULT}       # use environment or default

SNEEP_SYSLOG=${SNEEP_SYSLOG:-`backup get "sneep syslog"`}





# Locate explorer configuration defaults file
#
# list explorer configuration files in order of least to most desirable
# (generally speaking, oldest location to newest)
# and always relative to SIMBASE in case of a simulation.
#
#       Explorer config file formats have changed a few times;
#       only put files in this list for which there is code that understands
#               the format of the serial settings in that file
#
explorer_configs="
        $SIMBASE/etc/opt/SUNWexplo/default/explorer
"

# if the path to an alternate explorer config file has been provided
# in the sneep backup file, then use that instead of the usual path(s)

altexplopath=`backup get "sneep explorerdefaults"`
test ! -z "$altexplopath" &amp;&amp; explorer_configs="$altexplopath"

# If we are doing a simulation AND using an explorer for the data
# then we need the defaults file from the top level of the explorer
# (and this has to override any alternate path from the sneep defaults)
#
# If this is a non-explorer simulation for the current domain,
# then we leave the explorer_configs relative to $SIM_BASE as it already is

if $SIMULATION &amp;&amp; test ! -z "$EXPLO_BASE" ; then
        explorer_configs="$SIMBASE/defaults"
fi





while getopts aeFd:t:Tho:p:P:c:s:Vvx arg
do
        : arg=&#92;""$arg"&#92;"
        case "$arg" in
        
        a)      allsources=true
                verbose=true
                ;;

        e)      erase=true ;;           # use with -T -v

        h|&#92;?)   usage 
                exit 0
                ;;


        F)      override=true
                ;;


        t)              # tag to set or find in EEPROM
                specified_tag=true
                DESIREDTAG="$OPTARG"
                if test -z "$DESIREDTAG" ; then
                        usage
                        errmsg Cannot use null tag with -t option .
                        exit 1
                fi
                ;;

        T)              # report tags in eeprom and backup
                report_tags_too=true
                ;;

        d)              # set tag to use in EEPROM
                defaultval="$OPTARG"    # choose what we get back
                                        # if we find nothing
                ;;

        o)              # set output field separator for multiple fields (-f)
                fieldsep="$OPTARG"
                ;;

        P)      # select data source(s)
                SNEEPPATH="$OPTARG" ; export SNEEPPATH
                ;;

        p)              # print CSN per SMS 1.4 and above
                        # showplatform -p csn

                case "$Prog" in 
                *showplatform)   ;;     # OK - called as showplatform

                *)      errmsg " -p" is reserved for &#92;"showplatform&#92;" interface
                        exit 1
                        ;;
                esac

                pword="$OPTARG"
                case "$pword" in
                        csn)
                                # always insist on serial with "-p csn"
                                # SMS returns "Unknown" if unknown
                                defaultval=Unknown
                                csn=`get_value $SERIAL_TAG `
                                showplat "$csn"
                                exit 0
                        ;;
                *)
                        usage 
                        exit 1
                        ;;
                esac
                ;;

        c )             # setcsn -c &lt;serialnumber&gt;

                # We will set the serial number if "setcsn" is the name
                # but otherwise, this is a mistake

                value="$OPTARG"
                case "$Prog" in
                *setcsn)        # set serial if name is setcsn
                        set_value "$SERIAL_TAG" "$value"
                        exitval=$?
                        ;;
                *)
                        errmsg " -c" is reserved for &#92;"setcsn&#92;" interface
                        exitval=1
                        ;;
                esac
                exit $exitval
                ;;

        s)      # set an arbitrary value for an arbitrary tag
                # &lt;anyname&gt; [-t anytag] -s value

                value="$OPTARG"
                settingvalue=true
                ;;

        v)      verbose=true ;;

        V)      echo "$version" ; exit 0 
                ;;

        x)                      # super-secret tracing option
                set -x 
                tracing=true    
                traceflag="-x"  # used when sneep is called from sneep
                

        esac
done
shift `expr $OPTIND - 1`

        

: arg 1 is &#92;"$1&#92;"

if $report_tags_too ; then
        allsources=false        # report only one source per tag/value
        report_tags "$DESIREDTAG" $specified_tag        # report tags and values
        exit $?
fi


# This script can be linked into the system startup script directories
# such as /etc/init.d and /etc/rc2.d .
# Perform start/stop functionality if called with correct keyword
case "$1" in
        stop)                   exit 0 ;;       # no stop action
        start | restart)        sneep_startup $1 ; exit $? ;;
        test)                   return ;;       # for unit tests (avoids "exit" call)
esac


if $settingvalue ; then

        if $override ; then
                errmsg You have chosen to override safety checks,
                errmsg and you accept full responsibility for any negative effects.

        fi

        # Where prtdiag cache is created, trap is used to capture common signals.
        # For SIGHUP, SIGINT and SIGTERM, the trap defined there will just remove 
        # prtdiag cache (temporary file). So functionality remains same as here. 
        # Otherwise, we may leave prtdiag cache behind in case of HUP, INT and TERM.
        trap "" 1 2 15          # ignore signals HUP, INT and TERM
                                # to prevent loss of data from interrupts
                                # in the middle of multi-step updates

        set_value "$DESIREDTAG" "$value"
        exitval=$?
        # We might have just updated eeprom.
        # If eeprom was successfully updated, the archive must be rebuilt.
        # As bootadm may take some time to complete,
        # let the main program exit.
        # Archive will be updated in the background
        # failure,if any will be logged
        ( update_archive 2&gt;&amp;1 &amp; ) 2&gt;/dev/null 
        cleanup
        exit $exitval
else
        # get value for each tag and then output as a list
        get_multi "$DESIREDTAG" "$fieldsep"
        cleanup
        exit $?
fi

# 
#


---=[ /etc/rc3.d/S13kdc.master ]=-----------------------------------------

#!/bin/sh
#ident  "@(#)kdc.master 1.1     01/03/19 SMI"
#
# Copyright (c) 1997-2000 by Sun Microsystems, Inc.
# All rights reserved.
#

BINDIR=/usr/lib/krb5
KDC_CONF_DIR=/etc/krb5
PRINCIPALDB=/var/krb5/principal.db #default db file path
KADM5ACL=/etc/krb5/kadm5.acl #default kadm5.acl file path

if [ ! -d $BINDIR ]; then
        exit
fi

#return success (0) if an acl_file that is specified in the kdc.conf
#(or if not specified, the default one), is configured ("_default_realm_"
#replaced with the local realm name).  else return failure (1).
kadm5_acl_configed() {

        #check acl_file relation values in the kdc.conf
        ACLFILES=`awk -F= '/^[  ]*acl_file/ &#92;
                    { printf("%s", $2)}' $KDC_CONF_DIR/kdc.conf`

        if [ -n "$ACLFILES" ]; then
                for FILE in $ACLFILES; do
                        if [ -s $FILE ]; then
                                grep -v '^[     ]*#' $FILE | &#92;
                                    grep  '_default_realm_' &gt; /dev/null 2&gt;&amp;1
                                if [ $? -gt 0 ]; then
                                        return 0
                                fi
                        fi
                done
        else
                #check the default kadm5.acl file
                if [ -s $KADM5ACL ]; then
                        grep -v '^[     ]*#' $KADM5ACL | &#92;
                            grep  '_default_realm_' &gt; /dev/null 2&gt;&amp;1
                        if [ $? -gt 0 ]; then
                                return 0
                        fi
                fi

        fi

        return 1  #failure
}

#return success (0) if a db exists in a path specified in kdc.conf or
#if none are specified in the kdc.conf, check the default path.  else
#return failure (1).
db_exists() {

        #check db names specified in the kdc.conf
        DBNAMES=`awk -F= '/^[   ]*database_name/ &#92;
                    { printf("%s", $2)}' $KDC_CONF_DIR/kdc.conf`

        if [ -n "$DBNAMES" ]; then
                for DB in $DBNAMES; do
                        if [ -s ${DB}.db ]; then
                                return 0
                        fi
                done
        else
                #check default db path
                if [ -s $PRINCIPALDB ]; then
                        return 0
                fi
        fi

        return 1  #failure
}

# Start/stop processes required for master KDC

case "$1" in
'start')

        if [ -s $KDC_CONF_DIR/kdc.conf ]; then

                #make sure the kdc.conf is configured
                grep '^[        ]*_[_]*default_realm_' &#92;
                    $KDC_CONF_DIR/kdc.conf &gt; /dev/null 2&gt;&amp;1

                if [ $? -gt 0 ] &amp;&amp; kadm5_acl_configed &amp;&amp; db_exists &amp;&amp; &#92;
                    [ -x $BINDIR/kadmind ]; then
                        $BINDIR/kadmind
                fi
        fi
        ;;

'stop')
        pkill -x -u 0 kadmind
        ;;
*)
        echo "Usage: $0 { start | stop }"
        ;;
esac


---=[ /etc/rc3.d/S14kdc ]=------------------------------------------------

#!/bin/sh
#ident  "@(#)kdc        1.1     01/03/19 SMI"
#
# Copyright (c) 1997-2000 by Sun Microsystems, Inc.
# All rights reserved.
#

BINDIR=/usr/lib/krb5
KDC_CONF_DIR=/etc/krb5

# krb5kdc's default db path
PRINCIPALDB=/var/krb5/principal.db

if [ ! -d $BINDIR ]; then                       # /usr not mounted
        exit
fi

#return success (0) if a db exists in a path specified in kdc.conf or
#if none are specified in the kdc.conf, check the default path.  else
#return failure (1).
db_exists() {

        #check db names specified in the kdc.conf
        DBNAMES=`awk -F= '/^[   ]*database_name/ &#92;
                    { printf("%s", $2)}' $KDC_CONF_DIR/kdc.conf`

        if [ -n "$DBNAMES" ]; then
                for DB in $DBNAMES; do
                        if [ -s ${DB}.db ]; then
                                return 0
                        fi
                done
        else
                #check default db path
                if [ -s $PRINCIPALDB ]; then
                        return 0
                fi
        fi

        return 1  #failure
}


# Start/stop processes required for KDC

case "$1" in
'start')

        if [ -s $KDC_CONF_DIR/kdc.conf ]; then

                #make sure kdc.conf is configured
                grep '^[        ]*_[_]*default_realm_' &#92;
                    $KDC_CONF_DIR/kdc.conf &gt; /dev/null 2&gt;&amp;1

                if [ $? -gt 0 ] &amp;&amp; db_exists &amp;&amp; &#92;
                    [ -x $BINDIR/krb5kdc ]; then
                        $BINDIR/krb5kdc
                fi
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 krb5kdc
        ;;
*)
        echo "Usage: $0 { start | stop }"
        ;;
esac


---=[ /etc/rc3.d/S15nfs.server ]=-----------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#pragma ident   "@(#)nfs.server 1.35    01/11/27 SMI"

[ ! -d /usr/bin ] &amp;&amp; exit

# Start/stop processes required for server NFS

case "$1" in
'start')
        # Clean up old /etc/dfs/sharetab - remove all nfs entries

        if [ -f /etc/dfs/sharetab ] ; then
                &gt;/tmp/sharetab.$$
                while read path res fstype opts desc; do
                        [ "x$fstype" != xnfs ] &amp;&amp; &#92;
                                echo "$path&#92;t$res&#92;t$fstype&#92;t$opts&#92;t$desc" &#92;
                                &gt;&gt;/tmp/sharetab.$$
                done &lt;/etc/dfs/sharetab

                # Retain the last modification time so that it can be truncated
                # by the share command when it is called first time after boot.

                /usr/bin/touch -r /etc/dfs/sharetab /tmp/sharetab.$$
                /usr/bin/mv -f /tmp/sharetab.$$ /etc/dfs/sharetab
        fi

        # If /etc/dfs/dfstab exists and has non-blank or non-commented-out
        # lines, then run shareall to export them, and then start up mountd
        # and nfsd if anything was successfully exported.

        startnfsd=0
        if [ -f /etc/dfs/dfstab ] &amp;&amp; /usr/bin/egrep -v '^[       ]*(#|$)' &#92;
            /etc/dfs/dfstab &gt;/dev/null 2&gt;&amp;1; then

                /usr/sbin/shareall -F nfs
        
                if /usr/bin/grep -s nfs /etc/dfs/sharetab &gt;/dev/null; then
                        startnfsd=1
                fi
        fi

        # Start nfslogd if /etc/nfs/nfslogtab exists and is not empty
        # This means that either we just shared new filesystems with
        # logging enabled, or they were shared in the previous session
        # and their working buffers haven't been processed yet.

        if [ -s /etc/nfs/nfslogtab ]; then
                /usr/lib/nfs/nfslogd &amp;
        fi

        # If /etc/rmmount.conf exists and contains share commands
        # then start up mountd and nfsd

        if [ $startnfsd -eq 0 -a -f /etc/rmmount.conf ] &amp;&amp; &#92;
            /usr/bin/grep '^[   ]*share' &#92;
            /etc/rmmount.conf &gt; /dev/null 2&gt;&amp;1; then
                startnfsd=1
        fi

        # Options for nfsd are now set in /etc/default/nfs
        if [ $startnfsd -ne 0 ]; then
                /usr/lib/nfs/mountd
                /usr/lib/nfs/nfsd
        elif [ ! -n "$_INIT_RUN_LEVEL" ]; then
                echo "NFS service was not started because" &#92;
                        "/etc/dfs/dfstab has no entries."
        fi

        # When the system comes up umask is not set; so set the mode now

        [ -f /etc/dfs/sharetab ] &amp;&amp; /usr/bin/chmod 644 /etc/dfs/sharetab

        ;;

'stop')
        /usr/bin/pkill -x -u 0 &#92;
            '(nfsd|mountd)'

        if /usr/bin/grep -s nfs /etc/dfs/sharetab &gt;/dev/null; then
                /usr/sbin/unshareall -F nfs
        fi

        #
        # Wait up to 10 seconds for nfslogd to gracefully handle SIGHUP
        #
        /usr/bin/pkill -HUP -x -u 0 nfslogd
        wtime=10

        while [ $wtime -gt 0 ]; do
                /usr/bin/pgrep -x -u 0 nfslogd &gt;/dev/null || break
                wtime=`expr $wtime - 1`
                sleep 1
        done

        #
        # Kill nfslogd more forcefully if it did not shutdown during
        # the grace period
        #
        if [ $wtime -eq 0 ]; then
                /usr/bin/pkill -TERM -x -u 0 nfslogd
        fi

        ;;
*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S16boot.server ]=----------------------------------------

#!/sbin/sh
#
# Copyright (c) 2000 by Sun Microsystems, Inc.
# All rights reserved.
#
# ident "@(#)boot.server        1.1     00/12/20 SMI"

[ ! -d /usr/bin ] &amp;&amp; exit

# Start/stop processes required for boot params server

case "$1" in
'start')

        # If /tftpboot exists become a boot server

        if [ -d /tftpboot ]; then
                /usr/sbin/in.rarpd -a
                /usr/sbin/rpc.bootparamd
        fi

        # If /rplboot exists become a boot server for x86 clients

        if [ -d /rplboot ]; then
                /usr/sbin/rpld -a
                if [ ! -d /tftpboot ]; then
                        /usr/sbin/in.rarpd -a
                        /usr/sbin/rpc.bootparamd
                fi
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 &#92;
            '(rpc&#92;.bootparamd|in&#92;.rarpd|rpld)'

        ;;
*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S34dhcp ]=-----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1996-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)dhcp       1.18    01/01/18 SMI"

# Make sure that /usr is mounted
[ ! -d /usr/bin ] &amp;&amp; exit 1

case "$1" in
'start')
        if [ -x /usr/lib/inet/in.dhcpd ]; then
                if [ -f /etc/inet/dhcpsvc.conf ]; then
                        eval `grep '^DAEMON_ENABLED=' /etc/inet/dhcpsvc.conf`
                        GO=`echo ${DAEMON_ENABLED} | /usr/bin/cut -c1`
                        if [ "${GO}" = "t" -o "${GO}" = "T" ]; then
                                /usr/lib/inet/in.dhcpd &gt; /dev/console 2&gt;&amp;1
                        fi
                fi
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 in.dhcpd
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S50apache ]=---------------------------------------------

#!/sbin/sh
#
# Copyright 2004 Sun Microsystems, Inc.  All rights reserved.
# Use subject to license terms.
#
#ident  "@(#)apache.sh  1.3     04/07/18 SMI"

APACHE_HOME=/usr/apache
CONF_FILE=/etc/apache/httpd.conf
PIDFILE=/var/run/httpd.pid
TOMCAT_CF=/var/apache/tomcat/conf/server.xml

if [ ! -f ${CONF_FILE} ]; then
        exit 0
fi

# see if we need to start/stop tomcat also

CF=`egrep '^[ &#92;t]*include[ &#92;t]*/etc/apache/tomcat.conf' $CONF_FILE`
if [ -n "$CF" -a -f $TOMCAT_CF ]; then
        TOMCAT=yes
        TC_USER=`egrep '^[ &#92;t]*User[ &#92;t]' $CONF_FILE | nawk '{print $2}'`
else
        TOMCAT=no
fi

case "$1" in
start)
        /bin/rm -f ${PIDFILE}
        cmdtext="starting"
        if [ "x$TOMCAT" != xno ]; then
                (CATALINA_HOME=${APACHE_HOME}/tomcat; export CATALINA_HOME; &#92;
                    CATALINA_BASE=/var/apache/tomcat; export CATALINA_BASE; &#92;
                    JAVA_HOME=/usr/java; export JAVA_HOME; &#92;
                    /bin/su $TC_USER -c &#92;
                    "$CATALINA_HOME/bin/startup.sh") &#92;
                    &gt;/dev/null 2&gt;&amp;1
        fi
        ;;
restart)
        cmdtext="restarting"
        ;;
stop)
        cmdtext="stopping"
        if [ "x$TOMCAT" != xno ]; then
                (CATALINA_HOME=${APACHE_HOME}/tomcat; export CATALINA_HOME; &#92;
                    CATALINA_BASE=/var/apache/tomcat; export CATALINA_BASE; &#92;
                    JAVA_HOME=/usr/java; export JAVA_HOME; &#92;
                    /bin/su $TC_USER -c &#92;
                    "$CATALINA_HOME/bin/shutdown.sh") &#92;
                    &gt;/dev/null 2&gt;&amp;1
        fi
        ;;
*)
        echo "Usage: $0 {start|stop|restart}"
        exit 1
        ;;
esac

echo "httpd $cmdtext."

/bin/sh -c "${APACHE_HOME}/bin/apachectl $1" &gt;/dev/null 2&gt;&amp;1
status=$?

if [ $status != 0 ]; then
        echo "exit status $status"
        exit 1
fi
exit 0


---=[ /etc/rc3.d/S52imq ]=------------------------------------------------

#!/sbin/sh
#
# @(#)imq.sh    1.8 03/05/19
#
# Copyright 2002 Sun Microsystems, Inc. All Rights Reserved
# SUN PROPRIETARY/CONFIDENTIAL
# Use is subject to license terms.
#
# Permission to use, copy, modify, and distribute this software
# and its documentation for NON-COMMERCIAL purposes and without
# fee is hereby granted provided that this copyright notice
# appears in all copies. Please refer to the file "copyright.html"
# for further important copyright and licensing information.
#
# SUN MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF
# THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE, OR NON-INFRINGEMENT. SUN SHALL NOT BE LIABLE FOR
# ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR
# DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
#
######
#
# Sun ONE Message Queue (TM) Broker init.d script
#
# This script starts/stops the iMQ broker process as part of 
# normal UNIX system operation based on the value of the
# AUTOSTART in the /etc/imq/imqbrokerd.conf file.
#
# To debug this script, set the environmental variable
# DEBUG to 1 (true)
#
# e.g.
# env DEBUG=1 /etc/init.d/imq start
#
# This file is installed as:
#     /etc/init.d/imq
#
# It is linked into the rc*.d directories as:
#       # ln imq /etc/rc3.d/S52imq
#       # ln imq /etc/rc0.d/K15imq
#       # ln imq /etc/rc1.d/K15imq
#       # ln imq /etc/rc2.d/K15imq
#
# The S52imq link in /etc/rc3.d will start the broker when
# the system enters multiuser mode. The K15imq links in
# rc0.d, rc1.d and rc2.d will bring down the broker when the
# system is brought down to single user, or administrative modes.
#
# The script looks at the file:  /etc/imq/imqbrokerd.conf to
# determine whether or not the broker should be started.

###### START LOCAL CONFIGURATION
# You may wish to modify these variables to suit your local configuration

# IMQ_HOME   Location of the Sun ONE Message Queue (TM) installation
IMQ_HOME=/
export IMQ_HOME

# IMQ_VARHOME
# Set IMQ_VARHOME if you wish to designate an alternate
# location for storing broker specific data like:
#       - persistent storage
#       - SSL certificates
#       - user passwd database
#
# IMQ_VARHOME=/var/opt/SUNWjmq
# export IMQ_VARHOME

# BROKER_OPTIONS        Default Options to pass to the broker executable
# additional arguments can be defined in the ARGS property
#
BROKER_OPTIONS="-silent"

#
# ETC HOME
IMQ_ETCHOME="/etc/imq"
#
# imqbrokerd.conf
CONF_FILE=$IMQ_ETCHOME/imqbrokerd.conf
#
#
###### END LOCAL CONFIGURATION

EXECUTABLE=imqbrokerd


# error "description"
error () {
  echo $0: $* 2&gt;&amp;1
  exit 1
}

# find the named process(es)
findproc() {
  pid=`/usr/bin/ps -ef |
  /usr/bin/grep -w $1 | 
  /usr/bin/grep -v grep |
  /usr/bin/awk '{print $2}'`
  echo $pid
}

# kill the named process(es) (borrowed from S15nfs.server)
killproc() {
   pid=`findproc $1`
   [ "$pid" != "" ] &amp;&amp; kill $pid
}

#
# require /usr/bin and iMQ
#
if [ ! -d /usr/bin ]; then
   error "Cannot find /usr/bin."

elif [ ! -d "$IMQ_HOME" ]; then
   error "Cannot find Sun ONE Message Queue (TM) in IMQ_HOME ($IMQ_HOME)."
fi




#
# Start/stop IMQ Broker
#
case "$1" in
'start')
         if [ -f $CONF_FILE ] ; then 
            AUTOSTART=`grep -v "^#" $CONF_FILE | grep AUTOSTART | cut -c11-`
            RESTART=`grep -v "^#" $CONF_FILE | grep RESTART | cut -c9-`
            ARGS=`grep -v "^#" $CONF_FILE | grep ARGS | cut -c6-`
            if [ $AUTOSTART ] ; then 
                if [ $AUTOSTART = "YES" -o $AUTOSTART = "Yes" -o $AUTOSTART = "yes" -o $AUTOSTART = "Y" -o $AUTOSTART = "y" ] ; then
                    START=1
                    REASON="The AUTOSTART property is turned on (set to $AUTOSTART) in  $CONF_FILE. The ARGS property is set to &#92;"$ARGS&#92;""

                elif [ $AUTOSTART = "NO" -o $AUTOSTART = "No" -o $AUTOSTART = "no" -o $AUTOSTART = "N" -o $AUTOSTART = "n" ] ; then
                    START=0
                    REASON="The AUTOSTART property is turned off (set to $AUTOSTART) in $CONF_FILE"
                else
                    START=0
                    REASON="The AUTOSTART property is not set to an expected value (value is $AUTOSTART)"
                fi
            else 
                START=0
                REASON="AUTOSTART was not set in $CONF_FILE"
            fi
         else
            START=0
            REASON="$CONF_FILE, the configuration file, was not found"
         fi

         # Handle restart option
         if [ ! -z "$RESTART" ]; then
             if [ $RESTART = "YES" ]; then
                BROKER_OPTIONS="-autorestart $BROKER_OPTIONS"
             fi
         fi

         if [ $START -eq 0 ] ; then
             if [ $DEBUG ] ; then
                 echo $IMQ_HOME/bin/$EXECUTABLE is not being started because [ $REASON ]
             fi
             exit 0
         else
             if [ $DEBUG ] ; then
                 echo $IMQ_HOME/bin/$EXECUTABLE is starting because [ $REASON ]
             fi
         fi

         if [ $DEBUG ] ; then 
             echo "Command &#92;c"
             echo "$IMQ_HOME/bin/$EXECUTABLE -bgnd $BROKER_OPTIONS  $ARGS... &#92;c"
         fi
         cd $IMQ_HOME

         # Check if the server is already running.
         if [ -n "`findproc $EXECUTABLE`" ]; then
             if [ $DEBUG ] ; then 
                echo "$EXECUTABLE is already running."
             fi
             exit 0
         fi

         bin/$EXECUTABLE -bgnd $BROKER_OPTIONS $ARGS &amp;
         if [ $DEBUG ] ; then 
             echo "done"
         fi

        ;;

'stop')
        if [ $DEBUG ] ; then
            echo "Stopping $EXECUTABLE ... &#92;c"
        fi
        if [ -z "`findproc $EXECUTABLE`" ]; then
            if [ $DEBUG ] ; then
                echo "$EXECUTABLE is not running."
            fi
           exit 0
        fi
        killproc $EXECUTABLE
        if [ $DEBUG ] ; then
            echo "done"
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        ;;
esac


---=[ /etc/rc3.d/S76snmpdx ]=---------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)init.snmpdx        1.13    01/11/02 SMI"

SNMP_RSRC=/etc/snmp/conf/snmpdx.rsrc

case "$1" in
'start')
        if [ -f ${SNMP_RSRC} -a -x /usr/lib/snmp/snmpdx ]; then
                if /usr/bin/egrep -v '^[          ]*(#|$)' ${SNMP_RSRC} &gt; &#92;
                    /dev/null 2&gt;&amp;1; then
                        /usr/lib/snmp/snmpdx -y -c /etc/snmp/conf
                else
                        #
                        # Do not start snmpdx if snmpdx.rsrc contents are
                        # trivial.
                        #
                        exit 0
                fi

        fi
        ;;

'stop')
        /usr/bin/pkill -9 -x -u 0 '(snmpdx|snmpv2d|mibiisa)'
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S77dmi ]=------------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1996-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)init.dmi   1.16    01/11/02 SMI"

DMI_CONF=/etc/dmi/conf/dmispd.conf

case "$1" in
'start')
        if [ -f ${DMI_CONF} -a -x /usr/lib/dmi/dmispd ]; then
                if /usr/bin/egrep -v '^[          ]*(#|$)' ${DMI_CONF} &gt; &#92;
                    /dev/null 2&gt;&amp;1; then
                        /usr/lib/dmi/dmispd
                else
                        #
                        # Do not start dmi if dmispd.conf contents are trivial.
                        #
                        exit 0
                fi
        fi

        if [ -f /etc/dmi/conf/snmpXdmid.conf -a &#92;
            -x /usr/lib/dmi/snmpXdmid ]; then

                if /usr/bin/pgrep -x -u 0 snmpdx &gt;/dev/null 2&gt;&amp;1; then
                        [ -z "$_INIT_UTS_NODENAME" ] &amp;&amp; &#92;
                            _INIT_UTS_NODENAME=`/usr/bin/uname -n`
                        `/usr/lib/dmi/snmpXdmid -s $_INIT_UTS_NODENAME`
                fi
        fi

        if [ -x /etc/dmi/ciagent/ciinvoke ]; then
                dirents=`echo /etc/dmi/ciagent/*`
                if [ "$dirents" != /etc/dmi/ciagent/ciinvoke ]; then
                        /etc/dmi/ciagent/ciinvoke
                fi
        fi
        ;;

'stop')
        /usr/bin/pkill -9 -x -u 0 '(snmpXdmid|dmispd)'
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S80mipagent ]=-------------------------------------------

#!/sbin/sh
#
# ident "@(#)mipagent   1.1     99/11/06 SMI"
#
# Copyright (c) 1999 by Sun Microsystems, Inc.
# All rights reserved.
#

case "$1" in
'start')
        [ -f /etc/inet/mipagent.conf ] &amp;&amp; /usr/lib/inet/mipagent &gt;/dev/msglog 2&gt;&amp;1 &amp;
        ;;
'stop')
        /usr/bin/pkill -x -u 0 -P 1 mipagent
        ;;
*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S81volmgt ]=---------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1997-1998 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)volmgt     1.6     98/12/14 SMI"

case "$1" in
'start')
        if [ -f /etc/vold.conf -a -f /usr/sbin/vold ]; then
                echo 'volume management starting.'
                /usr/sbin/vold &gt;/dev/msglog 2&gt;&amp;1 &amp;
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 vold
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;

esac
exit 0


---=[ /etc/rc3.d/S84appserv ]=--------------------------------------------

#!/sbin/sh
#
# Copyright (c) 2002 by Sun Microsystems, Inc.
# Use is subject to license terms.
#

if [ ! -s /etc/appserver/domains.bin ]; then
        exit 0
fi

case "$1" in
'start')
        /usr/sbin/asadmin start-appserv
        ;;

'stop')
        /usr/sbin/asadmin stop-appserv
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S89psncollector ]=---------------------------------------

#!/sbin/sh
# 
# /etc/rc3.d/S89psncollector

case "$1" in
'start')
        if [ -x /usr/lib/inet/psncollector ]
        then
                /usr/lib/inet/psncollector
        fi

        ;;

'stop')
        /usr/bin/pkill -9 -x '(psncollector)'
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S89stosreg ]=--------------------------------------------

#!/sbin/sh
#
# Copyright (c) 2009 by Sun Microsystems, Inc.
# All rights reserved.
#
# /etc/rc3.d/S89stosreg

case "$1" in
'start')
    # registers the operating system into the service tag registry

    STCLIENT=/usr/bin/stclient

    # note that we reference Solaris 11 in here, this corresponds to Nevada
    # and is included since we do have a product reference in swordfish
    # and because it comes out as 5.11 when running the uname -r command

    # check that we've got the client, if not, then we can't do anything
    if [ -x ${STCLIENT} ]; then
        INSERT="false"
        UPDATE="false"
        UPDATE_INSTANCE_URN=""
        CSN=`cat /var/run/csn.out 2&gt; /dev/null`

        # determine which urn corresponds to the current environment
        TARGET_URN=""
        if [ `uname -s` = "SunOS" ]; then
            uname=`uname -p`
            case `uname -r` in
            5.11)
                TARGET_URN="urn:uuid:6df19e63-7ef5-11db-a4bd-080020a9ed93"
                ;;
            5.10)
                TARGET_URN="urn:uuid:5005588c-36f3-11d6-9cec-fc96f718e113"
                ;;
            5.9)
                TARGET_URN="urn:uuid:4f82caac-36f3-11d6-866b-85f428ef944e"
                ;;
            5.8)
                TARGET_URN="urn:uuid:a7a38948-2bd5-11d6-98ce-9d3ac1c0cfd7"
                ;;
            *)
                ;;
            esac
        fi

        # the list of possible urns (solaris 8,9,10,11)
        URN_LIST="urn:uuid:6df19e63-7ef5-11db-a4bd-080020a9ed93 urn:uuid:5005588c-36f3-11d6-9cec-fc96f718e113 urn:uuid:4f82caac-36f3-11d6-866b-85f428e

        for urn in ${URN_LIST}; do
            TEST=`${STCLIENT} -f -t ${urn} 2&gt; /dev/null`

            if [ "${TEST}" = "No records found" ]; then
                # there isn't a product entered into the registry
                # we might need to insert, depends if we match our TARGET_URN
                if [ "${urn}" = "${TARGET_URN}" ]; then
                    INSERT="true"
                fi
            elif [ "${TEST}" = "Record not found" ]; then
                # there isn't a product entered into the registry
                # we might need to insert, depends if we match our TARGET_URN
                if [ "${urn}" = "${TARGET_URN}" ]; then
                    INSERT="true"
                fi
            elif [ "${TEST}" = "" ]; then
                # there isn't a product entered into the registry
                # we might need to insert, depends if we match our TARGET_URN
                if [ "${urn}" = "${TARGET_URN}" ]; then
                    INSERT="true"
                fi
            else
                # found a matching product in the registry, need to determine
                # if we should remove it or not (needs to be removed if it doesn't
                # match our TARGET_URN)
                if [ "${urn}" != "${TARGET_URN}" ]; then
                    for remove_urn in ${TEST}; do
                        out=`${STCLIENT} -d -i ${remove_urn} 2&gt; /dev/null`
                    done
                else
                    UPDATE_INSTANCE_URN=${TEST}
                    EXISTING_SN=`${STCLIENT} -g -i ${TEST} 2&gt; /dev/null | grep container | nawk -F "container=" '{ print $2 }'`
                    # check if the CSN we found is different from the existing serial number
                    # if they are different and the CSN we found isn't empty, then update
                    # using the new CSN
                    if [ "${EXISTING_SN}" != "${CSN}" ]; then
                        if [ "${CSN}" != "" ]; then
                            UPDATE="true"
                        fi
                    fi
                fi
            fi
        done

        if [ "${UPDATE}" = "true" ]; then
            _p_name=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "product_name=" | nawk -F "=" '{ print $2 }'`
            _p_version=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "product_version=" | nawk -F "=" '{ print $2 }'`
            _p_urn=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "product_urn=" | nawk -F "=" '{ print $2 }'`
            _p_p_urn=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "product_parent_urn=" | nawk -F "=" '{ print $2 }'`
            _p_p_name=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "product_parent=" | nawk -F "=" '{ print $2 }'`
            _p_inst_id=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "product_defined_inst_id=" | nawk -F "=" '{ print $2 }'`
            _p_vendor=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "product_vendor=" | nawk -F "=" '{ print $2 }'`
            _p_arch=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "platform_arch=" | nawk -F "=" '{ print $2 }'`
            _p_source=`${STCLIENT} -g -i ${UPDATE_INSTANCE_URN} | grep "source=" | nawk -F "=" '{ print $2 }'`
            output=`${STCLIENT} -d -i ${UPDATE_INSTANCE_URN}`
            output=`${STCLIENT} -a -i ${UPDATE_INSTANCE_URN} -p "${_p_name}" -e ${_p_version} -t ${_p_urn} -S "${_p_source}" -F ${_p_p_urn} -P "${_p_p
        fi

        if [ "${INSERT}" = "true" ]; then
            if [ `uname -s` = "SunOS" ]; then
                uname=`uname -p`
                case `uname -r` in
                5.11)
                    zone=$CSN
                    if [ "${CSN}" = "" ]; then
                        zone="global"
                        if [ -x /usr/bin/zonename ]; then
                            zone=`/usr/bin/zonename`
                        fi
                    fi

                    output=`${STCLIENT} -a -p "Solaris 11 Operating System" -e 11 -t urn:uuid:6df19e63-7ef5-11db-a4bd-080020a9ed93 -S SUNWstosreg -F u
                    ;;
                5.10)
                    zone=$CSN
                    if [ "${CSN}" = "" ]; then
                        zone="global"
                        if [ -x /usr/bin/zonename ]; then
                            zone=`/usr/bin/zonename`
                        fi
                    fi

                    output=`${STCLIENT} -a -p "Solaris 10 Operating System" -e 10 -t urn:uuid:5005588c-36f3-11d6-9cec-fc96f718e113 -S SUNWstosreg -F u
                    ;;
                5.9)
                    zone=$CSN
                    if [ "${CSN}" = "" ]; then
                        zone="global"
                    fi
                    output=`${STCLIENT} -a -p "Solaris 9 Operating System" -e 9   -t urn:uuid:4f82caac-36f3-11d6-866b-85f428ef944e -S SUNWstosreg -F u
                    ;;
                5.8)
                    zone=$CSN
                    if [ "${CSN}" = "" ]; then
                        zone="global"
                    fi
                    output=`${STCLIENT} -a -p "Solaris 8 Operating System" -e 8   -t urn:uuid:a7a38948-2bd5-11d6-98ce-9d3ac1c0cfd7 -S SUNWstosreg -F u
                    ;;
                *)
                    exit 0
                    ;;
                esac
            fi
        fi
    fi
        ;;

'stop')
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S90samba ]=----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 2001 by Sun Microsystems, Inc
# All rights reserved.
#
#ident  "@(#)samba      1.1     01/09/24 SMI"

case "$1" in
start)
        [ -f /etc/sfw/smb.conf ] || exit 0

        /usr/sfw/sbin/smbd -D
        /usr/sfw/sbin/nmbd -D
        ;;
stop)
        pkill smbd
        pkill nmbd
        ;;
*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rc3.d/S90sthwreg ]=--------------------------------------------

#!/sbin/sh
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# $Id: sthwreg,v 1.4 2009/09/10 21:24:49 pschow Exp $

#
# Create a Service Tag for the underlying hardware system.
#

case "$1" in
'start')
   # Only run in the global zone and if Service Tag support is available
   if [ ! -x /usr/bin/stclient ]; then
       exit 0
   fi

   ;; # Fall through 

'stop')
    exit 0
    ;;

*)
    echo "Usage: $0 { start | stop }"
    exit 1
    ;;
esac

x86() {
        smbios=/usr/sbin/smbios
        if [ -x ${smbios} ]; then
                prod=`${smbios} -t 1 | grep '^[ &#92;t]*Product' |
                        awk -F':' '{print $2}' |
                        sed -e 's/^[ ]*//' 2&gt;/dev/null`
                prodman=`${smbios} -t 1 | grep '^[ &#92;t]*Manufacturer' |
                        awk -F':' '{print $2}' |
                        sed -e 's/^[ ]*//' 2&gt;/dev/null`
        fi
        prodplat="x86/x64"
}

sparc() {
        prodman="Sun Microsystems"
        if [ x"sun4us" = x"${unamem}" ]; then
                prodman="Fujitsu"
        fi

        prod=`uname -i`
    if [ "${prod}" = "SUNW,SPARC-Enterprise" -o "${prod}" = "sun4v" ]; then
        prtconf=/usr/sbin/prtconf
        if [ -x ${prtconf} ]; then
            banner=`${prtconf} -b |
                awk /banner-name:/'{print substr($0,13)}' |
                sed 's/^ *//'`
            if [ "X${banner}" != "X" ]; then
                prod=${banner}
            fi
        fi
    fi
        prodplat="SPARC"
}

# Make a list of all Service Tag instance IDs that are associated
# with Hardware Tags
hw_urns() {
    STOUT=/var/tmp/tags.$$

    /usr/bin/stclient -x &gt; ${STOUT} 2&gt;/dev/null
    if [ $? -eq 0 -a -f ${STOUT} -a -s ${STOUT} ]; then
        awk 'BEGIN { 
    in_tag = 0
    START_INSTANCE_URN="&lt;instance_urn&gt;"
    STOP_INSTANCE_URN="&lt;/instance_urn&gt;"
}

in_tag == 0 &amp;&amp; /[ &#92;t]*&lt;service_tag&gt;/ {
   in_tag = 1
   urn = ""
   hardware_tag = 0
}

in_tag ==1 &amp;&amp; /[ &#92;t]*&lt;&#92;/service_tag&gt;/ {
   in_tag = 0

   if (hardware_tag == 1 &amp;&amp; length(urn) &gt; 0) {
       printf("%s&#92;n", urn)
   }
}

in_tag == 1 &amp;&amp; match($0, START_INSTANCE_URN) != 0 {
    startpos = index($0, START_INSTANCE_URN)
    endpos = index($0, STOP_INSTANCE_URN)

    if (startpos != 0 &amp;&amp; endpos != 0) {
        taglen = length(START_INSTANCE_URN)
        urnlen = endpos - startpos - taglen
        urn = substr($0, startpos + taglen,  urnlen)
    } 
}

in_tag == 1 &amp;&amp; /&lt;source&gt;SUNWsthwreg&lt;&#92;/source&gt;/ {
    hardware_tag = 1
}' ${STOUT}  &gt; $1 2&gt;/dev/null

        # Only return a file if we cleanly obtained a list of URNs
        if [ $? -ne 0 ]; then
            /bin/rm -f $1
        fi
        /bin/rm -f ${STOUT}

    fi
}



unamem=`uname -m`
unamep=`uname -p`
prodman="unknown"
prodplat="unknown"
prod=

maketag=true
case $unamep in
 i386)
        x86
        ;;
 sparc)
        sparc
        ;;
 *)
        maketag=false
        ;;
esac

if $maketag; then

        urn="urn:st:hwreg:${prod}:${prodman}:${unamep}"

        /usr/bin/stclient -f -t "${urn}" 1&gt;/dev/null 2&gt;&amp;1
        if [ $? -ne 0 ]; then

        # First remove any existing hardware tag(s)

        urnlist=/var/tmp/hw-urnlist.$$
        hw_urns $urnlist

        if [ -f $urnlist -a -s $urnlist ]; then
            cat $urnlist | while read urn
            do
                /usr/bin/stclient -d -i "${urn}" 1&gt;/dev/null 2&gt;&amp;1
            done
            /bin/rm -f ${urnlist}
        fi

        # Create the tag

                /usr/bin/stclient -a -p "${prod} ${prodplat} System" &#92;
          -e " " &#92;
          -t "${urn}" &#92;
          -S SUNWsthwreg &#92;
          -F "urn:st:hwreg:System:${prodman}" &#92;
          -P "System" &#92;
          -m "${prodman}" &#92;
          -A "${unamep}" &#92;
          -z global 1&gt;/dev/null
        fi
fi

exit 0


---=[ /etc/rc3.d/S91rc.patrol ]=------------------------------------------

#!/sbin/sh
#####################################################################################
# (#) rc.patrol.redirect     1.3     03/25/11 14:23:53
#####################################################################################
# SCCS Location: /home/local/sccs/PACKAGING/UNIX/LIpatrol/common.V3/patrol.custom
#####################################################################################
#
# this is a fix for unable to run rc in ksh
# rc.patrol is redirected

PATH=$PATH:/usr/bin:/usr/sbin:/usr/local/bin:/bin:/sbin
export PATH

PATROL_BASE=`ls -l /usr/adm/patrol_base | awk '{print $11}'`

/bin/ksh $PATROL_BASE/PATROL/lib/bin/rc.patrol ${1}


---=[ /etc/rcS.d/S10cvc ]=------------------------------------------------

#! /sbin/sh
#
#ident  "@(#)cvc.sh     1.16    00/10/18 SMI"
#
# Copyright (c) 1999-2000 by Sun Microsystems, Inc.
# All rights reserved.
#
# Startup script for Network Based Console I/O
#

case "$1" in
'start')
        platform=${_INIT_UTS_PLATFORM:-`/sbin/uname -i`}
        starfire="SUNW,Ultra-Enterprise-10000"
        starcat="SUNW,Sun-Fire-15000" 
        if [ ${platform} = "${starfire}" -o ${platform} = "${starcat}" ]; then
                if [ -x /platform/${platform}/lib/cvcd ]; then 
                        /platform/${platform}/lib/cvcd
                fi
        fi
        ;;

'stop')
        /usr/bin/pkill -9 -x -u 0 cvcd
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rcS.d/S29wrsmcfg ]=--------------------------------------------

#!/sbin/sh
#
# Copyright (c) 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)wrsmcfg    1.2     01/08/09 SMI"

CMD="/platform/sun4u/sbin/wrsmconf"

platform=${_INIT_UTS_PLATFORM:-`/sbin/uname -i`}
serengeti="SUNW,Sun-Fire"
starcat="SUNW,Sun-Fire-15000"

case "$1" in
'start')
        if [ ${platform} = "${serengeti}" -o ${platform} = "${starcat}" ]; then
                $CMD start
        fi
        ;;

'stop')
        if [ ${platform} = "${serengeti}" -o ${platform} = "${starcat}" ]; then
                $CMD stop
        fi
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ /etc/rcS.d/S30network.sh ]=-----------------------------------------

#!/sbin/sh
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&amp;T.
# All rights reserved.
#
# THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&amp;T
# The copyright notice above does not evidence any
# actual or intended publication of such source code.
#
# Copyright 2005 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)network    1.18    05/06/14 SMI"

# Make sure that the libraries essential to this stage of booting can be found.
LD_LIBRARY_PATH=/etc/lib export LD_LIBRARY_PATH

#
# Cause ifconfig to not automatically start in.mpathd when IPMP groups are
# configured.  This is not strictly necessary but makes it so that in.mpathd
# will always be started explicitly from /etc/init.d/inetinit, when we're
# sure that /usr is mounted.
#
SUNW_NO_MPATHD= export SUNW_NO_MPATHD

#
# A number of interface lists are used by the script.
#
# Inet_list, list of IPv4 interfaces.
# Inet_plumbed, list of plumbed IPv4 interfaces.
# Inet_failed, list of IPv4 interfaces that failed to plumb.
# Inet6_list, list of IPv6 interfaces.
# Inet6_plumbed, list of plumbed IPv6 interfaces.
# Inet6_failed, list of IPv6 interfaces that failed to plumb.
#
unset inet_list inet_plumbed inet_failed &#92;
        inet6_list inet6_plumbed inet6_failed
#
# get_physical interface
#
# Return physical interface corresponding to the given logical
# interface.
#
get_physical()
{
        ORIGIFS="$IFS"
        IFS="${IFS}:"
        set -- $1
        IFS="$ORIGIFS"

        echo $1
}

#
# get_logical interface
#
# Return logical interface number.  Zero will be returned
# if there is no explicit logical device number.
#
get_logical()
{
        ORIGIFS="$IFS"
        IFS="${IFS}:"
        set -- $1
        IFS="$ORIGIFS"

        if [ -z "$2" ]; then
                echo 0
        else
                echo $2
        fi
}

#
# if_comp if1 if2
#
# Compare Interfaces.  Do the physical interface names and logical interface
# numbers match?
#
if_comp()
{
        [ "`get_physical $1`" = "`get_physical $2`" ] &amp;&amp; &#92;
                [ `get_logical $1` -eq `get_logical $2` ]
}
        
#
# physical_comp if1 if2
# 
# Do the two devices share a physical interface?
#
physical_comp()
{
        [ "`get_physical $1`" = "`get_physical $2`" ]
}

#
# in_list op item list
#
# Is "item" in the given list?  Use "op" to do the test, applying it to
# "item" and each member of the list in turn until it returns success.
#
in_list()
{
        op=$1
        item=$2
        shift 2

        while [ $# -gt 0 ]; do
                $op $item $1 &amp;&amp; return 0
                shift
        done

        return 1
}

#
# get_group_from_hostname interface type
#
# Return all group settings from hostname file for a given interface.
#
# Example:
#       get_group_from_hostname  hme0 inet
#
get_group_from_hostname()
{
        case "$2" in
                inet) file=/etc/hostname.$1
                        ;;
                inet6) file=/etc/hostname6.$1
                        ;;
                *)
                        return
                        ;;
        esac

        [ -r "$file" ] || return 

        #
        # Read through the hostname file looking for group settings
        # There may be several group settings in the file.  It is up
        # to the caller to pick the right one (i.e. the last one).
        #
        while read line; do
                [ -z "$line" ] &amp;&amp; continue
                /sbin/ifparse -s "$2" $line
        done &lt; "$file" | while read one two three; do
                [ "$one" = "group" ] &amp;&amp; echo "$two"
        done
}

#
# get_group_for_type interface type list
#
# Look through the set of hostname files associated with the same physical
# interface as "interface", and determine which group they would configure.
# Only hostname files associated with the physical interface or logical
# interface zero are allowed to set the group.
#
get_group_for_type()
{
        physical=`get_physical $1`

        type=$2
        group=""

        #
        # The last setting of the group is the one that counts, which is
        # the reason for the second while loop.
        #
        shift 2
        while [ $# -gt 0 ]; do
                if if_comp "$physical" $1; then 
                        get_group_from_hostname $1 $type
                fi
                shift
        done | while :; do
                read next || {
                        echo "$group"
                        break
                }
                group="$next"
        done
}

#
# get_group interface [ configured | failed ]
#
# If there is both an inet and inet6 version of an interface, the group
# could be set in either set of hostname files.
#
# Inet6 is configured after inet, so if the group is set in both
# sets of hostname files, the inet6 file wins.
#
# The "configured" argument should be used to get the group for
# an interface that has been plumbed into the stack and configured.  Use
# the "failed" argument to get the group for an interface that failed to
# plumb.
#
get_group()
{
        group=""

        case "$2" in
                configured)
                        group=`get_group_for_type $1 inet6 $inet6_plumbed`
                        ;;
                failed)
                        group=`get_group_for_type $1 inet6 $inet6_list`
                        ;;
                *)
                        return
                        ;;
        esac

        if [ -z "$group" ]; then
                if [ "$2" = configured ]; then
                        group=`get_group_for_type $1 inet $inet_plumbed`
                else
                        group=`get_group_for_type $1 inet $inet_list`
                fi
        fi

        echo $group
}

#
# get_standby_from_hostname interface type
# 
# Return any "standby" or "-standby" flags in the hostname file.
#
# Example:
#       get_standby_from_hostname hme0 inet6
#
#
get_standby_from_hostname()
{
        case "$2" in
                inet) file=/etc/hostname.$1
                        ;;
                inet6) file=/etc/hostname6.$1
                        ;;
                *)
                        return
                        ;;
        esac

        [ -r "$file" ] || return

        #
        # There may be several instances of the "standby" and
        # "-standby" flags in the hostname file.  It is up to
        # the caller to pick the correct one.
        #
        while read line; do
                [ -z "$line" ] &amp;&amp; continue
                /sbin/ifparse -s "$2" $line
        done &lt; "$file" | while read one two; do
                [ "$one" = "standby" ] || [ "$one" = "-standby" ] &#92;
                        &amp;&amp; echo "$one"
        done 
}

#
# get_standby_for_type interface type plumbed_list
#
# Look through the set of hostname files associated with the same physical
# interface as "interface", and determine whether they would configure
# the interface as a standby interface.
#
get_standby_for_type()
{

        physical=`get_physical $1`
        type=$2

        final=""

        #
        # The last "standby" or "-standby" flag is the one that counts,
        # which is the reason for the second while loop.
        #
        shift 2
        while [ $# -gt 0 ]; do
                if [ "`get_physical $1`" = "$physical" ]; then 
                        get_standby_from_hostname $1 $type
                fi
                shift
        done | while :; do
                read next || {
                        echo "$final"
                        break
                }
                final="$next"
        done
}

#
# is_standby interface
#
# Determine whether a configured interface is a standby interface.
#
# Both the inet and inet6 hostname file sets must be checked.
# If "standby" or "-standby" is set in the inet6 hostname file set,
# don't bother looking at the inet set.
#
is_standby()
{
        standby=`get_standby_for_type $1 inet6 $inet6_plumbed`

        if [ -z "$standby" ]; then
                standby=`get_standby_for_type $1 inet $inet_plumbed`
        fi

        # The return value is the value of the following test.
        [ "$standby" = "standby" ]
}

#
# get_alternate interface plumbed_list
#
# Look for a plumbed interface in the same group as "interface".
# A standby interface is preferred over a non-standby interface.
#
# Example:
#       get_alternate hme0 $inet_plumbed
#
get_alternate()
{
        mygroup=`get_group $1 failed`
        [ -z "$mygroup" ] &amp;&amp; return

        maybe=""

        shift
        while [ $# -gt 0 ]; do
                group=`get_group $1 configured`
                if [ "$group" = "$mygroup" ]; then
                        if is_standby $1; then
                                get_physical $1
                                return
                        else
                                [ -z "$maybe" ] &amp;&amp; maybe=$1
                        fi
                fi
                shift
        done

        get_physical $maybe
}

#
# doDHCPhostname interface
# Pass to this function the name of an interface.  It will return
# true if one should enable the use of DHCP client-side host name
# requests on the interface, and false otherwise.
#
doDHCPhostname()
{
        if [ -f /etc/dhcp.$1 ] &amp;&amp; [ -f /etc/hostname.$1 ]; then
                set -- `shcat /etc/hostname.$1`
                [ $# -eq 2 -a "$1" = "inet" ]
                return $?      
        fi
        return 1
}

#
# inet_process_hostname processor [ args ]
#
# Process an inet hostname file.  The contents of the file
# are taken from standard input. Each line is passed
# on the command line to the "processor" command.
# Command line arguments can be passed to the processor.
#
# Examples:
#       inet_process_hostname /sbin/ifconfig hme0 &lt; /etc/hostname.hme0
#       
#       inet_process_hostname /sbin/ifparse -f &lt; /etc/hostname.hme0
#
# If there is only line in an hostname file we assume it contains
# the old style address which results in the interface being brought up 
# and the netmask and broadcast address being set.
#
# If there are multiple lines we assume the file contains a list of
# commands to the processor with neither the implied bringing up of the
# interface nor the setting of the default netmask and broadcast address.
#
inet_process_hostname()
{
        if doDHCPhostname $2; then
                :
        else
                #
                # Redirecting input from a file results in a sub-shell being
                # used, hence this outer loop surrounding the "multiple_lines"
                # and "ifcmds" variables.
                #
                while :; do
                        multiple_lines=false
                        ifcmds=""

                        while read line; do
                                if [ -n "$ifcmds" ]; then
                                        #
                                        # This handles the first N-1
                                        # lines of a N-line hostname file.
                                        #
                                        $* $ifcmds
                                        multiple_lines=true
                                fi
                                ifcmds="$line"
                        done

                        #
                        # If the hostname file is empty or consists of only
                        # blank lines, break out of the outer loop without
                        # configuring the newly plumbed interface.
                        #
                        [ -z "$ifcmds" ] &amp;&amp; break
                        if [ $multiple_lines = false ]; then
                                # The traditional single-line hostname file.
                                ifcmds="$ifcmds netmask + broadcast + up"
                        fi

                        #
                        # This handles either the single-line case or
                        # the last line of the N-line case.
                        #
                        $* $ifcmds
                        break
                done
        fi
}

#
# inet6_process_hostname processor [ args ]
#
# Process an inet6 hostname file.  The contents of the file
# are taken from standard input. Each line is passed
# on the command line to the "processor" command.
# Command line arguments can be passed to the processor.
#
# Examples:
#       inet6_process_hostname /sbin/ifconfig hme0 inet6 &lt; /etc/hostname6.hme0
#       
#       inet6_process_hostname /sbin/ifparse -f inet6 &lt; /etc/hostname6.hme0
#
inet6_process_hostname()
{
        while read ifcmds; do
                if [ -n "$ifcmds" ]; then
                        $* $ifcmds
                fi
        done
}

#
# Process interfaces that failed to plumb.  Find an alternative
# interface to host the addresses.  For IPv6, only static addresses
# defined in hostname6 files are moved, autoconfigured addresses are
# not moved.
#
# Example:
#       move_addresses inet6
#
move_addresses()
{
        type="$1"
        eval "failed=&#92;"&#92;$${type}_failed&#92;""
        eval "plumbed=&#92;"&#92;$${type}_plumbed&#92;""
        eval "list=&#92;"&#92;$${type}_list&#92;""
        process_hostname="${type}_process_hostname"
        processed=""

        if [ "$type" = inet ]; then
                echo "moving addresses from failed IPv4 interfaces:&#92;c"
                zaddr="0.0.0.0"
                hostpfx="/etc/hostname"
        else
                echo "moving addresses from failed IPv6 interfaces:&#92;c"
                zaddr="::"
                hostpfx="/etc/hostname6"
        fi

        set -- $failed
        while [ $# -gt 0 ]; do
                in_list if_comp $1 $processed &amp;&amp; { shift; continue; }

                alternate="`get_alternate $1 $plumbed`"
                if [ -z "$alternate" ]; then
                        in_list physical_comp $1 $processed || { 
                                echo " $1 (couldn't move, no" &#92;
                                        "alternative interface)&#92;c"
                                processed="$processed $1"
                        }
                        shift
                        continue
                fi
                #
                # The hostname files are processed twice.  In the first
                # pass, we are looking for all commands that apply
                # to the non-additional interface address.  These may be
                # scattered over several files.  We won't know
                # whether the address represents a failover address
                # or not until we've read all the files associated with the
                # interface.

                # In the first pass through the hostname files, all
                # additional logical interface commands are removed.
                # The remaining commands are concatenated together and
                # passed to ifparse to determine whether the 
                # non-additional logical interface address is a failover
                # address.  If it as a failover address, the
                # address may not be the first item on the line,
                # so we can't just substitute "addif" for "set".
                # We prepend an "addif $zaddr" command, and let
                # the embedded "set" command set the address later.     
                #
                /sbin/ifparse -f $type `
                                for item in $list; do
                                        if_comp $1 $item &amp;&amp; &#92;
                                        $process_hostname /sbin/ifparse &#92;
                                        $type &lt; $hostpfx.$item 
                                        done  | while read three four; do
                                        [ "$three" != addif ] &amp;&amp; &#92;
                                                echo "$three $four &#92;c"
                                done` | while read one two; do
                                        [ -z "$one" ] &amp;&amp; continue
                                        line="addif $zaddr $one $two"
                                        /sbin/ifconfig $alternate $type &#92;
                                                -standby $line &gt;/dev/null
                                done

                #
                # In the second pass, look for the the "addif" commands
                # that configure additional failover addresses.  Addif
                # commands are not valid in logical interface hostname
                # files.
                #
                if [ "$1" = "`get_physical $1`" ]; then
                        $process_hostname /sbin/ifparse -f $type &#92;
                        &lt;$hostpfx.$1 | while read one two; do
                        [ "$one" = addif ] &amp;&amp; &#92;
                                /sbin/ifconfig $alternate $type -standby &#92;
                                    addif $two &gt;/dev/null
                        done
                fi

                in_list physical_comp $1 $processed || { 
                        echo " $1 (moved to $alternate)&#92;c"
                        processed="$processed $1"
                }
                shift
        done
        echo "."
}

#
# Configure the software loopback driver. The network initialization is
# done early to support diskless and dataless configurations.
#
/sbin/ifconfig lo0 plumb 127.0.0.1 up

#
# If the system was net booted by DHCP, hand DHCP management off to the
# DHCP agent (ifconfig communicates to the DHCP agent through the loopback
# interface).
#
if [ -n "$_INIT_NET_IF" -a "$_INIT_NET_STRATEGY" = "dhcp" ]; then
        /sbin/dhcpagent -a 
fi

#
# The network initialization is done early to support diskless and dataless
# configurations.  For IPv4 interfaces that were configured by the kernel (e.g.
# those on diskless machines) and not configured by DHCP, reset the netmask
# using the local "/etc/netmasks" file if one exists, and then reset the
# broadcast address based on the netmask.
#
/sbin/ifconfig -auD4 netmask + broadcast +

#
# All the IPv4 and IPv6 interfaces are plumbed before doing any interface
# configuration.  This prevents errors from plumb failures getting
# mixed in with the configured interface lists that the script outputs.
#

#
# Get the list of IPv4 interfaces to configure by breaking
# /etc/hostname.* into separate args by using "." as a shell separator
# character.
#
interface_names="`echo /etc/hostname.*[0-9] 2&gt;/dev/null`"
if [ "$interface_names" != "/etc/hostname.*[0-9]" ]; then
        ORIGIFS="$IFS"
        IFS="$IFS."
        set -- $interface_names
        IFS="$ORIGIFS"
        while [ $# -ge 2 ]; do
                shift
                if [ "$1" = "xx0" ]; then
                        #
                        # For some unknown historical reason the xx0
                        # ifname is ignored.
                        #
                        shift
                        continue
                fi
                if [ $# -gt 1 -a "$2" != "/etc/hostname" ]; then
                        while [ $# -gt 1 -a "$1" != "/etc/hostname" ]; do
                                shift
                        done
                else
                        inet_list="$inet_list $1"
                        shift
                fi
        done
fi

#
# Get the list of IPv6 interfaces to configure by breaking
# /etc/hostname6.* into separate args by using "." as a shell separator
# character.
#
interface_names="`echo /etc/hostname6.*[0-9] 2&gt;/dev/null`"
if [ "$interface_names" != "/etc/hostname6.*[0-9]" ]; then
        ORIGIFS="$IFS"
        IFS="$IFS."
        set -- $interface_names
        IFS="$ORIGIFS"
        while [ $# -ge 2 ]; do
                shift
                if [ $# -gt 1 -a "$2" != "/etc/hostname6" ]; then
                        while [ $# -gt 1 -a "$1" != "/etc/hostname6" ]; do
                                shift
                        done
                else
                        inet6_list="$inet6_list $1"
                        shift
                fi
        done
fi

#
# Step through the IPv4 interface list and try to plumb every interface.
# Generate list of plumbed and failed IPv4 interfaces.
#
if [ -n "$inet_list" ]; then
        set -- $inet_list
        while [ $# -gt 0 ]; do
                /sbin/ifconfig $1 plumb
                if /sbin/ifconfig $1 inet &gt;/dev/null 2&gt;&amp;1; then
                        inet_plumbed="$inet_plumbed $1"
                else
                        inet_failed="$inet_failed $1"
                fi
                shift
        done
fi

#
# If there is at least one IPv6 interface configure the IPv6 loopback.
# Step through the IPv6 interface list and plumb every interface.
# Generate list of plumbed and failed IPv6 interfaces
#
if [ -n "$inet6_list" ]; then
        /sbin/ifconfig lo0 inet6 plumb ::1 up

        set -- $inet6_list
        while [ $# -gt 0 ]; do
                /sbin/ifconfig $1 inet6 plumb up
                if /sbin/ifconfig $1 inet6 &gt;/dev/null 2&gt;&amp;1; then
                        inet6_plumbed="$inet6_plumbed $1"
                else
                        inet6_failed="$inet6_failed $1"
                fi
                shift
        done
fi

#
# Process the /etc/hostname.* files of plumbed IPv4 interfaces.
# If an /etc/hostname file is not present or is empty, the ifconfig
# auto-dhcp / auto-revarp command will attempt to set the address,
# later.
# If /etc/hostname.lo0 exists the loop below will do additional
# configuration of lo0.
#
if [ -n "$inet_plumbed" ]; then
        echo "configuring IPv4 interfaces:&#92;c"
        set -- $inet_plumbed
        while [ $# -gt 0 ]; do
                inet_process_hostname /sbin/ifconfig $1 inet &#92;
                    &lt;/etc/hostname.$1 &gt;/dev/null
                echo " $1&#92;c"
                shift
        done
        echo "."
fi

#
# Process the /etc/hostname6.* files of plumbed IPv6 interfaces.
# If /etc/hostname6.lo0 exists the loop below will do
# additional configuration of lo0.
#
if [ -n "$inet6_plumbed" ]; then
        echo "configuring IPv6 interfaces:&#92;c"
        set -- $inet6_plumbed
        while [ $# -gt 0 ]; do
                inet6_process_hostname /sbin/ifconfig $1 inet6 &#92;
                    &lt;/etc/hostname6.$1 &gt;/dev/null
                echo " $1&#92;c"
                shift
        done
        echo "."
fi

# Run DHCP if requested. Skip boot-configured interface.
interface_names="`echo /etc/dhcp.*[0-9] 2&gt;/dev/null`"
if [ "$interface_names" != '/etc/dhcp.*[0-9]' ]; then
        #
        # First find the primary interface. Default to the first
        # interface if not specified. First primary interface found
        # "wins". Use care not to "reconfigure" a net-booted interface
        # configured using DHCP. Run through the list of interfaces
        # again, this time trying DHCP.
        #
        firstif=
        primary=
        ORIGIFS="$IFS"
        IFS="${IFS}."
        set -- $interface_names

        while [ $# -ge 2 ]; do
                shift
                [ -z "$firstif" ] &amp;&amp; firstif=$1

                for i in `shcat /etc/dhcp&#92;.$1`; do
                        if [ "$i" = primary ]; then
                                primary=$1
                                break
                        fi
                done

                [ -n "$primary" ] &amp;&amp; break
                shift
        done

        [ -z "$primary" ] &amp;&amp; primary="$firstif"
        cmdline=`shcat /etc/dhcp&#92;.${primary}`

        if [ "$_INIT_NET_IF" != "$primary" ]; then
                echo "starting DHCP on primary interface $primary"
                /sbin/ifconfig $primary auto-dhcp primary $cmdline

                #
                # diskfull machine which uses dhcp. Set strategy for
                # the use of the rest of this run level.
                #
                _INIT_NET_STRATEGY="dhcp"
                export _INIT_NET_STRATEGY
        fi

        set -- $interface_names

        while [ $# -ge 2 ]; do
                shift
                cmdline=`shcat /etc/dhcp&#92;.$1`
                if [ "$1" != "$primary" -a &#92;
                    "$1" != "$_INIT_NET_IF"  ]; then
                        echo "starting DHCP on interface $1"
                        /sbin/ifconfig $1 dhcp start wait 0 $cmdline
                fi
                shift
        done
        IFS="$ORIGIFS"
        unset ORIGIFS
fi

# In order to avoid bringing up interfaces that have
# intentionally been left down, perform RARP only if the system
# has no configured hostname in /etc/nodename
hostname="`shcat /etc/nodename 2&gt;/dev/null`"
if [ "$_INIT_NET_STRATEGY" = "rarp" -o -z "$hostname" ]; then
        /sbin/ifconfig -adD4 auto-revarp netmask + broadcast + up
fi

#
# If DHCP was used on a primary interface then set the hostname
# that was returned. If no hostname was returned, set the name
# to be "unknown". The hostname must be set to something, because
# tooltalk will hang unless the name can be locally resolved.
# Sendmail also requires the name to be resolvable locally.
# Later, in inetsvc, we create a name "unknown" and create a entry
# in the local /etc/inet/hosts file pairing "unknown" with the IP
# address assigned by DHCP. The use of bootparams as a fallback
# for all non-DHCP cases provides compatibility with the
# behavior of the system before netstrategy was introduced.
#
case "$_INIT_NET_STRATEGY" in
        "dhcp") hostname=`/sbin/dhcpinfo Hostname` ;;
        "rarp") hostname=`/sbin/hostconfig -h -p bootparams`
                trap 'intr=1' 2 3
                while [ -z "$hostname" -a ! -f /etc/.UNCONFIGURED -a &#92;
                    -z "$intr" ]; do
                        echo "re-trying host configuration..."
                        # Restrict this to IPv4 interfaces.
                        /sbin/ifconfig -adD4 auto-revarp up
                        hostname=`/sbin/hostconfig -h -p bootparams`
                done
                trap 2 3 ;;
        "none") hostname="`shcat /etc/nodename 2&gt;/dev/null`"
                        if [ -z "$hostname" ]; then
                                hostname=`/sbin/hostconfig -h -p bootparams`
                        fi ;;
esac

#
# If the netstrategy was unsuccessful and we haven't got a locally configured
# name, default to "unknown"
#
if [ -z "$hostname" ]; then
        hostname="`shcat /etc/nodename 2&gt;/dev/null`"
        if [ -z "$hostname" ]; then
                hostname="unknown"
        fi
fi

/sbin/uname -S $hostname

#
# Process IPv4 and IPv6 interfaces that failed to plumb.
# Find an alternative interface to host the addresses.
#
[ -n "$inet_failed" ] &amp;&amp; move_addresses inet

[ -n "$inet6_failed" ] &amp;&amp; move_addresses inet6

echo "Hostname: `/sbin/uname -n`"

# Reset the library path now that we are past the critical stage
LD_LIBRARY_PATH=; export LD_LIBRARY_PATH
# Restore standard ifconfig in.mpathd behavior.
unset SUNW_NO_MPATHD


---=[ /etc/rcS.d/S30rootusr.sh ]=-----------------------------------------

#!/sbin/sh
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&amp;T.
# All rights reserved.
#
# THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&amp;T
# The copyright notice above does not evidence any
# actual or intended publication of such source code.
#
# Copyright (c) 1996-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)rootusr    1.32    01/10/29 SMI"

# Make sure that the libraries essential to this stage of booting can be found.
LD_LIBRARY_PATH=/etc/lib; export LD_LIBRARY_PATH

#
# Root is already mounted (by the kernel), but still needs to be checked,
# possibly remounted and entered into mnttab. First mount /usr read only
# if it is a separate file system. This must be done first to allow
# utilities such as fsck and setmnt to reside on /usr minimizing the space
# required by the root file system.
#
exec &lt; $vfstab; readvfstab "/usr"

if [ -n "$mountp" ]; then
        if [ "$fstype" = cachefs ]; then
                #
                # Mount without the cache initially.  We'll enable it
                # later at remount time.  This lets us avoid
                # teaching the statically linked mount program about
                # cachefs.  Here we determine the backfstype.
                # This is not pretty, but we have no tools for parsing
                # the option string until we get /usr mounted...
                #
                case "$mntopts" in
                *backfstype=nfs*)
                        cfsbacktype=nfs
                        ;;
                *backfstype=hsfs*)
                        cfsbacktype=hsfs
                        ;;
                *)
                        echo 'invalid vfstab entry for /usr'
                        cfsbacktype=nfs
                        ;;
                esac
                /sbin/mount -F $cfsbacktype -o ro $special $mountp
        else
                #
                # Must use -o largefiles here to ensure the read-only mount
                # does not fail as a result of having a large file present
                # on /usr. This gives fsck a chance to fix up the largefiles
                # flag before we remount /usr read-write.
                #
                if [ "x$mntopts" = x- ]; then
                        mntopts='ro,largefiles'
                else
                        checkopt largefiles $mntopts
                        if [ "x$option" != xlargefiles ]; then
                                mntopts="largefiles,$mntopts"
                        fi

                        checkopt ro $mntopts
                        if [ "x$option" != xro ]; then
                                mntopts="ro,$mntopts"
                        fi

                        #
                        # Requesting logging on a read-only mount
                        # causes errors to be displayed, so remove
                        # "logging" from the list of options for now.
                        # The read-write mount performed later will
                        # specify the logging option if appropriate.
                        #

                        checkopt logging $mntopts
                        if [ "x$option" = xlogging ]; then
                                mntopts="$otherops"
                        fi
                fi

                /sbin/mount -o $mntopts /usr
        fi
fi

#
# Also mount /boot now so that things like keymap.sh can access 
# boot properties through eeprom.  Readonly isn't required because
# /boot (and other pcfs filesystems) aren't fsck'ed at boot yet.  
# Also, we don't account for caching /boot as it must be on a local
# disk.  So what's in vfstab is fine as it stands; just look to see 
# if it's there and avoid the mount if not.
#
exec &lt; $vfstab; readvfstab "/boot"

if [ -n "$mountp" ]; then
        /sbin/mount /boot
fi

#
# Update kernel driver.conf cache with new files on from /usr
#
/usr/sbin/devfsadm -I

[ -f /etc/.dynamic_routing ] &amp;&amp; /usr/bin/rm -f /etc/.dynamic_routing

# Reset the library path now that we are past the critical stage
LD_LIBRARY_PATH=; export LD_LIBRARY_PATH

# If we need the consadm daemon, start it as soon as /usr/lib becomes available.
[ -r /etc/consadm.conf ] &amp;&amp; [ -x /usr/sbin/consadmd ] &amp;&amp; /usr/sbin/consadmd &amp;


---=[ /etc/rcS.d/S33keymap.sh ]=------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&amp;T.
# All rights reserved.
#
# THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&amp;T
# The copyright notice above does not evidence any
# actual or intended publication of such source code.
#
# Copyright (c) 1999 by Sun Microsystems, Inc.
# All rights reserved.
#
#pragma ident   "@(#)keymap     1.15    99/05/12 SMI"

# This file loads keyboard mappings and initializes keyboard defaults

#
# Systems with no hardware keyboard ID will provide an eeprom value.
#
if test -x /usr/lib/set_keyboard_layout
then
        /usr/lib/set_keyboard_layout
fi

# Load the keymap for the attached keyboard.
/usr/bin/loadkeys

# Initialize the keyboard defaults

[ -h /dev/kbd -a -x /usr/bin/kbd ] &amp;&amp; /usr/bin/kbd -i &gt;/dev/null 2&gt;&amp;1


---=[ /etc/rcS.d/S35cacheos.sh ]=-----------------------------------------

#!/sbin/sh
#
# Copyright (c) 1996-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)cacheos    1.34    01/03/30 SMI"

cocdevconfig() {
        #
        # configure devices before setting up cache disk
        #

        exec &lt; $vfstab; readvfstab /proc
        if [ -n "$mountp" -a -d /proc ]; then
                /sbin/mount /proc &gt;/dev/null 2&gt;&amp;1
        fi

        _INIT_RECONFIG="set"; export _INIT_RECONFIG
        /sbin/sh /etc/init.d/drvconfig
        /sbin/sh /etc/init.d/devlinks
        _INIT_RECONFIG=""; export _INIT_RECONFIG

        /sbin/umount /proc &gt;/dev/null 2&gt;&amp;1
        [ -f /reconfigure ] &amp;&amp; /usr/bin/rm -f /reconfigure
}

dodots() {
        echo "Configuring cache and swap:&#92;c"
        (
                while :; do
                        /usr/bin/sleep 6
                        echo ".&#92;c"
                done
        ) &amp;
        dotpid=$!
}

coc_runprofile() {
        # Process the disk configuration profile

        if [ -f /.autoinstall/preinstall ]; then
                /usr/bin/mv /.autoinstall/preinstall &#92;
                    /.autoinstall/preinstall.done
                /sbin/sh /.autoinstall/preinstall.done
        fi

        if [ -f /.autoinstall/profile ]; then
                exec &lt; $vfstab; readvfstab /dev/fd
                if [ "$mountp" -a -d /dev/fd ]; then
                        /sbin/mount /dev/fd &gt;/dev/null 2&gt;&amp;1
                fi

                SWAPSIZE=`/sbin/bpgetfile swapsize | &#92;
                        (read junk size junk; echo $size)`

                [ -z "$SWAPSIZE" -o "$SWAPSIZE" -eq 0 ] &amp;&amp; SWAPSIZE=32
                SYS_SWAPSIZE=$SWAPSIZE; export SYS_SWAPSIZE

                /usr/sbin/install.d/cosinstall -c none &#92;
                        /.autoinstall/profile &gt;/dev/null

                [ $? -ne 0 ] &amp;&amp; fatal_err "Error in disk configuration."
                /sbin/umount /dev/fd &gt;/dev/null 2&gt;&amp;1
        fi
}

get_cachedev() {
        # Get cache device from vfstab

        exec &lt; $vfstab; readvfstab "$CACHEMNT"
        CACHEDEV=$special
        RCACHEDEV=$fsckdev

        if [ -z "$CACHEDEV" -o -z "$RCACHEDEV" ]; then

                # This is either a bug in cosinstall or the user made a bad
                # modification to vfstab.  Not much we can do here.

                fatal_err "Could not find $CACHEMNT entry in vfstab!"
        fi

        /usr/lib/fs/cachefs/cfstagchk $RCACHEDEV &gt;/dev/null 2&gt;&amp;1

        if [ $? -ne 0 ]; then
                if [ $newcache -ne 0 ]; then
                        fatal_reboot "Improperly tagged cache device!"
                else
                        fatal_reboot &#92;
                            "Improper cache device -- rebooting with -f flag"
                fi
        fi
}

make_cachefsinfo() {
        CACHEFSINFO="${CACHEMNT}/.cachefsinfo"
        BACKFS=`/usr/lib/fs/cachefs/cfsfstype -b`
        bfserr=$?
        BACKFSDEV=`/usr/lib/fs/cachefs/cfsfstype -d -b`
        bfsderr=$?
        if [ $bfserr -eq 0 -a $bfsderr -eq 0 ]; then
                echo "backfs=${BACKFS}" &gt; $CACHEFSINFO
                echo "backfsdev=${BACKFSDEV}" &gt;&gt; $CACHEFSINFO
        fi
}

add_booter() {
        ROOTPFDIR=/platform/${_INIT_UTS_MACHINE:=`/usr/bin/uname -m`}
        USRPFDIR=/usr/platform/${_INIT_UTS_PLATFORM:=`/usr/bin/uname -i`}

        if [ ! -d $CACHEMNT/$ROOTPFDIR ]; then
                /usr/bin/mkdir -p -m 0755 $CACHEMNT/$ROOTPFDIR
        fi

        if [ $_INIT_UTS_MACHINE != $_INIT_UTS_PLATFORM ]; then
                /usr/bin/ln -s $_INIT_UTS_MACHINE &#92;
                    $CACHEMNT/platform/$_INIT_UTS_PLATFORM
        fi

        for BOOTF in $ROOTPFDIR/ufsboot $ROOTPFDIR/boot/solaris/boot.bin; do
                if [ -f $BOOTF ]; then
                        BOOTFDIR=`/usr/bin/dirname $BOOTF`
                        [ -d $CACHEMNT/$BOOTFDIR ] || &#92;
                            /usr/bin/mkdir -m 0755 -p $CACHEMNT/$BOOTFDIR
                        cp -p $BOOTF $CACHEMNT/$BOOTF
                fi
        done

        if [ $_INIT_UTS_MACHINE = i86pc ]; then
                /usr/sbin/installboot $USRPFDIR/lib/fs/ufs/pboot &#92;
                    $USRPFDIR/lib/fs/ufs/bootblk $RCACHEDEV
        else
                /usr/sbin/installboot $USRPFDIR/lib/fs/ufs/bootblk $RCACHEDEV
        fi
}

fatal_reboot() {
        if [ $dotpid -ne 0 ]; then
                kill $dotpid &gt;/dev/null 2&gt;&amp;1
                kill $dotpid &gt;/dev/null 2&gt;&amp;1
        fi

        echo "&#92;nFATAL: $1"

        if [ -f /.cachefs-reboot ]; then
                /usr/bin/rm -f /.cachefs-reboot
                /usr/sbin/sync

                echo &#92;
                   "&#92;nTried to auto reboot with -f and there was still an error"

                /usr/sbin/halt
        else
                echo "cacheos" &gt; /.cachefs-reboot
                /usr/sbin/sync
                echo "&#92;nrebooting"
                /usr/sbin/reboot -- -f
        fi
}

fatal_err() {
        if [ $dotpid -ne 0 ]; then
                kill $dotpid &gt;/dev/null 2&gt;&amp;1
                kill $dotpid &gt;/dev/null 2&gt;&amp;1
        fi

        echo "&#92;nFATAL: $1"
        /usr/sbin/halt
}

# See if the root file system type is "cachefs".  If so, we do the
# work necessary for caching root and /usr on a "cache-only-client".
# We either create a new cache or validate an existing cache, and
# get the cache "front file system" mounted so that everything is
# in place when S40standardmounts runs and does (re)mounts using cachefs.

ROOTFS=`/usr/lib/fs/cachefs/cfsfstype -r 2&gt;/dev/null`

if [ "x$ROOTFS" = xcachefs ]; then
        dotpid=0
        CACHEMNT=/.cache
        CACHEDIR=$CACHEMNT/rootcache
        IMARK=/COSINSTALL
        RMARK=/reconfigure
        newcache=0
        cfsfsckflags="-o nonoclean"
        
        if [ -f $IMARK -o "$_CACHEFS_FLUSHCACHE" = YES -o -f $RMARK ]; then
                newcache=1
        fi
        
        if [ $newcache -ne 0 ]; then
                cocdevconfig
                dodots
                coc_runprofile
                get_cachedev
                make_cachefsinfo
                add_booter
                /usr/bin/rm -f $IMARK
        else
                dodots
                get_cachedev
        
                # Check and mount the cache
        
                /usr/sbin/fsck -o p $RCACHEDEV &gt;/dev/null 2&gt;&amp;1
                fsckerr=$?
        
                if [ $fsckerr -ne 0 ]; then
                        /usr/lib/fs/cachefs/cfsfstype -n
                        /usr/sbin/fsck -y $RCACHEDEV &gt;/dev/null 2&gt;&amp;1
                        fsckerr=$?
                        cfsfsckflags="${cfsfsckflags},noclean"
                fi
        
                if [ $fsckerr -ne 0 ]; then
                        &gt; $IMARK
                        fatal_reboot "Could not fsck $RCACHEDEV."
                fi
        
                FRONTFS=`/usr/lib/fs/cachefs/cfsfstype -f 2&gt;/dev/null`
                if [ -z "$FRONTFS" ]; then
                        /usr/sbin/mount $CACHEDEV $CACHEMNT || &#92;
                            fatal_err "Could not mount cache device $CACHEDEV."
                else
                        /usr/lib/fs/cachefs/cfsfstype -c $CACHEMNT || &#92;
                            fatal_err "Could not convert $CACHEDEV."
                fi
        fi
        
        [ -f /.cachefs-reboot ] &amp;&amp; /usr/bin/rm -f /.cachefs-reboot
        
        if [ -d $CACHEDIR ]; then
                /usr/sbin/fsck -F cachefs $cfsfsckflags $CACHEDIR || &#92;
                    /usr/bin/rm -rf $CACHEDIR
        fi
        
        if [ ! -d $CACHEDIR ]; then
                /usr/lib/fs/cachefs/cfsadmin -c $CACHEDIR || &#92;
                    fatal_err "Could not create cache in $CACHEDIR."
        
                kill $dotpid &gt;/dev/null 2&gt;&amp;1
                kill $dotpid &gt;/dev/null 2&gt;&amp;1
                echo "done."
        fi
fi


---=[ /etc/rcS.d/S35svm.init ]=-------------------------------------------

#!/bin/sh
#
#pragma ident   "@(#)svm.init   1.4     01/02/07 SMI"
#
# Copyright (c) 1992, 1993, 1994, 2000 by Sun Microsystems, Inc.
# All rights reserved.
#
# SUNWmd.init
#
#       Metadisk driver single-user startup/shutdown.

METAINIT=/usr/sbin/metainit
METADEV=/dev/md/admin

case "$1" in

'start')
        rm -f /tmp/.mdlock
        if [ -s /kernel/drv/md.conf ] &amp;&amp; &#92;
                grep '^mddb_bootlist' /kernel/drv/md.conf &gt;/dev/null 2&gt;&amp;1; then
                        if [ -x "$METAINIT" -a -c "$METADEV" ]; then
                                $METAINIT -r
                                error=$?
                                case "$error" in
                                0|1)    ;;

                                66)
echo "Insufficient metadevice database replicas located."
echo ""
echo "Use metadb to delete databases which are broken."
echo "Ignore any &#92;"Read-only file system&#92;" error messages."
echo "Reboot the system when finished to reload the metadevice database."
echo "After reboot, repair any broken database replicas which were deleted."
                        /sbin/sulogin &lt; /dev/console
echo "Resuming system initialization. Metadevice database will remain stale."
                                        ;;
                
                                *)      echo "Unknown $METAINIT -r failure $error."
                                        ;;
                                esac
                        fi
        fi
        ;;

'stop') ;;

*)      echo "Usage: $0 { start | stop }"
        ;;

esac


---=[ /etc/rcS.d/S40standardmounts.sh ]=----------------------------------

#!/sbin/sh
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&amp;T.
# All rights reserved.
#
# THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&amp;T
# The copyright notice above does not evidence any
# actual or intended publication of such source code.
#
# Copyright (c) 1991-1994, 1997-1998, 2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)standardmounts     1.22    01/06/17 SMI"

# Mount /proc early because swap depends on isaexec, which uses /proc

exec &lt; $vfstab; readvfstab /proc
if [ "$mountp" -a -d /proc ]; then
        /sbin/mount /proc &gt;/dev/null 2&gt;&amp;1
        if [ $? != 0 ]; then
                echo "WARNING: /proc could not be mounted" &gt;&amp; 2
        fi
fi

# Mount /etc/mnttab early so apps can get accurate info about mounts

havemnttab=yes;
/sbin/mount -F mntfs mnttab /etc/mnttab &gt;/dev/null 2&gt;&amp;1
if [ $? != 0 ]; then
        havemnttab=no;
fi

# Add physical swap.

/sbin/swapadd -1

# Check and remount the / (root) file system.
# For NFS mounts, force the llock option on.

exec &lt; $vfstab; readvfstab /
checkfs $fsckdev $fstype $mountp
checkopt "llock" $mntopts
mntopts='remount'

[ -n "$otherops" ] &amp;&amp; mntopts="${mntopts},${otherops}"
[ "$fstype" = nfs -o "$fstype" = cachefs ] &amp;&amp; mntopts="${mntopts},llock"

/sbin/mount -m -o $mntopts $mountp

# If the mount of the mnttab failed, let's try again
if [ "$havemnttab" = "no" ]; then 
        if [ ! -f /etc/mnttab ] ; then
                rm -rf /etc/mnttab
                &gt;/etc/mnttab
                chmod 444 /etc/mnttab
                chgrp root /etc/mnttab
        fi
        /sbin/mount -F mntfs mnttab /etc/mnttab
fi

# Check and remount the /usr file system (formerly mounted read-only).

exec &lt; $vfstab; readvfstab /usr

if [ "$mountp" ]; then
        if [ "$fstype" = cachefs ]; then
                /sbin/mount -F cachefs -O -o $mntopts $special $mountp
        else
                checkopt ro $mntopts
                if [ "x$option" != xro ]; then
                        checkfs $fsckdev $fstype $mountp
                        if [ "x$mntopts" != x- ]; then
                                mntopts="remount,$mntopts"
                        else
                                mntopts="remount"
                        fi
                        /sbin/mount -o $mntopts $mountp
                fi
        fi
fi

# Check and mount the /usr/platform file system.  This should only be
# present when a SunOS 5.5 (Solaris 2.5) or greater client is being
# administered by a SunOS 5.4 or less host.

exec &lt; $vfstab; readvfstab /usr/platform

if [ "$mountp" ]; then
        checkfs ${fsckdev} ${fstype} ${mountp}
        if [ "x$mntopts" != x- ]; then
                /sbin/mount -o $mntopts $mountp
        else
                /sbin/mount $mountp
        fi
fi

# Mount the fd file systems if mount point exists.

exec &lt; $vfstab; readvfstab /dev/fd
if [ "$mountp" -a -d /dev/fd ]; then
        /sbin/mount /dev/fd &gt;/dev/null 2&gt;&amp;1
fi

# Clean up existing /etc/dfs/sharetab as there are no shared file systems
# at this point. This also takes care of a corrupt sharetab.

if [ -f /etc/dfs/sharetab ]; then
        &gt; /etc/dfs/sharetab
fi


---=[ /etc/rcS.d/S41cachefs.root ]=---------------------------------------

#!/sbin/sh
#
# Copyright (c) 1995, 1997 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)cachefs.root       1.2     97/12/08 SMI"

# If the root is a cachefs file system, start the cachefsd for it.
# If the root is not disconnectable then the cachefsd exits.

if [ "x`/usr/lib/fs/cachefs/cfsfstype -r 2&gt;/dev/null`" = xcachefs ]; then
        /usr/lib/fs/cachefs/cachefsd -r /.cache/rootcache
fi


---=[ /etc/rcS.d/S42coreadm ]=--------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1999 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)coreadm    1.2     99/09/06 SMI"
#
# Restore the core file configuration that was in effect before reboot.
# This is the first opportunity to do this since 'coreadm -u' rewrites
# /etc/coreadm.conf and only now is the root file system mounted read/write.
#
if [ -x /usr/bin/coreadm ]; then
        /usr/bin/coreadm -u
        if [ -f /etc/coreadm.conf ]; then
                . /etc/coreadm.conf
                /usr/bin/coreadm -p "$COREADM_INIT_PATTERN" -- -1
        fi
fi


---=[ /etc/rcS.d/S50devfsadm ]=-------------------------------------------

#!/sbin/sh
#
# Copyright 1998-2002 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
#ident  "@(#)devfsadm   1.13    02/01/11 SMI"

case "$1" in
'start')
        if [ -n "$_INIT_RECONFIG" ]; then
                echo 'Configuring /dev and /devices'
                /usr/sbin/devfsadm &gt;/dev/msglog 2&gt;&amp;1
                if [ -x /usr/ucb/ucblinks -a -f /usr/ucblib/ucblinks.awk ]; then
                        echo 'Configuring the /dev directory (compatibility devices)'
                        /usr/ucb/ucblinks &gt;/dev/null 2&gt;&amp;1
                fi

                #
                # Flush any existing socket mappings since the major numbers of
                # the device files may have changed.
                #
                /usr/bin/awk '/^[^#]/ { print $1, $2, $3 }' /etc/sock2path | &#92;
                        /sbin/soconfig -f /dev/fd/0 &gt;/dev/null 2&gt;&amp;1
                /sbin/soconfig -f /etc/sock2path &gt;/dev/null 2&gt;&amp;1
        else
                #
                # Update kernel driver.conf cache, picking up new ones
                # from outside / and /usr, if any.
                #
                /usr/sbin/devfsadm -I
        fi

        /usr/lib/sysevent/syseventd &gt;/dev/msglog 2&gt;&amp;1

        # Establish the default framebuffer name.

        fbdev=`/usr/sbin/prtconf -F 2&gt;/dev/null`

        if [ $? -eq 0 ]; then
                set -- /devices$fbdev*
                if [ -c $1 ]; then
                        rm -f /dev/fb
                        ln -s $1 /dev/fb
                fi
        fi
        ;;

#
# devfsadmd, rcm_daemon and syseventconfd are started on-demand
# by syseventd. syseventd should be stopped before others.
#
'stop')
        /usr/bin/pkill -x -u 0 -P 1 syseventd
        /usr/bin/pkill -x -u 0 -P 1 rcm_daemon
        /usr/bin/pkill -x -u 0 -P 1 devfsadm
        /usr/bin/pkill -x -u 0 -P 1 syseventconfd
        ;;      

*)
        echo "Usage: $0 { start | stop }"
        ;;

esac
exit 0


---=[ /etc/rcS.d/S70buildmnttab.sh ]=-------------------------------------

#!/sbin/sh
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&amp;T.
# All rights reserved.
#
# THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&amp;T
# The copyright notice above does not evidence any
# actual or intended publication of such source code.
#
# Copyright (c) 1991-2001 by Sun Microsystems, Inc.
# All rights reserved.
#
#ident  "@(#)buildmnttab        1.17    01/06/17 SMI"

# Mount other file systems to be available in single user mode. Currently,
# these are /var, /var/adm, and /var/run. A change here will require a
# modification to the following scripts (and documentation): /sbin/mountall,
# /sbin/umountall, /sbin/rc0, and /sbin/rc6.

for fs in /var /var/adm; do
        exec &lt; $vfstab; readvfstab $fs
        if [ -n "$mountp" ]; then
                checkfs $fsckdev $fstype $mountp
                if [ "x$mntopts" != x- ]; then
                        /sbin/mount -o $mntopts $mountp
                else
                        /sbin/mount $mountp
                fi
        fi
done

/sbin/mount -F tmpfs swap /var/run


---=[ /etc/rcS.d/S95picld ]=----------------------------------------------

#!/sbin/sh
#
# Copyright (c) 1999-2000 by Sun Microsystems, Inc.
# All rights reserved.
# ident "@(#)picld      1.2     00/07/17 SMI"
#

case "$1" in
'start')
        if [ -x /usr/lib/picl/picld ]; then
                /usr/lib/picl/picld
        fi
        ;;

'stop')
        /usr/bin/pkill -x -u 0 '(picld)'
        ;;

*)
        echo "Usage: $0 { start | stop }"
        exit 1
        ;;
esac
exit 0


---=[ HTTPD ]=------------------------------------------------------------

WEB=IHS/6.1.0.25


---=[ Lun Map ]=----------------------------------------------------------

n/a

Created 2012-03-01 01:15:00 with cfg2html_solaris version 1.6.4
